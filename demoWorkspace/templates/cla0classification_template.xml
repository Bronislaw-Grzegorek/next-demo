<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<!--
@<COPYRIGHT>@
==================================================
Copyright 2020.
Siemens Product Lifecycle Management Software Inc.
All Rights Reserved.
==================================================
@<COPYRIGHT>@
--><TcBusinessData xmlns="http://teamcenter.com/BusinessModel/TcBusinessData" Date="Wed Oct 20 03:18:22 PM 2021" TcVersion="tc13000.0.0">
    <Add>
   <Functionality description="Component for the template - cla0classification" displayName="Classification Interface" enabledForVerificationRules="false" name="Cla0classification"/>

   <Library createRelease="tc12000.3.0" description="Common service library for all classification systems" isThirdParty="false" name="Cla0SoaClassificationCommon" namespace="Cla0::Soa::ClassificationCommon" serviceLibrary="true"/>
   <ServiceInterface createRelease="tc12000.3.0" dependencies="" description="The Classification service serves as a common entry point for interacting with all the underlying classification systems. The service allows users to create classification objects and associate them to workspace objects in order to classify the workspace objects. It can also be used to perform add, update, or delete operations on classification objects and retrieve information about them.&lt;br /&gt;&lt;br /&gt;The Classification service contains operations to achieve the following: &lt;br /&gt;&lt;ul&gt;&lt;ul&gt;&lt;li type=&quot;disc&quot;&gt;Create classification objects and optionally attach them to workspace objects.&lt;/li&gt;&lt;li type=&quot;disc&quot;&gt;Update existing classification objects.&lt;/li&gt;&lt;li type=&quot;disc&quot;&gt;Delete existing classification objects.&lt;/li&gt;&lt;li type=&quot;disc&quot;&gt;Get information on classification objects.&lt;/li&gt;&lt;li type=&quot;disc&quot;&gt;Create graphics based on part family templates or based on template parts&lt;/li&gt;&lt;/ul&gt;&lt;/ul&gt;" libraryName="Cla0SoaClassificationCommon" name="Classification" namespace="Cla0::Soa::ClassificationCommon" serviceLibraryRef=""/>
   <Struct createRelease="tc12000.3.0" description="Holds information on created, updated or deleted classification objects." isPublished="true" name="ClassificationObjectResponse" namespace="Cla0::Soa::ClassificationCommon::_2020_01::Classification" scope="Cla0::Soa::ClassificationCommon::Classification">
     <StructElement description="This is a JSON string containing information about the created, updated, retrieved or deleted classification objects.&lt;br /&gt;Any failures occurred during the operation will be specified in the JSON string under the 'ErrorDetails' container. The response structure will follow the JSON schema defined in the file: TC_DATA\classification\json\cla\1.0.0\schema\Response.schema.json.&lt;br /&gt;Refer the following sample responses for operations on classification objects:&lt;br /&gt;Save and Retrieve:- TC_DATA\classification\json\cla\1.0.0\samples\GetClassificationObjects_Response_sample.json&lt;br /&gt;Delete:- TC_DATA\classification\json\cla\1.0.0\samples\DeleteClassificationObjects_Response_sample.json&lt;br /&gt;Error:- TC_DATA\classification\json\cla\1.0.0\samples\SaveClassificationObjects_Error_Response_sample.json" name="jsonResponse">
       <DataTypeRefParam dataType="std::string"/>
     </StructElement>
     <StructElement description="This is a placeholder for future use. All information about the created, updated and deleted classification objects and any errors, occurred during the operation, will be returned in the JSON response string." name="serviceData">
       <DataTypeRefParam dataType="Teamcenter::Soa::Server::ServiceData"/>
     </StructElement>
   </Struct>
   <Struct createRelease="tc13000.1.0" description="This structure holds additional properties that may be returned for a class." isPublished="false" name="AdditionalProperties" namespace="Cla0::Soa::Internal::ClassificationCommon::_2020_12::Classification" scope="Cla0::Soa::ClassificationCommon::Classification">
     <StructElement description="The name of the property." name="propertyName">
       <DataTypeRefParam dataType="std::string"/>
     </StructElement>
     <StructElement description="The index of the property." name="index">
       <DataTypeRefParam dataType="int"/>
     </StructElement>
     <StructElement description="The value of the property." name="propertyValue">
       <DataTypeRefParam dataType="std::string"/>
     </StructElement>
   </Struct>
   <Struct createRelease="tc13000.1.0" description="A structure representing the datatype of a Class attribute." isPublished="false" name="AttributeDataType" namespace="Cla0::Soa::Internal::ClassificationCommon::_2020_12::Classification" scope="Cla0::Soa::ClassificationCommon::Classification">
     <StructElement description="The type (Ex: &amp;lsquo;String&amp;rsquo;)." name="type">
       <DataTypeRefParam dataType="Cla0::Soa::Internal::ClassificationCommon::_2020_12::Classification::DataType"/>
     </StructElement>
     <StructElement description="Number of digits." name="numberOfDigits">
       <DataTypeRefParam dataType="int"/>
     </StructElement>
     <StructElement description="Max length." name="maxLength">
       <DataTypeRefParam dataType="int"/>
     </StructElement>
     <StructElement description="Determines if datatype is localizable. If true, the datatype is Localizable. (Used by Datatypes of type String)." name="isLocalizable">
       <DataTypeRefParam dataType="bool"/>
     </StructElement>
     <StructElement description="Determines if datatype is Polymorphic Controller. If true, the datatype is a polymorphic controller (Used by String Datatypes)." name="isPolymorphicController">
       <DataTypeRefParam dataType="bool"/>
     </StructElement>
     <StructElement description="The datatype block reference." name="blockReference">
       <DataTypeRefParam dataType="std::string"/>
     </StructElement>
     <StructElement description="The cardinality controller." name="cardinalityController">
       <DataTypeRefParam dataType="std::string"/>
     </StructElement>
     <StructElement description="The non metric format." name="nonMetricFormat">
       <DataTypeRefParam dataType="Cla0::Soa::Internal::ClassificationCommon::_2020_12::Classification::AttributeFormat"/>
     </StructElement>
     <StructElement description="The metric format." name="metricFormat">
       <DataTypeRefParam dataType="Cla0::Soa::Internal::ClassificationCommon::_2020_12::Classification::AttributeFormat"/>
     </StructElement>
   </Struct>
   <Struct createRelease="tc13000.1.0" description="A structure representing the format of the attribute." isPublished="false" name="AttributeFormat" namespace="Cla0::Soa::Internal::ClassificationCommon::_2020_12::Classification" scope="Cla0::Soa::ClassificationCommon::Classification">
     <StructElement description="The precision of the Class Attribute&amp;rsquo;s datatype format." name="precision">
       <DataTypeRefParam dataType="int"/>
     </StructElement>
     <StructElement description="The scale of the Class Attribute&amp;rsquo;s datatype format." name="scale">
       <DataTypeRefParam dataType="int"/>
     </StructElement>
     <StructElement description="The unit. ex: &amp;quot;mm&amp;quot;. The supported values are determined by Teamcenter configuration." name="unit">
       <DataTypeRefParam dataType="std::string"/>
     </StructElement>
     <StructElement description="The KeyLOV of the datatype." name="keyLOV">
       <DataTypeRefParam dataType="std::string"/>
     </StructElement>
     <StructElement description="Maximum number of digits that the Class Attribute supports." name="numberOfDigits">
       <DataTypeRefParam dataType="int"/>
     </StructElement>
     <StructElement description="The NX Unit ID of the class attribute's datatype." name="nxUnitID">
       <DataTypeRefParam dataType="std::string"/>
     </StructElement>
   </Struct>
   <Struct createRelease="tc13000.1.0" description="An Axis property value." isPublished="false" name="AxisValue" namespace="Cla0::Soa::Internal::ClassificationCommon::_2020_12::Classification" scope="Cla0::Soa::ClassificationCommon::Classification">
     <StructElement description="Determines if property has an unused value. If true, value elements are saved; otherwise, saved as null." name="hasValue">
       <DataTypeRefParam dataType="bool"/>
     </StructElement>
     <StructElement description="The X position value of the axis." name="posX">
       <DataTypeRefParam dataType="double"/>
     </StructElement>
     <StructElement description="The Y position value of the axis." name="posY">
       <DataTypeRefParam dataType="double"/>
     </StructElement>
     <StructElement description="The Z position value of the axis." name="posZ">
       <DataTypeRefParam dataType="double"/>
     </StructElement>
     <StructElement description="The X rotation value of the axis." name="rotX">
       <DataTypeRefParam dataType="double"/>
     </StructElement>
     <StructElement description="The Y rotation value of the axis." name="rotY">
       <DataTypeRefParam dataType="double"/>
     </StructElement>
     <StructElement description="The Z rotation value of the axis." name="rotZ">
       <DataTypeRefParam dataType="double"/>
     </StructElement>
     <StructElement description="The unit type of the property." name="unit">
       <DataTypeRefParam dataType="std::string"/>
     </StructElement>
   </Struct>
   <Struct createRelease="tc13000.1.0" description="A block property value, containing block properties." isPublished="false" name="BlockPropertyValue" namespace="Cla0::Soa::Internal::ClassificationCommon::_2020_12::Classification" scope="Cla0::Soa::ClassificationCommon::Classification">
     <StructElement description="Determines if property has an unused value. If true, value elements are saved; otherwise, saved as null." name="hasValue">
       <DataTypeRefParam dataType="bool"/>
     </StructElement>
     <StructElement description="The IRDI of the block's class definition." name="classDefinitionIRDI">
       <DataTypeRefParam dataType="std::string"/>
     </StructElement>
     <StructElement description="The properties on the block." name="properties">
       <DataTypeRefParam dataType="std::vector">
          <DataTypeRefParam dataType="Cla0::Soa::Internal::ClassificationCommon::_2020_12::Classification::ClassificationProperty"/>
       </DataTypeRefParam>
     </StructElement>
   </Struct>
   <Struct createRelease="tc13000.1.0" description="A boolean property value." isPublished="false" name="BooleanValue" namespace="Cla0::Soa::Internal::ClassificationCommon::_2020_12::Classification" scope="Cla0::Soa::ClassificationCommon::Classification">
     <StructElement description="Determines if property has an unused value. If true, value elements are saved; otherwise, saved as null." name="hasValue">
       <DataTypeRefParam dataType="bool"/>
     </StructElement>
     <StructElement description="The value of the boolean property." name="boolVal">
       <DataTypeRefParam dataType="bool"/>
     </StructElement>
   </Struct>
   <Struct createRelease="tc13000.1.0" description="A structure representing a class attribute." isPublished="false" name="ClassAttribute" namespace="Cla0::Soa::Internal::ClassificationCommon::_2020_12::Classification" scope="Cla0::Soa::ClassificationCommon::Classification">
     <StructElement description="The attribute index." name="attributeIndex">
       <DataTypeRefParam dataType="int"/>
     </StructElement>
     <StructElement description="The DB index of the attribute." name="dbIndex">
       <DataTypeRefParam dataType="int"/>
     </StructElement>
     <StructElement description="The type of the attribute." name="type">
       <DataTypeRefParam dataType="std::string"/>
     </StructElement>
     <StructElement description="The reference of the attribute." name="reference">
       <DataTypeRefParam dataType="std::string"/>
     </StructElement>
     <StructElement description="The cardinality of the attribute. The value represents the number of cardinal attributes." name="cardinality">
       <DataTypeRefParam dataType="int"/>
     </StructElement>
     <StructElement description="The anntation of the attribute." name="annotation">
       <DataTypeRefParam dataType="Cla0::Soa::Internal::ClassificationCommon::_2020_12::Classification::L10NProperty"/>
     </StructElement>
     <StructElement description="The name of the attribute." name="name">
       <DataTypeRefParam dataType="Cla0::Soa::Internal::ClassificationCommon::_2020_12::Classification::L10NProperty"/>
     </StructElement>
     <StructElement description="The datatype of the attribute." name="dataType">
       <DataTypeRefParam dataType="Cla0::Soa::Internal::ClassificationCommon::_2020_12::Classification::AttributeDataType"/>
     </StructElement>
     <StructElement description="A list of userdata for the attribute." name="userData">
       <DataTypeRefParam dataType="std::vector">
          <DataTypeRefParam dataType="Cla0::Soa::Internal::ClassificationCommon::_2020_12::Classification::UserDataEntry"/>
       </DataTypeRefParam>
     </StructElement>
     <StructElement description="A list of additional properties for the class attribute." name="additionalProperties">
       <DataTypeRefParam dataType="std::vector">
          <DataTypeRefParam dataType="Cla0::Soa::Internal::ClassificationCommon::_2020_12::Classification::AdditionalProperties"/>
       </DataTypeRefParam>
     </StructElement>
   </Struct>
   <Struct createRelease="tc13000.1.0" description="A structure representing a classDefinition, containing properties of the class." isPublished="false" name="ClassDefinition" namespace="Cla0::Soa::Internal::ClassificationCommon::_2020_12::Classification" scope="Cla0::Soa::ClassificationCommon::Classification">
     <StructElement description="The International Registration Data Identifier ( IRDI ) of the class." name="irdi">
       <DataTypeRefParam dataType="std::string"/>
     </StructElement>
     <StructElement description="The namespace of the class." name="classNamespace">
       <DataTypeRefParam dataType="std::string"/>
     </StructElement>
     <StructElement description="The ID to use during ClassDefinition creation." name="id">
       <DataTypeRefParam dataType="std::string"/>
     </StructElement>
     <StructElement description="Defines the Revision to use during ClassDefinition creation." name="revision">
       <DataTypeRefParam dataType="std::string"/>
     </StructElement>
     <StructElement description="The status of the ClassDefinition. Currently ClassDefinition supports &amp;ldquo;Develop&amp;rdquo;, &amp;ldquo;Released&amp;rdquo; and &amp;ldquo;Retired&amp;rdquo; status. &amp;ldquo;Develop&amp;rdquo; status means an object is still under development and can be changed. &amp;ldquo;Released&amp;rdquo; objects are finalized and ready to use. &amp;ldquo;Retired&amp;rdquo; objects should not be used anymore." name="status">
       <DataTypeRefParam dataType="std::string"/>
     </StructElement>
     <StructElement description="The type of the class." name="classType">
       <DataTypeRefParam dataType="std::string"/>
     </StructElement>
     <StructElement description="Defines the instantiation of the ClassDefinition. If this property is set to True; user will not be able to save any instances of this ClassDefinition. If this property is set to False; user will be able to save any instances of this ClassDefinition. Abstract classes are used primarily to gather common attributes that are inherited by child (descendant) classes." name="isAbstract">
       <DataTypeRefParam dataType="bool"/>
     </StructElement>
     <StructElement description="Determines the unitSystem of the class. 0 indicates non Metric. 1 indicates Metric, 2 indicates both." name="unitSystem">
       <DataTypeRefParam dataType="int"/>
     </StructElement>
     <StructElement description="Defines the name of the KeyLOVDefinition. This can be either A simple string or an L10N construct." name="name">
       <DataTypeRefParam dataType="Cla0::Soa::Internal::ClassificationCommon::_2020_12::Classification::L10NProperty"/>
     </StructElement>
     <StructElement description="Defines the short name of the KeyLOVDefinition. This can be either a simple string or an L10N construct." name="shortName">
       <DataTypeRefParam dataType="Cla0::Soa::Internal::ClassificationCommon::_2020_12::Classification::L10NProperty"/>
     </StructElement>
     <StructElement description="The definition of the KeyLOVDefinition. This can be either a simple string or an L10N construct." name="definition">
       <DataTypeRefParam dataType="Cla0::Soa::Internal::ClassificationCommon::_2020_12::Classification::L10NProperty"/>
     </StructElement>
     <StructElement description="Defines the note of the ClassDefinition. This can be either a simple string or an L10N construct." name="note">
       <DataTypeRefParam dataType="Cla0::Soa::Internal::ClassificationCommon::_2020_12::Classification::L10NProperty"/>
     </StructElement>
     <StructElement description="Defines the remark of the ClassDefinition. This can be either a simple string or an L10N construct." name="remark">
       <DataTypeRefParam dataType="Cla0::Soa::Internal::ClassificationCommon::_2020_12::Classification::L10NProperty"/>
     </StructElement>
     <StructElement description="The list of attributes of the class." name="classAttributes">
       <DataTypeRefParam dataType="std::vector">
          <DataTypeRefParam dataType="Cla0::Soa::Internal::ClassificationCommon::_2020_12::Classification::ClassAttribute"/>
       </DataTypeRefParam>
     </StructElement>
     <StructElement description="A list of additional properties of the class." name="additionalProperties">
       <DataTypeRefParam dataType="std::vector">
          <DataTypeRefParam dataType="Cla0::Soa::Internal::ClassificationCommon::_2020_12::Classification::AdditionalProperties"/>
       </DataTypeRefParam>
     </StructElement>
   </Struct>
   <Struct createRelease="tc13000.1.0" description="The definition of a classification object. The local properties and IDs of blocks are stored in the properties list.&lt;br /&gt;Required properties: classificationObjectUID, nodeID, and unitSystem." isPublished="false" name="ClassificationObject" namespace="Cla0::Soa::Internal::ClassificationCommon::_2020_12::Classification" scope="Cla0::Soa::ClassificationCommon::Classification">
     <StructElement description="The UID of the classification object." name="classificationObjectUID">
       <DataTypeRefParam dataType="std::string"/>
     </StructElement>
     <StructElement description="The ID of the classification object." name="objectID">
       <DataTypeRefParam dataType="std::string"/>
     </StructElement>
     <StructElement description="The UID of the classified object." name="classifiedObjectUID">
       <DataTypeRefParam dataType="std::string"/>
     </StructElement>
     <StructElement description="The ID of the node under which the classification object has been classified." name="nodeID">
       <DataTypeRefParam dataType="std::string"/>
     </StructElement>
     <StructElement description="The unit system of the classification object." name="unitSystem">
       <DataTypeRefParam dataType="int"/>
     </StructElement>
     <StructElement description="A list of properties belonging to the classification object." name="properties">
       <DataTypeRefParam dataType="std::vector">
          <DataTypeRefParam dataType="Cla0::Soa::Internal::ClassificationCommon::_2020_12::Classification::ClassificationProperty"/>
       </DataTypeRefParam>
     </StructElement>
   </Struct>
   <Struct createRelease="tc13000.1.0" description="A classification property. The value(s) of the property are stored in one of the value arrays, and the stored datatype can be used to tell which array the value(s) are stored in.&lt;br /&gt;Required properties: datatype, iD." isPublished="false" name="ClassificationProperty" namespace="Cla0::Soa::Internal::ClassificationCommon::_2020_12::Classification" scope="Cla0::Soa::ClassificationCommon::Classification">
     <StructElement description="The identifier of the classification property." name="id">
       <DataTypeRefParam dataType="std::string"/>
     </StructElement>
     <StructElement description="The datatype of the classification property." name="datatype">
       <DataTypeRefParam dataType="Cla0::Soa::Internal::ClassificationCommon::_2020_12::Classification::DataType"/>
     </StructElement>
     <StructElement description="A list of string values of the classification property." name="stringValues">
       <DataTypeRefParam dataType="std::vector">
          <DataTypeRefParam dataType="Cla0::Soa::Internal::ClassificationCommon::_2020_12::Classification::StringValue"/>
       </DataTypeRefParam>
     </StructElement>
     <StructElement description="A list of integer values of the classification property." name="integerValues">
       <DataTypeRefParam dataType="std::vector">
          <DataTypeRefParam dataType="Cla0::Soa::Internal::ClassificationCommon::_2020_12::Classification::IntegerValue"/>
       </DataTypeRefParam>
     </StructElement>
     <StructElement description="A list of double values of the classification property." name="doubleValues">
       <DataTypeRefParam dataType="std::vector">
          <DataTypeRefParam dataType="Cla0::Soa::Internal::ClassificationCommon::_2020_12::Classification::DoubleValue"/>
       </DataTypeRefParam>
     </StructElement>
     <StructElement description="A list of date values of the classification property." name="dateValues">
       <DataTypeRefParam dataType="std::vector">
          <DataTypeRefParam dataType="Cla0::Soa::Internal::ClassificationCommon::_2020_12::Classification::DateValue"/>
       </DataTypeRefParam>
     </StructElement>
     <StructElement description="A list of boolean values of the classification property." name="booleanValues">
       <DataTypeRefParam dataType="std::vector">
          <DataTypeRefParam dataType="Cla0::Soa::Internal::ClassificationCommon::_2020_12::Classification::BooleanValue"/>
       </DataTypeRefParam>
     </StructElement>
     <StructElement description="A list of ValueRange values of the classification property." name="valueRangeValues">
       <DataTypeRefParam dataType="std::vector">
          <DataTypeRefParam dataType="Cla0::Soa::Internal::ClassificationCommon::_2020_12::Classification::ValueRangeValue"/>
       </DataTypeRefParam>
     </StructElement>
     <StructElement description="A list of ValueWithTolerance values of the classification property." name="valueWithToleranceValues">
       <DataTypeRefParam dataType="std::vector">
          <DataTypeRefParam dataType="Cla0::Soa::Internal::ClassificationCommon::_2020_12::Classification::ValueWithToleranceValue"/>
       </DataTypeRefParam>
     </StructElement>
     <StructElement description="A list of  Level values of the classification property." name="levelValues">
       <DataTypeRefParam dataType="std::vector">
          <DataTypeRefParam dataType="Cla0::Soa::Internal::ClassificationCommon::_2020_12::Classification::LevelValue"/>
       </DataTypeRefParam>
     </StructElement>
     <StructElement description="A list of Position values of the classification property." name="positionValues">
       <DataTypeRefParam dataType="std::vector">
          <DataTypeRefParam dataType="Cla0::Soa::Internal::ClassificationCommon::_2020_12::Classification::PositionValue"/>
       </DataTypeRefParam>
     </StructElement>
     <StructElement description="A list of Axis values of the classification property." name="axisValues">
       <DataTypeRefParam dataType="std::vector">
          <DataTypeRefParam dataType="Cla0::Soa::Internal::ClassificationCommon::_2020_12::Classification::AxisValue"/>
       </DataTypeRefParam>
     </StructElement>
     <StructElement description="A list of block property values of the classification property." name="blockValues">
       <DataTypeRefParam dataType="std::vector">
          <DataTypeRefParam dataType="Cla0::Soa::Internal::ClassificationCommon::_2020_12::Classification::BlockPropertyValue"/>
       </DataTypeRefParam>
     </StructElement>
   </Struct>
   <Struct createRelease="tc13000.1.0" description="The context (e.g. Library) in which the request is to be processed. To get the classification object, do not specify the context." isPublished="false" name="Context" namespace="Cla0::Soa::Internal::ClassificationCommon::_2020_12::Classification" scope="Cla0::Soa::ClassificationCommon::Classification">
     <StructElement description="The type of context." name="type">
       <DataTypeRefParam dataType="std::string"/>
     </StructElement>
     <StructElement description="The ID of the context. (For Type 'Library', ID would be Library ID)" name="id">
       <DataTypeRefParam dataType="std::string"/>
     </StructElement>
     <StructElement description="The ID of the Library Hierarchy. Applicable only for Type 'Library'." name="hierarchy">
       <DataTypeRefParam dataType="std::string"/>
     </StructElement>
   </Struct>
   <MetaEnum createRelease="tc13000.1.0" description="The datatype of a property value." isPublished="false" name="DataType" namespace="Cla0::Soa::Internal::ClassificationCommon::_2020_12::Classification" scope="Cla0::Soa::ClassificationCommon::Classification">
     <MetaEnumLiteral description="" name="PROPERTY_FORMAT_STRING"/>
     <MetaEnumLiteral description="" name="PROPERTY_FORMAT_INTEGER"/>
     <MetaEnumLiteral description="" name="PROPERTY_FORMAT_DOUBLE"/>
     <MetaEnumLiteral description="" name="PROPERTY_FORMAT_DATE"/>
     <MetaEnumLiteral description="" name="PROPERTY_FORMAT_BOOLEAN"/>
     <MetaEnumLiteral description="" name="PROPERTY_FORMAT_VALUE_RANGE"/>
     <MetaEnumLiteral description="" name="PROPERTY_FORMAT_VALUE_WITH_TOLERANCE"/>
     <MetaEnumLiteral description="" name="PROPERTY_FORMAT_LEVEL"/>
     <MetaEnumLiteral description="" name="PROPERTY_FORMAT_POSITION"/>
     <MetaEnumLiteral description="" name="PROPERTY_FORMAT_AXIS"/>
     <MetaEnumLiteral description="" name="PROPERTY_FORMAT_BLOCK"/>
   </MetaEnum>
   <Struct createRelease="tc13000.1.0" description="A date property value." isPublished="false" name="DateValue" namespace="Cla0::Soa::Internal::ClassificationCommon::_2020_12::Classification" scope="Cla0::Soa::ClassificationCommon::Classification">
     <StructElement description="Determines if property has an unused value. If true, value elements are saved; otherwise, saved as null." name="hasValue">
       <DataTypeRefParam dataType="bool"/>
     </StructElement>
     <StructElement description="The value of the date property." name="dateVal">
       <DataTypeRefParam dataType="Teamcenter::DateTime"/>
     </StructElement>
   </Struct>
   <Struct createRelease="tc13000.1.0" description="A double property value." isPublished="false" name="DoubleValue" namespace="Cla0::Soa::Internal::ClassificationCommon::_2020_12::Classification" scope="Cla0::Soa::ClassificationCommon::Classification">
     <StructElement description="Determines if property has an unused value. If true, value elements are saved; otherwise, saved as null." name="hasValue">
       <DataTypeRefParam dataType="bool"/>
     </StructElement>
     <StructElement description="The value of the double property." name="doubleVal">
       <DataTypeRefParam dataType="double"/>
     </StructElement>
     <StructElement description="The unit type of the property." name="unit">
       <DataTypeRefParam dataType="std::string"/>
     </StructElement>
   </Struct>
   <Struct createRelease="tc13000.1.0" description="The response to the getClassDescriptor operation." isPublished="false" name="GetClassDescriptorResponse" namespace="Cla0::Soa::Internal::ClassificationCommon::_2020_12::Classification" scope="Cla0::Soa::ClassificationCommon::Classification">
     <StructElement description="A list of base classes." name="baseClasses">
       <DataTypeRefParam dataType="std::vector">
          <DataTypeRefParam dataType="Cla0::Soa::Internal::ClassificationCommon::_2020_12::Classification::ClassDefinition"/>
       </DataTypeRefParam>
     </StructElement>
     <StructElement description="A list of blocks." name="blocks">
       <DataTypeRefParam dataType="std::vector">
          <DataTypeRefParam dataType="Cla0::Soa::Internal::ClassificationCommon::_2020_12::Classification::ClassDefinition"/>
       </DataTypeRefParam>
     </StructElement>
     <StructElement description="A list of KeyLOV definitions." name="keyLOVDefinitions">
       <DataTypeRefParam dataType="std::vector">
          <DataTypeRefParam dataType="Cla0::Soa::Internal::ClassificationCommon::_2020_12::Classification::KeyLOVDefinition"/>
       </DataTypeRefParam>
     </StructElement>
     <StructElement description="The service data." name="serviceData">
       <DataTypeRefParam dataType="Teamcenter::Soa::Server::ServiceData"/>
     </StructElement>
   </Struct>
   <Struct createRelease="tc13000.1.0" description="Object defining the response of a list of classification objects retrieved." isPublished="false" name="GetClassificationObjectsResponse" namespace="Cla0::Soa::Internal::ClassificationCommon::_2020_12::Classification" scope="Cla0::Soa::ClassificationCommon::Classification">
     <StructElement description="A list of retrieved classification objects and their details." name="objectDefinitions">
       <DataTypeRefParam dataType="std::vector">
          <DataTypeRefParam dataType="Cla0::Soa::Internal::ClassificationCommon::_2020_12::Classification::ClassificationObject"/>
       </DataTypeRefParam>
     </StructElement>
     <StructElement description="Contains any potential errors thrown by this operation." name="serviceData">
       <DataTypeRefParam dataType="Teamcenter::Soa::Server::ServiceData"/>
     </StructElement>
   </Struct>
   <Struct createRelease="tc13000.1.0" description="An integer property value." isPublished="false" name="IntegerValue" namespace="Cla0::Soa::Internal::ClassificationCommon::_2020_12::Classification" scope="Cla0::Soa::ClassificationCommon::Classification">
     <StructElement description="Determines if property has an unused value. If true, value elements are saved; otherwise, saved as null." name="hasValue">
       <DataTypeRefParam dataType="bool"/>
     </StructElement>
     <StructElement description="The value of the integer property." name="intVal">
       <DataTypeRefParam dataType="int"/>
     </StructElement>
     <StructElement description="The unit type of the property." name="unit">
       <DataTypeRefParam dataType="std::string"/>
     </StructElement>
   </Struct>
   <MetaEnum createRelease="tc13000.1.0" description="Datatype of a KeyLOV." isPublished="false" name="KeyLOVDatatype" namespace="Cla0::Soa::Internal::ClassificationCommon::_2020_12::Classification" scope="Cla0::Soa::ClassificationCommon::Classification">
     <MetaEnumLiteral description="" name="KEY_TYPE_REFERENCE"/>
     <MetaEnumLiteral description="" name="KEY_TYPE_DATE"/>
     <MetaEnumLiteral description="" name="KEY_TYPE_BOOLEAN"/>
     <MetaEnumLiteral description="" name="KEY_TYPE_STRING"/>
     <MetaEnumLiteral description="" name="KEY_TYPE_INTEGER"/>
     <MetaEnumLiteral description="" name="KEY_TYPE_DOUBLE"/>
   </MetaEnum>
   <Struct createRelease="tc13000.1.0" description="A structure representing a KeyLOV definition." isPublished="false" name="KeyLOVDefinition" namespace="Cla0::Soa::Internal::ClassificationCommon::_2020_12::Classification" scope="Cla0::Soa::ClassificationCommon::Classification">
     <StructElement description="The objectType of the KeyLOV." name="objectType">
       <DataTypeRefParam dataType="std::string"/>
     </StructElement>
     <StructElement description="The International Registration Data Identifier (IRDI) of the KeyLOV." name="irdi">
       <DataTypeRefParam dataType="std::string"/>
     </StructElement>
     <StructElement description="The namespace of the KeyLOV." name="keyLOVNamespace">
       <DataTypeRefParam dataType="std::string"/>
     </StructElement>
     <StructElement description="The keyLOV id." name="id">
       <DataTypeRefParam dataType="std::string"/>
     </StructElement>
     <StructElement description="The keyLOV revision." name="revision">
       <DataTypeRefParam dataType="std::string"/>
     </StructElement>
     <StructElement description="The keyLOV status." name="status">
       <DataTypeRefParam dataType="std::string"/>
     </StructElement>
     <StructElement description="The items belonging to thekeyLOV." name="keyLOVItems">
       <DataTypeRefParam dataType="Cla0::Soa::Internal::ClassificationCommon::_2020_12::Classification::LOVItems"/>
     </StructElement>
     <StructElement description="The keyLOV name." name="name">
       <DataTypeRefParam dataType="Cla0::Soa::Internal::ClassificationCommon::_2020_12::Classification::L10NProperty"/>
     </StructElement>
   </Struct>
   <Struct createRelease="tc13000.1.0" description="A string object that contains translations of a string." isPublished="false" name="L10NProperty" namespace="Cla0::Soa::Internal::ClassificationCommon::_2020_12::Classification" scope="Cla0::Soa::ClassificationCommon::Classification">
     <StructElement description="the locale of the original value." name="locale">
       <DataTypeRefParam dataType="std::string"/>
     </StructElement>
     <StructElement description="determines if the locale is the master." name="isMasterLocale">
       <DataTypeRefParam dataType="bool"/>
     </StructElement>
     <StructElement description="determines the status of the translations." name="translationStatus">
       <DataTypeRefParam dataType="std::string"/>
     </StructElement>
     <StructElement description="the original value." name="strValue">
       <DataTypeRefParam dataType="std::string"/>
     </StructElement>
     <StructElement description="The translations of the original value." name="translations">
       <DataTypeRefParam dataType="std::vector">
          <DataTypeRefParam dataType="Cla0::Soa::Internal::ClassificationCommon::_2020_12::Classification::L10NTranslation"/>
       </DataTypeRefParam>
     </StructElement>
   </Struct>
   <Struct createRelease="tc13000.1.0" description="A locale specific string." isPublished="false" name="L10NTranslation" namespace="Cla0::Soa::Internal::ClassificationCommon::_2020_12::Classification" scope="Cla0::Soa::ClassificationCommon::Classification">
     <StructElement description="The value of the L10NTranslation." name="strVal">
       <DataTypeRefParam dataType="std::string"/>
     </StructElement>
     <StructElement description="The status of the translation values: M - Master, A - Approved, I - Invalid, R - In Review, P - Pending." name="translationStatus">
       <DataTypeRefParam dataType="std::string"/>
     </StructElement>
     <StructElement description="The locale of this string value. These are the common Teamcenter languages codes. The language codes within Teamcenter follow the standard Java language naming convention (for example, en_US and fr_FR ). It is a five-letter code containing a two-letter language, an underscore, and a two-letter area code in uppercase. This follows the ISO639_ISO3166 template." name="locale">
       <DataTypeRefParam dataType="std::string"/>
     </StructElement>
     <StructElement description="Defines whether this locale is the master locale. Only one locale can be marked as the master locale. If true, this locale is the master locale, otherwise it is not." name="isMasterLocale">
       <DataTypeRefParam dataType="bool"/>
     </StructElement>
   </Struct>
   <Struct createRelease="tc13000.1.0" description="A Level property value." isPublished="false" name="LevelValue" namespace="Cla0::Soa::Internal::ClassificationCommon::_2020_12::Classification" scope="Cla0::Soa::ClassificationCommon::Classification">
     <StructElement description="Determines if property has an unused value. If true, value elements are saved; otherwise, saved as null." name="hasValue">
       <DataTypeRefParam dataType="bool"/>
     </StructElement>
     <StructElement description="The minimum value of the level." name="min">
       <DataTypeRefParam dataType="double"/>
     </StructElement>
     <StructElement description="The maximum value of the level." name="max">
       <DataTypeRefParam dataType="double"/>
     </StructElement>
     <StructElement description="The nominal value of the level." name="nominal">
       <DataTypeRefParam dataType="double"/>
     </StructElement>
     <StructElement description="The typical value of the level." name="typical">
       <DataTypeRefParam dataType="double"/>
     </StructElement>
     <StructElement description="The unit type of the property." name="unit">
       <DataTypeRefParam dataType="std::string"/>
     </StructElement>
   </Struct>
   <Struct createRelease="tc13000.1.0" description="A structure representing a LOVItem for booleans." isPublished="false" name="LOVBooleanItems" namespace="Cla0::Soa::Internal::ClassificationCommon::_2020_12::Classification" scope="Cla0::Soa::ClassificationCommon::Classification">
     <StructElement description="The value." name="boolValue">
       <DataTypeRefParam dataType="bool"/>
     </StructElement>
     <StructElement description="The displayValue." name="displayValue">
       <DataTypeRefParam dataType="Cla0::Soa::Internal::ClassificationCommon::_2020_12::Classification::L10NProperty"/>
     </StructElement>
   </Struct>
   <Struct createRelease="tc13000.1.0" description="A structure representing a LOV Item of type Date." isPublished="false" name="LOVDateItems" namespace="Cla0::Soa::Internal::ClassificationCommon::_2020_12::Classification" scope="Cla0::Soa::ClassificationCommon::Classification">
     <StructElement description="The date value of the item." name="dateValue">
       <DataTypeRefParam dataType="std::string"/>
     </StructElement>
     <StructElement description="A field to explain the value." name="valueMeaning">
       <DataTypeRefParam dataType="std::string"/>
     </StructElement>
     <StructElement description="Determines if the item is a sub menu. If true, the LOV has a Submenu." name="isSubMenu">
       <DataTypeRefParam dataType="bool"/>
     </StructElement>
     <StructElement description="The localized value for the title of the sub menu." name="subMenuTitle">
       <DataTypeRefParam dataType="Cla0::Soa::Internal::ClassificationCommon::_2020_12::Classification::L10NProperty"/>
     </StructElement>
     <StructElement description="A string that contains the dependency key for the item." name="dependencyKey">
       <DataTypeRefParam dataType="std::string"/>
     </StructElement>
     <StructElement description="A list of items belonging to the sub menu" name="subMenuItems">
       <DataTypeRefParam dataType="std::vector">
          <DataTypeRefParam dataType="Cla0::Soa::Internal::ClassificationCommon::_2020_12::Classification::LOVDateItems"/>
       </DataTypeRefParam>
     </StructElement>
   </Struct>
   <Struct createRelease="tc13000.1.0" description="A structure representing a KeyLOV item for doubles." isPublished="false" name="LOVDoubleItems" namespace="Cla0::Soa::Internal::ClassificationCommon::_2020_12::Classification" scope="Cla0::Soa::ClassificationCommon::Classification">
     <StructElement description="The meaning of the value." name="valueMeaning">
       <DataTypeRefParam dataType="std::string"/>
     </StructElement>
     <StructElement description="The double value." name="doubleValue">
       <DataTypeRefParam dataType="double"/>
     </StructElement>
     <StructElement description="Determines if item is submenu. If true, the LOV has a submenu." name="isSuMenu">
       <DataTypeRefParam dataType="bool"/>
     </StructElement>
     <StructElement description="The localized string for sub menu title." name="subMenuTitle">
       <DataTypeRefParam dataType="Cla0::Soa::Internal::ClassificationCommon::_2020_12::Classification::L10NProperty"/>
     </StructElement>
     <StructElement description="The dependency key, indicating the ID that this KeyLOV is dependent on." name="dependencyKey">
       <DataTypeRefParam dataType="std::string"/>
     </StructElement>
     <StructElement description="A list of double KeyLOV items." name="subMenuItems">
       <DataTypeRefParam dataType="std::vector">
          <DataTypeRefParam dataType="Cla0::Soa::Internal::ClassificationCommon::_2020_12::Classification::LOVDoubleItems"/>
       </DataTypeRefParam>
     </StructElement>
   </Struct>
   <Struct createRelease="tc13000.1.0" description="A structure representing a KeyLOV item for integers." isPublished="false" name="LOVIntegerItems" namespace="Cla0::Soa::Internal::ClassificationCommon::_2020_12::Classification" scope="Cla0::Soa::ClassificationCommon::Classification">
     <StructElement description="The integer value of the KeyLOV." name="integerValue">
       <DataTypeRefParam dataType="int"/>
     </StructElement>
     <StructElement description="The meaning of the value." name="valueMeaning">
       <DataTypeRefParam dataType="std::string"/>
     </StructElement>
     <StructElement description="Determines if item is submenu. If true, the LOV has a submenu." name="isSubMenu">
       <DataTypeRefParam dataType="bool"/>
     </StructElement>
     <StructElement description="The localized string for sub menu title." name="subMenuTitle">
       <DataTypeRefParam dataType="Cla0::Soa::Internal::ClassificationCommon::_2020_12::Classification::L10NProperty"/>
     </StructElement>
     <StructElement description="The dependency key, indicating the ID that this KeyLOV is dependent on." name="dependencyKey">
       <DataTypeRefParam dataType="std::string"/>
     </StructElement>
     <StructElement description="A list of integer LOVItems." name="subMenuItems">
       <DataTypeRefParam dataType="std::vector">
          <DataTypeRefParam dataType="Cla0::Soa::Internal::ClassificationCommon::_2020_12::Classification::LOVIntegerItems"/>
       </DataTypeRefParam>
     </StructElement>
   </Struct>
   <Struct createRelease="tc13000.1.0" description="A structure representing a list of LOVitems for each datatype." isPublished="false" name="LOVItems" namespace="Cla0::Soa::Internal::ClassificationCommon::_2020_12::Classification" scope="Cla0::Soa::ClassificationCommon::Classification">
     <StructElement description="Determines the dataType of the LOV." name="dataType">
       <DataTypeRefParam dataType="Cla0::Soa::Internal::ClassificationCommon::_2020_12::Classification::KeyLOVDatatype"/>
     </StructElement>
     <StructElement description="A list of Integer Items." name="integerItems">
       <DataTypeRefParam dataType="std::vector">
          <DataTypeRefParam dataType="Cla0::Soa::Internal::ClassificationCommon::_2020_12::Classification::LOVIntegerItems"/>
       </DataTypeRefParam>
     </StructElement>
     <StructElement description="A list of double LOVitems." name="doubleItems">
       <DataTypeRefParam dataType="std::vector">
          <DataTypeRefParam dataType="Cla0::Soa::Internal::ClassificationCommon::_2020_12::Classification::LOVDoubleItems"/>
       </DataTypeRefParam>
     </StructElement>
     <StructElement description="A list of String LOVItems." name="stringItems">
       <DataTypeRefParam dataType="std::vector">
          <DataTypeRefParam dataType="Cla0::Soa::Internal::ClassificationCommon::_2020_12::Classification::LOVStringItems"/>
       </DataTypeRefParam>
     </StructElement>
     <StructElement description="A list of bool LOVItems" name="boolItems">
       <DataTypeRefParam dataType="std::vector">
          <DataTypeRefParam dataType="Cla0::Soa::Internal::ClassificationCommon::_2020_12::Classification::LOVBooleanItems"/>
       </DataTypeRefParam>
     </StructElement>
     <StructElement description="A list of Date LOVItems." name="dateItems">
       <DataTypeRefParam dataType="std::vector">
          <DataTypeRefParam dataType="Cla0::Soa::Internal::ClassificationCommon::_2020_12::Classification::LOVDateItems"/>
       </DataTypeRefParam>
     </StructElement>
     <StructElement description="A list of reference LOVItems." name="referenceItems">
       <DataTypeRefParam dataType="std::vector">
          <DataTypeRefParam dataType="Cla0::Soa::Internal::ClassificationCommon::_2020_12::Classification::LOVReferenceItems"/>
       </DataTypeRefParam>
     </StructElement>
   </Struct>
   <Struct createRelease="tc13000.1.0" description="A structure representing a LOV item of reference which references another classification class." isPublished="false" name="LOVReferenceItems" namespace="Cla0::Soa::Internal::ClassificationCommon::_2020_12::Classification" scope="Cla0::Soa::ClassificationCommon::Classification">
     <StructElement description="The string Value." name="stringValue">
       <DataTypeRefParam dataType="std::string"/>
     </StructElement>
     <StructElement description="The localized display value." name="displayValue">
       <DataTypeRefParam dataType="Cla0::Soa::Internal::ClassificationCommon::_2020_12::Classification::L10NProperty"/>
     </StructElement>
     <StructElement description="Field to explain the meaning of the display value." name="valueMeaning">
       <DataTypeRefParam dataType="std::string"/>
     </StructElement>
     <StructElement description="The IRDI of the owning block." name="blockReference">
       <DataTypeRefParam dataType="std::string"/>
     </StructElement>
   </Struct>
   <Struct createRelease="tc13000.1.0" description="A structure representing a string KeyLOV Item." isPublished="false" name="LOVStringItems" namespace="Cla0::Soa::Internal::ClassificationCommon::_2020_12::Classification" scope="Cla0::Soa::ClassificationCommon::Classification">
     <StructElement description="The stringValue." name="stringValue">
       <DataTypeRefParam dataType="std::string"/>
     </StructElement>
     <StructElement description="The displayValue." name="displayValue">
       <DataTypeRefParam dataType="Cla0::Soa::Internal::ClassificationCommon::_2020_12::Classification::L10NProperty"/>
     </StructElement>
     <StructElement description="Determines if item is subMenu" name="isSubMenu">
       <DataTypeRefParam dataType="bool"/>
     </StructElement>
     <StructElement description="Localized string for sub menu title." name="subMenuTitle">
       <DataTypeRefParam dataType="Cla0::Soa::Internal::ClassificationCommon::_2020_12::Classification::L10NProperty"/>
     </StructElement>
     <StructElement description="String containing dependency key." name="dependencyKey">
       <DataTypeRefParam dataType="std::string"/>
     </StructElement>
     <StructElement description="A list of KeyLOV string items." name="subMenuItems">
       <DataTypeRefParam dataType="std::vector">
          <DataTypeRefParam dataType="Cla0::Soa::Internal::ClassificationCommon::_2020_12::Classification::LOVStringItems"/>
       </DataTypeRefParam>
     </StructElement>
   </Struct>
   <Struct createRelease="tc13000.1.0" description="A Position property value." isPublished="false" name="PositionValue" namespace="Cla0::Soa::Internal::ClassificationCommon::_2020_12::Classification" scope="Cla0::Soa::ClassificationCommon::Classification">
     <StructElement description="Determines if property has an unused value. If true, value elements are saved; otherwise, saved as null." name="hasValue">
       <DataTypeRefParam dataType="bool"/>
     </StructElement>
     <StructElement description="The X position value of the axis." name="posX">
       <DataTypeRefParam dataType="double"/>
     </StructElement>
     <StructElement description="The Y position value of the axis." name="posY">
       <DataTypeRefParam dataType="double"/>
     </StructElement>
     <StructElement description="The Z position value of the axis." name="posZ">
       <DataTypeRefParam dataType="double"/>
     </StructElement>
     <StructElement description="The unit type of the property." name="unit">
       <DataTypeRefParam dataType="std::string"/>
     </StructElement>
   </Struct>
   <Struct createRelease="tc13000.1.0" description="Object defining the response of the save Objects operation." isPublished="false" name="SaveClassificationObjectsResponse" namespace="Cla0::Soa::Internal::ClassificationCommon::_2020_12::Classification" scope="Cla0::Soa::ClassificationCommon::Classification">
     <StructElement description="Contains any protential errors thrown by this operation." name="serviceData">
       <DataTypeRefParam dataType="Teamcenter::Soa::Server::ServiceData"/>
     </StructElement>
     <StructElement description="the saved objects" name="objectDefinitions">
       <DataTypeRefParam dataType="std::vector">
          <DataTypeRefParam dataType="Cla0::Soa::Internal::ClassificationCommon::_2020_12::Classification::ClassificationObject"/>
       </DataTypeRefParam>
     </StructElement>
   </Struct>
   <Struct createRelease="tc13000.1.0" description="A string property value and any translations it may have." isPublished="false" name="StringValue" namespace="Cla0::Soa::Internal::ClassificationCommon::_2020_12::Classification" scope="Cla0::Soa::ClassificationCommon::Classification">
     <StructElement description="Determines if property has an unused value. If true, value elements are saved; otherwise, saved as null." name="hasValue">
       <DataTypeRefParam dataType="bool"/>
     </StructElement>
     <StructElement description="The value of the string property." name="strVal">
       <DataTypeRefParam dataType="Cla0::Soa::Internal::ClassificationCommon::_2020_12::Classification::L10NTranslation"/>
     </StructElement>
     <StructElement description="The translations of the string property value." name="translations">
       <DataTypeRefParam dataType="std::vector">
          <DataTypeRefParam dataType="Cla0::Soa::Internal::ClassificationCommon::_2020_12::Classification::L10NTranslation"/>
       </DataTypeRefParam>
     </StructElement>
   </Struct>
   <Struct createRelease="tc13000.1.0" description="A structure representing a user data entry." isPublished="false" name="UserDataEntry" namespace="Cla0::Soa::Internal::ClassificationCommon::_2020_12::Classification" scope="Cla0::Soa::ClassificationCommon::Classification">
     <StructElement description="The name of the entry." name="name">
       <DataTypeRefParam dataType="std::string"/>
     </StructElement>
     <StructElement description="The sequence of the entry." name="sequence">
       <DataTypeRefParam dataType="int"/>
     </StructElement>
     <StructElement description="The value of the entry." name="val">
       <DataTypeRefParam dataType="std::string"/>
     </StructElement>
   </Struct>
   <Struct createRelease="tc13000.1.0" description="A ValueRange property value." isPublished="false" name="ValueRangeValue" namespace="Cla0::Soa::Internal::ClassificationCommon::_2020_12::Classification" scope="Cla0::Soa::ClassificationCommon::Classification">
     <StructElement description="Determines if property has an unused value. If true, value elements are saved; otherwise, saved as null." name="hasValue">
       <DataTypeRefParam dataType="bool"/>
     </StructElement>
     <StructElement description="The minimum value of the range." name="min">
       <DataTypeRefParam dataType="double"/>
     </StructElement>
     <StructElement description="The maximum value of the range." name="max">
       <DataTypeRefParam dataType="double"/>
     </StructElement>
     <StructElement description="The unit type of the property." name="unit">
       <DataTypeRefParam dataType="std::string"/>
     </StructElement>
   </Struct>
   <Struct createRelease="tc13000.1.0" description="A ValueWithTolerance property value." isPublished="false" name="ValueWithToleranceValue" namespace="Cla0::Soa::Internal::ClassificationCommon::_2020_12::Classification" scope="Cla0::Soa::ClassificationCommon::Classification">
     <StructElement description="Determines if property has an unused value. If true, value elements are saved; otherwise, saved as null." name="hasValue">
       <DataTypeRefParam dataType="bool"/>
     </StructElement>
     <StructElement description="The minimum value of the tolerance." name="min">
       <DataTypeRefParam dataType="double"/>
     </StructElement>
     <StructElement description="The maximum value of the tolerance." name="max">
       <DataTypeRefParam dataType="double"/>
     </StructElement>
     <StructElement description="The nominal value of the tolerance." name="nominal">
       <DataTypeRefParam dataType="double"/>
     </StructElement>
     <StructElement description="The unit type of the property." name="unit">
       <DataTypeRefParam dataType="std::string"/>
     </StructElement>
   </Struct>
   <Struct createRelease="tc13000.2.0" description="Structure containing the existing values, the count how many times the value is used and in which unit system." isPublished="false" name="AutoFilterValue" namespace="Cla0::Soa::Internal::ClassificationCommon::_2021_06::Classification" scope="Cla0::Soa::ClassificationCommon::Classification">
     <StructElement description="The unit system in which the value was found. &lt;br /&gt;0 for metric, &lt;br /&gt;1 for non-metric." name="unitSystem">
       <DataTypeRefParam dataType="int"/>
     </StructElement>
     <StructElement description="The found property value." name="propertyValue">
       <DataTypeRefParam dataType="std::string"/>
     </StructElement>
     <StructElement description="The count how many times the value was found." name="count">
       <DataTypeRefParam dataType="int"/>
     </StructElement>
   </Struct>
   <Struct createRelease="tc13000.2.0" description="A structure representing a class descriptor." isPublished="false" name="ClassDescriptor" namespace="Cla0::Soa::Internal::ClassificationCommon::_2021_06::Classification" scope="Cla0::Soa::ClassificationCommon::Classification">
     <StructElement description="The International Registration Data Identifier ( IRDI ) of the class." name="irdi">
       <DataTypeRefParam dataType="std::string"/>
     </StructElement>
     <StructElement description="The namespace of the class." name="classNamespace">
       <DataTypeRefParam dataType="std::string"/>
     </StructElement>
     <StructElement description="The ID to use during class creation." name="id">
       <DataTypeRefParam dataType="std::string"/>
     </StructElement>
     <StructElement description="Defines the revision to use during class creation." name="revision">
       <DataTypeRefParam dataType="std::string"/>
     </StructElement>
     <StructElement description="The status of the class. Currently the class supports &amp;ldquo;Develop&amp;rdquo;, &amp;ldquo;Released&amp;rdquo; and &amp;ldquo;Retired&amp;rdquo; status. &amp;ldquo;Develop&amp;rdquo; status means an object is still under development and can be changed. &amp;ldquo;Released&amp;rdquo; objects are finalized and ready to use. &amp;ldquo;Retired&amp;rdquo; objects should not be used anymore." name="status">
       <DataTypeRefParam dataType="std::string"/>
     </StructElement>
     <StructElement description="The type of the class." name="classType">
       <DataTypeRefParam dataType="std::string"/>
     </StructElement>
     <StructElement description="Defines the instantiation of the class. If this property is set to True; user will not be able to save any instances of this class. If this property is set to False; user will be able to save any instances of this class. Abstract classes are used primarily to gather common attributes that are inherited by child (descendant) classes." name="isAbstract">
       <DataTypeRefParam dataType="bool"/>
     </StructElement>
     <StructElement description="Determines the unitSystem of the class. 1 indicates Metric. 2 indicates Non-Metric, 3 indicates both." name="unitSystem">
       <DataTypeRefParam dataType="int"/>
     </StructElement>
     <StructElement description="Defines the name of the class." name="name">
       <DataTypeRefParam dataType="Cla0::Soa::Internal::ClassificationCommon::_2020_12::Classification::L10NProperty"/>
     </StructElement>
     <StructElement description="Defines the short name of the class." name="shortName">
       <DataTypeRefParam dataType="Cla0::Soa::Internal::ClassificationCommon::_2020_12::Classification::L10NProperty"/>
     </StructElement>
     <StructElement description="The definition of the class." name="definition">
       <DataTypeRefParam dataType="Cla0::Soa::Internal::ClassificationCommon::_2020_12::Classification::L10NProperty"/>
     </StructElement>
     <StructElement description="Defines the note of the class." name="note">
       <DataTypeRefParam dataType="Cla0::Soa::Internal::ClassificationCommon::_2020_12::Classification::L10NProperty"/>
     </StructElement>
     <StructElement description="Defines the remark of the class." name="remark">
       <DataTypeRefParam dataType="Cla0::Soa::Internal::ClassificationCommon::_2020_12::Classification::L10NProperty"/>
     </StructElement>
     <StructElement description="The list of attributes of the class." name="classAttributes">
       <DataTypeRefParam dataType="std::vector">
          <DataTypeRefParam dataType="Cla0::Soa::Internal::ClassificationCommon::_2020_12::Classification::ClassAttribute"/>
       </DataTypeRefParam>
     </StructElement>
     <StructElement description="A list of additional properties of the class." name="additionalProperties">
       <DataTypeRefParam dataType="Cla0::Soa::Internal::ClassificationCommon::_2021_06::Classification::PropertyValueListMap"/>
     </StructElement>
   </Struct>
   <Typedef createRelease="tc13000.2.0" description="A list of class IRDIs and a corresponding list of class descriptors." isPublished="false" name="ClassDescriptorListMap" namespace="Cla0::Soa::Internal::ClassificationCommon::_2021_06::Classification" scope="Cla0::Soa::ClassificationCommon::Classification">
     <DataTypeRefParam dataType="std::map">
       <DataTypeRefParam dataType="std::string"/>
       <DataTypeRefParam dataType="std::vector">
          <DataTypeRefParam dataType="Cla0::Soa::Internal::ClassificationCommon::_2021_06::Classification::ClassDescriptor"/>
       </DataTypeRefParam>
     </DataTypeRefParam>
   </Typedef>
   <Typedef createRelease="tc13000.2.0" description="A list of class IRDIs and corresponding class descriptors." isPublished="false" name="ClassDescriptorMap" namespace="Cla0::Soa::Internal::ClassificationCommon::_2021_06::Classification" scope="Cla0::Soa::ClassificationCommon::Classification">
     <DataTypeRefParam dataType="std::map">
       <DataTypeRefParam dataType="std::string"/>
       <DataTypeRefParam dataType="Cla0::Soa::Internal::ClassificationCommon::_2021_06::Classification::ClassDescriptor"/>
     </DataTypeRefParam>
   </Typedef>
   <Typedef createRelease="tc13000.2.0" description="A map of classification object UID to corresponding object information." isPublished="false" name="ClassificationObjectsMap" namespace="Cla0::Soa::Internal::ClassificationCommon::_2021_06::Classification" scope="Cla0::Soa::ClassificationCommon::Classification">
     <DataTypeRefParam dataType="std::map">
       <DataTypeRefParam dataType="std::string"/>
       <DataTypeRefParam dataType="Cla0::Soa::Internal::ClassificationCommon::_2020_12::Classification::ClassificationObject"/>
     </DataTypeRefParam>
   </Typedef>
   <Struct createRelease="tc13000.2.0" description="Structure representing property identifier and corresponding display name." isPublished="false" name="EmptyProperty" namespace="Cla0::Soa::Internal::ClassificationCommon::_2021_06::Classification" scope="Cla0::Soa::ClassificationCommon::Classification">
     <StructElement description="The property name." name="propertyName">
       <DataTypeRefParam dataType="std::string"/>
     </StructElement>
     <StructElement description="The property identifier." name="propertyIdentifier">
       <DataTypeRefParam dataType="std::string"/>
     </StructElement>
     <StructElement description="The property annotation." name="propertyAnnotation">
       <DataTypeRefParam dataType="std::string"/>
     </StructElement>
   </Struct>
   <Struct createRelease="tc13000.2.0" description="Structure containing the additional criteria value(s) and unit systems which should be used to find the values for a certain property." isPublished="false" name="FindValueInput" namespace="Cla0::Soa::Internal::ClassificationCommon::_2021_06::Classification" scope="Cla0::Soa::ClassificationCommon::Classification">
     <StructElement description="The property ID to find the values for." name="propertyID">
       <DataTypeRefParam dataType="std::string"/>
     </StructElement>
     <StructElement description="The unique ID of the classification class in which to search (can be empty to find all values in all classes)." name="classID">
       <DataTypeRefParam dataType="std::string"/>
     </StructElement>
     <StructElement description="The current unit system.&lt;br /&gt;0 for metric, &lt;br /&gt;1 for non-metric,&lt;br /&gt;2 for searching in both metric and non-metric unit systems." name="activeUnitsystem">
       <DataTypeRefParam dataType="int"/>
     </StructElement>
     <StructElement description="A list of PropertyValue structures containing property Ids and their corresponding UI values to use additionally to find the values for propertyID." name="findValuePropertyValues">
       <DataTypeRefParam dataType="std::vector">
          <DataTypeRefParam dataType="Cla0::Soa::Internal::ClassificationCommon::_2021_06::Classification::FindValuePropertyValue"/>
       </DataTypeRefParam>
     </StructElement>
   </Struct>
   <Struct createRelease="tc13000.2.0" description="This structure contains the property ID and the corresponding value." isPublished="false" name="FindValuePropertyValue" namespace="Cla0::Soa::Internal::ClassificationCommon::_2021_06::Classification" scope="Cla0::Soa::ClassificationCommon::Classification">
     <StructElement description="The ID of the property." name="propertyID">
       <DataTypeRefParam dataType="std::string"/>
     </StructElement>
     <StructElement description="The value of the property.&lt;br /&gt;The calling client is responsible for converting the different property types (int, float, date etc) to a string using the appropriate functions in the SOA client framework's Property class." name="propertyValue">
       <DataTypeRefParam dataType="std::string"/>
     </StructElement>
   </Struct>
   <Struct createRelease="tc13000.2.0" description="Structure containing the value(s) which have been found for the attribute." isPublished="false" name="FindValuesOutput" namespace="Cla0::Soa::Internal::ClassificationCommon::_2021_06::Classification" scope="Cla0::Soa::ClassificationCommon::Classification">
     <StructElement description="List of AutoFilterValue." name="autoFilterValues">
       <DataTypeRefParam dataType="std::vector">
          <DataTypeRefParam dataType="Cla0::Soa::Internal::ClassificationCommon::_2021_06::Classification::AutoFilterValue"/>
       </DataTypeRefParam>
     </StructElement>
   </Struct>
   <Struct createRelease="tc13000.2.0" description="Structure containing the list of found values. Any failures with the conversion will be mapped to the error message in the ServiceData list of partial errors." isPublished="false" name="FindValuesResponse" namespace="Cla0::Soa::Internal::ClassificationCommon::_2021_06::Classification" scope="Cla0::Soa::ClassificationCommon::Classification">
     <StructElement description="A list of FindValuesOutput." name="findValuesOutputs">
       <DataTypeRefParam dataType="std::vector">
          <DataTypeRefParam dataType="Cla0::Soa::Internal::ClassificationCommon::_2021_06::Classification::FindValuesOutput"/>
       </DataTypeRefParam>
     </StructElement>
     <StructElement description="Any failures with the operation will be mapped to the error message in the ServiceData list of partial errors." name="serviceData">
       <DataTypeRefParam dataType="Teamcenter::Soa::Server::ServiceData"/>
     </StructElement>
   </Struct>
   <Struct createRelease="tc13000.2.0" description="The response to the getGraphicsTemplateInfo call." isPublished="false" name="GetGraphicsTemplateInfoResponse" namespace="Cla0::Soa::Internal::ClassificationCommon::_2021_06::Classification" scope="Cla0::Soa::ClassificationCommon::Classification">
     <StructElement description="Contains the list of retrieved template information for each template attached to the respective classification class." name="graphicsTemplateInfos">
       <DataTypeRefParam dataType="std::vector">
          <DataTypeRefParam dataType="Cla0::Soa::Internal::ClassificationCommon::_2021_06::Classification::GraphicsTemplateInfos"/>
       </DataTypeRefParam>
     </StructElement>
     <StructElement description="The service data containing possible occurred errors." name="serviceData">
       <DataTypeRefParam dataType="Teamcenter::Soa::Server::ServiceData"/>
     </StructElement>
   </Struct>
   <Struct createRelease="tc13000.2.0" description="Describes the template (either Part Family Template or Template Part) which is attached to a classification class." isPublished="false" name="GraphicsTemplateInfo" namespace="Cla0::Soa::Internal::ClassificationCommon::_2021_06::Classification" scope="Cla0::Soa::ClassificationCommon::Classification">
     <StructElement description="The type of the template. It can be either &amp;quot;ICS_part_family_template&amp;quot; or &amp;quot;Fnd0ClsTemplatePart&amp;quot;.&lt;br /&gt;Defines how the template was attached to the classification class." name="templateType">
       <DataTypeRefParam dataType="std::string"/>
     </StructElement>
     <StructElement description="The display name of the template." name="templateName">
       <DataTypeRefParam dataType="std::string"/>
     </StructElement>
     <StructElement description="The template attached to the classification class." name="templateObject">
       <DataTypeRefParam dataType="Teamcenter::WorkspaceObject"/>
     </StructElement>
     <StructElement description="The unit system of the template attached to the classification class.&lt;br /&gt;Possible values are:&lt;br /&gt;&lt;ul&gt;&lt;ul&gt;&lt;li type=&quot;disc&quot;&gt;&lt;b&gt;-1&lt;/b&gt; for an unknown template unit system.&lt;b&gt;&lt;/li&gt;&lt;li type=&quot;disc&quot;&gt;0&lt;/b&gt; for metric template unit system.&lt;/li&gt;&lt;li type=&quot;disc&quot;&gt;&lt;b&gt;1&lt;/b&gt; for a non-metric template unit system.&lt;/li&gt;&lt;/ul&gt;&lt;/ul&gt;" name="unitsystem">
       <DataTypeRefParam dataType="int"/>
     </StructElement>
     <StructElement description="The list of properties which do not have a value in the Classification object stored, but which are used in the template mapping." name="emptyProperties">
       <DataTypeRefParam dataType="std::vector">
          <DataTypeRefParam dataType="Cla0::Soa::Internal::ClassificationCommon::_2021_06::Classification::EmptyProperty"/>
       </DataTypeRefParam>
     </StructElement>
   </Struct>
   <Struct createRelease="tc13000.2.0" description="The details about the templates attached to the classification class." isPublished="false" name="GraphicsTemplateInfos" namespace="Cla0::Soa::Internal::ClassificationCommon::_2021_06::Classification" scope="Cla0::Soa::ClassificationCommon::Classification">
     <StructElement description="The list of templates attached to the classification class." name="templatesInfos">
       <DataTypeRefParam dataType="std::vector">
          <DataTypeRefParam dataType="Cla0::Soa::Internal::ClassificationCommon::_2021_06::Classification::GraphicsTemplateInfo"/>
       </DataTypeRefParam>
     </StructElement>
   </Struct>
   <Typedef createRelease="tc13000.2.0" description="A list of KeyLOV ids and corresponding KeyLOV definitions." isPublished="false" name="KeyLOVDefinitionMap" namespace="Cla0::Soa::Internal::ClassificationCommon::_2021_06::Classification" scope="Cla0::Soa::ClassificationCommon::Classification">
     <DataTypeRefParam dataType="std::map">
       <DataTypeRefParam dataType="std::string"/>
       <DataTypeRefParam dataType="Cla0::Soa::Internal::ClassificationCommon::_2020_12::Classification::KeyLOVDefinition"/>
     </DataTypeRefParam>
   </Typedef>
   <MetaEnum createRelease="tc13000.2.0" description="The operators that can be used for search." isPublished="false" name="OperatorExpression" namespace="Cla0::Soa::Internal::ClassificationCommon::_2021_06::Classification" scope="Cla0::Soa::ClassificationCommon::Classification">
     <MetaEnumLiteral description="" name="EQUALS"/>
     <MetaEnumLiteral description="" name="NOT_EQUALS"/>
     <MetaEnumLiteral description="" name="GREATER_THAN"/>
     <MetaEnumLiteral description="" name="LESS_THAN"/>
     <MetaEnumLiteral description="" name="GREATER_THAN_OR_EQUAL_TO"/>
     <MetaEnumLiteral description="" name="LESS_THAN_OR_EQUAL_TO"/>
     <MetaEnumLiteral description="" name="LIKE"/>
     <MetaEnumLiteral description="" name="NOT_LIKE"/>
     <MetaEnumLiteral description="" name="IS_IN"/>
     <MetaEnumLiteral description="" name="IS_NOT_IN"/>
     <MetaEnumLiteral description="" name="IS_NULL"/>
     <MetaEnumLiteral description="" name="IS_NOT_NULL"/>
   </MetaEnum>
   <Struct createRelease="tc13000.2.0" description="The term used to order search results and the sort direction." isPublished="false" name="OrderByTerm" namespace="Cla0::Soa::Internal::ClassificationCommon::_2021_06::Classification" scope="Cla0::Soa::ClassificationCommon::Classification">
     <StructElement description="The name of the property on which the results are to be ordered." name="propertyName">
       <DataTypeRefParam dataType="std::string"/>
     </StructElement>
     <StructElement description="Specifies the sort direction. If true, the results will be sorted in ascending order, and if false, descending order." name="sortAscending">
       <DataTypeRefParam dataType="bool"/>
     </StructElement>
   </Struct>
   <Struct createRelease="tc13000.2.0" description="A value specified by the datatype. May contain multiple values in the corresponding vector." isPublished="false" name="PropertyValue" namespace="Cla0::Soa::Internal::ClassificationCommon::_2021_06::Classification" scope="Cla0::Soa::ClassificationCommon::Classification">
     <StructElement description="The datatype of this value. This should match with what vector is populated.&lt;br /&gt;Possible Values:&lt;br /&gt;&lt;ul&gt;&lt;ul&gt;&lt;li type=&quot;disc&quot;&gt;&amp;quot;String&amp;quot;&lt;/li&gt;&lt;li type=&quot;disc&quot;&gt;&amp;quot;Integer&amp;quot;&lt;/li&gt;&lt;li type=&quot;disc&quot;&gt;&amp;quot;Double&amp;quot;&lt;/li&gt;&lt;li type=&quot;disc&quot;&gt;&amp;quot;Boolean&amp;quot;&lt;/li&gt;&lt;/ul&gt;&lt;/ul&gt;" name="datatype">
       <DataTypeRefParam dataType="std::string"/>
     </StructElement>
     <StructElement description="A vector of Boolean values." name="boolValue">
       <DataTypeRefParam dataType="std::vector">
          <DataTypeRefParam dataType="bool"/>
       </DataTypeRefParam>
     </StructElement>
     <StructElement description="A vector of Integer values." name="intValue">
       <DataTypeRefParam dataType="std::vector">
          <DataTypeRefParam dataType="int"/>
       </DataTypeRefParam>
     </StructElement>
     <StructElement description="A vector of Double values." name="doubleValue">
       <DataTypeRefParam dataType="std::vector">
          <DataTypeRefParam dataType="double"/>
       </DataTypeRefParam>
     </StructElement>
     <StructElement description="A vector of String values." name="stringValue">
       <DataTypeRefParam dataType="std::vector">
          <DataTypeRefParam dataType="std::string"/>
       </DataTypeRefParam>
     </StructElement>
   </Struct>
   <Typedef createRelease="tc13000.2.0" description="A list of property names and a corresponding list of property values." isPublished="false" name="PropertyValueListMap" namespace="Cla0::Soa::Internal::ClassificationCommon::_2021_06::Classification" scope="Cla0::Soa::ClassificationCommon::Classification">
     <DataTypeRefParam dataType="std::map">
       <DataTypeRefParam dataType="std::string"/>
       <DataTypeRefParam dataType="std::vector">
          <DataTypeRefParam dataType="Cla0::Soa::Internal::ClassificationCommon::_2021_06::Classification::PropertyValue"/>
       </DataTypeRefParam>
     </DataTypeRefParam>
   </Typedef>
   <Struct createRelease="tc13000.2.0" description="Structure containing the value which will be used to create or update a new Family Part Member or Template Part Member." isPublished="false" name="SaveGraphicsMemberRequest" namespace="Cla0::Soa::Internal::ClassificationCommon::_2021_06::Classification" scope="Cla0::Soa::ClassificationCommon::Classification">
     <StructElement description="The &lt;b&gt;WorkspaceObject&lt;/b&gt; that contains the part file that the graphics member is being saved to." name="templateObject">
       <DataTypeRefParam dataType="Teamcenter::WorkspaceObject"/>
     </StructElement>
     <StructElement description="The Classification Object UID (&lt;b&gt;Cls0ClassBase&lt;/b&gt;) that will be used to create or update a member of the Part Family or a member of the Template Part." name="classificationObject">
       <DataTypeRefParam dataType="std::string"/>
     </StructElement>
     <StructElement description="If true, then a new part file will be created for the new member; otherwise, a new part file is not created." name="createPartFile">
       <DataTypeRefParam dataType="bool"/>
     </StructElement>
     <StructElement description="If true, then a new JT file will be created for the new member; otherwise, a new JT file will not be created." name="createJTFile">
       <DataTypeRefParam dataType="bool"/>
     </StructElement>
     <StructElement description="If true, then the updated values are used to create a new part; otherwise, the existing part is updated." name="recreateFromTemplate">
       <DataTypeRefParam dataType="bool"/>
     </StructElement>
   </Struct>
   <Struct createRelease="tc13000.2.0" description="Holds search results for all searched classification descriptors and any overall errors that occurred." isPublished="false" name="SearchClassDescriptorResponse" namespace="Cla0::Soa::Internal::ClassificationCommon::_2021_06::Classification" scope="Cla0::Soa::ClassificationCommon::Classification">
     <StructElement description="A list of search result objects, each containing the results from one SearchCriteria." name="searchResults">
       <DataTypeRefParam dataType="std::vector">
          <DataTypeRefParam dataType="Cla0::Soa::Internal::ClassificationCommon::_2021_06::Classification::SearchClassDescriptorResults"/>
       </DataTypeRefParam>
     </StructElement>
     <StructElement description="A map (string/ClassDescriptor) of returned class IRDIs and the full information on each object." name="classDescriptors">
       <DataTypeRefParam dataType="Cla0::Soa::Internal::ClassificationCommon::_2021_06::Classification::ClassDescriptorMap"/>
     </StructElement>
     <StructElement description="A map (string/list of ClassDescriptor) of any found class IRDIs that have parents, and a list of the full information about every parent." name="parents">
       <DataTypeRefParam dataType="Cla0::Soa::Internal::ClassificationCommon::_2021_06::Classification::ClassDescriptorListMap"/>
     </StructElement>
     <StructElement description="A map (string/list of ClassDescriptor) of any found class IRDIs that have children, and a list of the full information about every child." name="children">
       <DataTypeRefParam dataType="Cla0::Soa::Internal::ClassificationCommon::_2021_06::Classification::ClassDescriptorListMap"/>
     </StructElement>
     <StructElement description="A map (string/ClassDescriptor) of block IRDIs and the full information about each block." name="blocks">
       <DataTypeRefParam dataType="Cla0::Soa::Internal::ClassificationCommon::_2021_06::Classification::ClassDescriptorMap"/>
     </StructElement>
     <StructElement description="A map (string/KeyLOVDefinition) of keyLOV IRDIs and the full information about each keyLOV." name="keyLOVs">
       <DataTypeRefParam dataType="Cla0::Soa::Internal::ClassificationCommon::_2021_06::Classification::KeyLOVDefinitionMap"/>
     </StructElement>
     <StructElement description="Contains any potential errors thrown by this operation." name="serviceData">
       <DataTypeRefParam dataType="Teamcenter::Soa::Server::ServiceData"/>
     </StructElement>
   </Struct>
   <Struct createRelease="tc13000.2.0" description="A class IRDI resulting from a search, and a list of any selected properties and their values." isPublished="false" name="SearchClassDescriptorResult" namespace="Cla0::Soa::Internal::ClassificationCommon::_2021_06::Classification" scope="Cla0::Soa::ClassificationCommon::Classification">
     <StructElement description="The class IRDI of the search result." name="classIRDI">
       <DataTypeRefParam dataType="std::string"/>
     </StructElement>
     <StructElement description="A list of any selected properties and their values." name="selectProperties">
       <DataTypeRefParam dataType="std::vector">
          <DataTypeRefParam dataType="Cla0::Soa::Internal::ClassificationCommon::_2021_06::Classification::SelectValue"/>
       </DataTypeRefParam>
     </StructElement>
   </Struct>
   <Struct createRelease="tc13000.2.0" description="Holds information on a class descriptor search result and any errors that occurred during the search." isPublished="false" name="SearchClassDescriptorResults" namespace="Cla0::Soa::Internal::ClassificationCommon::_2021_06::Classification" scope="Cla0::Soa::ClassificationCommon::Classification">
     <StructElement description="The result status of the search result. A value of 0 means that the operation was successful, while other values are error codes and mean that it was not successful." name="resultStatus">
       <DataTypeRefParam dataType="int"/>
     </StructElement>
     <StructElement description="A list of any error messages from the search. If there were no errors, the list will be empty. Some errors may return more than one error message." name="errorDetails">
       <DataTypeRefParam dataType="std::vector">
          <DataTypeRefParam dataType="std::string"/>
       </DataTypeRefParam>
     </StructElement>
     <StructElement description="The number of matching objects found." name="totalFound">
       <DataTypeRefParam dataType="int"/>
     </StructElement>
     <StructElement description="The number of matching objects returned." name="totalLoaded">
       <DataTypeRefParam dataType="int"/>
     </StructElement>
     <StructElement description="A list of class IRDIs returned by the search, and a list of selected fields." name="results">
       <DataTypeRefParam dataType="std::vector">
          <DataTypeRefParam dataType="Cla0::Soa::Internal::ClassificationCommon::_2021_06::Classification::SearchClassDescriptorResult"/>
       </DataTypeRefParam>
     </StructElement>
   </Struct>
   <Struct createRelease="tc13000.2.0" description="The search criteria defining various parameters to use while performing search and/or while returning search results." isPublished="false" name="SearchCriteria" namespace="Cla0::Soa::Internal::ClassificationCommon::_2021_06::Classification" scope="Cla0::Soa::ClassificationCommon::Classification">
     <StructElement description="A list of properties to be populated in the response. If not defined, IRDI will be populated by default. Array properties are not supported. In addition to schema properties, there are additional properties that can be selected. These are listed below.&lt;br /&gt;&lt;ul&gt;&lt;ul&gt;&lt;li type=&quot;disc&quot;&gt;'HasChildren' is a boolean property indicating whether a class has children.&lt;/li&gt;&lt;li type=&quot;disc&quot;&gt;'InstanceCount' is an integer property indicating how many instances a class exist.&lt;/li&gt;&lt;li type=&quot;disc&quot;&gt;'Icon' is a string property representing the icon of a class.&lt;/li&gt;&lt;li type=&quot;disc&quot;&gt;'Images' is a list of string properties representing the images of a class.&lt;/li&gt;&lt;/ul&gt;&lt;/ul&gt;" name="selectProperties">
       <DataTypeRefParam dataType="std::vector">
          <DataTypeRefParam dataType="std::string"/>
       </DataTypeRefParam>
     </StructElement>
     <StructElement description="A list of search expressions to be used when searching class descriptors." name="searchExpressions">
       <DataTypeRefParam dataType="std::vector">
          <DataTypeRefParam dataType="Cla0::Soa::Internal::ClassificationCommon::_2021_06::Classification::SearchExpression"/>
       </DataTypeRefParam>
     </StructElement>
     <StructElement description="Defines the list of properties to use for ordering the search results. If no term is provided, results will be ordered based on 'Last Saved Date'." name="orderByTerms">
       <DataTypeRefParam dataType="std::vector">
          <DataTypeRefParam dataType="Cla0::Soa::Internal::ClassificationCommon::_2021_06::Classification::OrderByTerm"/>
       </DataTypeRefParam>
     </StructElement>
     <StructElement description="Defines the number of results to be returned. A negative value will set no limit, and all results will be returned in the response." name="limit">
       <DataTypeRefParam dataType="int"/>
     </StructElement>
     <StructElement description="Defines the starting index from which the results will be returned. A negative value will be ignored and results will be returned starting from index 0." name="offset">
       <DataTypeRefParam dataType="int"/>
     </StructElement>
   </Struct>
   <Struct createRelease="tc13000.2.0" description="A search expression to be used while performing search.&lt;br /&gt;The datatypes that can be used for each operator are specified below:&lt;br /&gt;&lt;br /&gt;EQUALS&lt;br /&gt;&lt;ul&gt;&lt;ul&gt;&lt;li type=&quot;disc&quot;&gt;String&lt;/li&gt;&lt;li type=&quot;disc&quot;&gt;Integer/Double&lt;/li&gt;&lt;li type=&quot;disc&quot;&gt;Boolean&lt;/li&gt;&lt;/ul&gt;&lt;/ul&gt;&lt;br /&gt;NOT_EQUALS&lt;br /&gt;&lt;ul&gt;&lt;ul&gt;&lt;li type=&quot;disc&quot;&gt;String&lt;/li&gt;&lt;li type=&quot;disc&quot;&gt;Integer/Double&lt;/li&gt;&lt;li type=&quot;disc&quot;&gt;Boolean&lt;/li&gt;&lt;/ul&gt;&lt;/ul&gt;&lt;br /&gt;GREATER_THAN&lt;br /&gt;&lt;ul&gt;&lt;ul&gt;&lt;li type=&quot;disc&quot;&gt;String&lt;/li&gt;&lt;li type=&quot;disc&quot;&gt;Integer/Double&lt;/li&gt;&lt;/ul&gt;&lt;/ul&gt;&lt;br /&gt;LESS_THAN&lt;br /&gt;&lt;ul&gt;&lt;ul&gt;&lt;li type=&quot;disc&quot;&gt;String&lt;/li&gt;&lt;li type=&quot;disc&quot;&gt;Integer/Double&lt;/li&gt;&lt;/ul&gt;&lt;/ul&gt;&lt;br /&gt;GREATER_THAN_OR_EQUAL_TO&lt;br /&gt;&lt;ul&gt;&lt;ul&gt;&lt;li type=&quot;disc&quot;&gt;String&lt;/li&gt;&lt;li type=&quot;disc&quot;&gt;Integer/Double&lt;/li&gt;&lt;/ul&gt;&lt;/ul&gt;&lt;br /&gt;LESS_THAN_OR_EQUAL_TO&lt;br /&gt;&lt;ul&gt;&lt;ul&gt;&lt;li type=&quot;disc&quot;&gt;String&lt;/li&gt;&lt;li type=&quot;disc&quot;&gt;Integer/Double&lt;/li&gt;&lt;/ul&gt;&lt;/ul&gt;&lt;br /&gt;LIKE&lt;br /&gt;&lt;ul&gt;&lt;ul&gt;&lt;li type=&quot;disc&quot;&gt;String&lt;/li&gt;&lt;/ul&gt;&lt;/ul&gt;&lt;br /&gt;NOT_LIKE&lt;br /&gt;&lt;ul&gt;&lt;ul&gt;&lt;li type=&quot;disc&quot;&gt;String&lt;/li&gt;&lt;/ul&gt;&lt;/ul&gt;&lt;br /&gt;IS_IN&lt;br /&gt;&lt;ul&gt;&lt;ul&gt;&lt;li type=&quot;disc&quot;&gt;String&lt;/li&gt;&lt;li type=&quot;disc&quot;&gt;Integer/Double&lt;/li&gt;&lt;li type=&quot;disc&quot;&gt;Boolean&lt;/li&gt;&lt;/ul&gt;&lt;/ul&gt;&lt;br /&gt;IS_NOT_IN&lt;br /&gt;&lt;ul&gt;&lt;ul&gt;&lt;li type=&quot;disc&quot;&gt;String&lt;/li&gt;&lt;li type=&quot;disc&quot;&gt;Integer/Double&lt;/li&gt;&lt;li type=&quot;disc&quot;&gt;Boolean&lt;/li&gt;&lt;/ul&gt;&lt;/ul&gt;&lt;br /&gt;IS_NULL&lt;br /&gt;&lt;ul&gt;&lt;ul&gt;&lt;li type=&quot;disc&quot;&gt;Input value and datatype ignored&lt;/li&gt;&lt;/ul&gt;&lt;/ul&gt;&lt;br /&gt;IS_NOT_NULL&lt;br /&gt;&lt;ul&gt;&lt;ul&gt;&lt;li type=&quot;disc&quot;&gt;Input value and datatype ignored&lt;/li&gt;&lt;/ul&gt;&lt;/ul&gt;" isPublished="false" name="SearchExpression" namespace="Cla0::Soa::Internal::ClassificationCommon::_2021_06::Classification" scope="Cla0::Soa::ClassificationCommon::Classification">
     <StructElement description="The operator to use during search." name="operatorExpression">
       <DataTypeRefParam dataType="Cla0::Soa::Internal::ClassificationCommon::_2021_06::Classification::OperatorExpression"/>
     </StructElement>
     <StructElement description="The name of the property to be used for the search." name="propertyName">
       <DataTypeRefParam dataType="std::string"/>
     </StructElement>
     <StructElement description="The value to be searched against the property name." name="propertyValue">
       <DataTypeRefParam dataType="Cla0::Soa::Internal::ClassificationCommon::_2021_06::Classification::PropertyValue"/>
     </StructElement>
   </Struct>
   <Struct createRelease="tc13000.2.0" description="The search criteria defining various parameters to use while performing search and/or while returning search results." isPublished="false" name="SearchIcoCriteria" namespace="Cla0::Soa::Internal::ClassificationCommon::_2021_06::Classification" scope="Cla0::Soa::ClassificationCommon::Classification">
     <StructElement description="A list of properties on the classification object to be populated in the response. Supported properties are Name, ID, Description, Type, WSO (Unique identifier of the associated workspace object) and Class." name="selectProperties">
       <DataTypeRefParam dataType="std::vector">
          <DataTypeRefParam dataType="std::string"/>
       </DataTypeRefParam>
     </StructElement>
     <StructElement description="A list of search expressions to be used when searching classification objects." name="searchExpressions">
       <DataTypeRefParam dataType="std::vector">
          <DataTypeRefParam dataType="Cla0::Soa::Internal::ClassificationCommon::_2021_06::Classification::SearchExpression"/>
       </DataTypeRefParam>
     </StructElement>
     <StructElement description="A list of properties to use for ordering the search results." name="orderByTerms">
       <DataTypeRefParam dataType="std::vector">
          <DataTypeRefParam dataType="Cla0::Soa::Internal::ClassificationCommon::_2021_06::Classification::OrderByTerm"/>
       </DataTypeRefParam>
     </StructElement>
     <StructElement description="Controls the scope of search in a classification hierarchy. If true, search will be performed on objects classified in the entire hierarchy below the specified class, otherwise, search will be limited to objects classified in the specified class." name="searchInHierarchy">
       <DataTypeRefParam dataType="bool"/>
     </StructElement>
     <StructElement description="Defines the starting index from which the results will be returned. A negative value will be ignored and results will be returned starting from index 0." name="offset">
       <DataTypeRefParam dataType="int"/>
     </StructElement>
     <StructElement description="Defines the number of results to be returned. A negative value will set no limit, and all results will be returned in the response." name="limit">
       <DataTypeRefParam dataType="int"/>
     </StructElement>
     <StructElement description="Specifies whether objects returned in search results should be loaded. If true, the response parameter, classificationObjects, will include complete information on the returned objects." name="loadClassificationObjects">
       <DataTypeRefParam dataType="bool"/>
     </StructElement>
     <StructElement description="Specifies whether class descriptors for returned objects should be included in the response. If true, the response parameter, classDescriptors, will include complete information on the classifying classes of returned objects." name="loadClassDescriptors">
       <DataTypeRefParam dataType="bool"/>
     </StructElement>
   </Struct>
   <Struct createRelease="tc13000.2.0" description="Holds search results for all searched classification objects and any overall errors that occurred." isPublished="false" name="SearchIcoResponse" namespace="Cla0::Soa::Internal::ClassificationCommon::_2021_06::Classification" scope="Cla0::Soa::ClassificationCommon::Classification">
     <StructElement description="A list of search result objects, each containing the results from corresponding SearchIcoCriteria." name="searchResults">
       <DataTypeRefParam dataType="std::vector">
          <DataTypeRefParam dataType="Cla0::Soa::Internal::ClassificationCommon::_2021_06::Classification::SearchIcoResults"/>
       </DataTypeRefParam>
     </StructElement>
     <StructElement description="A map (string, ClassificationObject) of returned classification object UIDs and the full information on each object." name="classificationObjects">
       <DataTypeRefParam dataType="Cla0::Soa::Internal::ClassificationCommon::_2021_06::Classification::ClassificationObjectsMap"/>
     </StructElement>
     <StructElement description="A map (string, ClassDescriptor) of unique identifier of class and the full information on each class." name="classDescriptors">
       <DataTypeRefParam dataType="Cla0::Soa::Internal::ClassificationCommon::_2021_06::Classification::ClassDescriptorMap"/>
     </StructElement>
     <StructElement description="A map (string, ClassDescriptor) of unique identifier of block in a class and the full information on each block." name="blocks">
       <DataTypeRefParam dataType="Cla0::Soa::Internal::ClassificationCommon::_2021_06::Classification::ClassDescriptorMap"/>
     </StructElement>
     <StructElement description="A map (string, KeyLOVDefinition) of unique identifier of keyLOV in a class and the full information on each keyLOV." name="keyLOVs">
       <DataTypeRefParam dataType="Cla0::Soa::Internal::ClassificationCommon::_2021_06::Classification::KeyLOVDefinitionMap"/>
     </StructElement>
     <StructElement description="Contains any errors encountered during the entire operation." name="serviceData">
       <DataTypeRefParam dataType="Teamcenter::Soa::Server::ServiceData"/>
     </StructElement>
   </Struct>
   <Struct createRelease="tc13000.2.0" description="Holds information on a classification object found on performing search." isPublished="false" name="SearchIcoResult" namespace="Cla0::Soa::Internal::ClassificationCommon::_2021_06::Classification" scope="Cla0::Soa::ClassificationCommon::Classification">
     <StructElement description="The unique identifier of the classification object." name="objectUID">
       <DataTypeRefParam dataType="std::string"/>
     </StructElement>
     <StructElement description="A list of any selected properties and their values." name="selectProperties">
       <DataTypeRefParam dataType="std::vector">
          <DataTypeRefParam dataType="Cla0::Soa::Internal::ClassificationCommon::_2021_06::Classification::SelectValue"/>
       </DataTypeRefParam>
     </StructElement>
   </Struct>
   <Struct createRelease="tc13000.2.0" description="Holds information on a search result and any errors that may have occurred during the search." isPublished="false" name="SearchIcoResults" namespace="Cla0::Soa::Internal::ClassificationCommon::_2021_06::Classification" scope="Cla0::Soa::ClassificationCommon::Classification">
     <StructElement description="The status of the search. 0 indicates successful search." name="resultStatus">
       <DataTypeRefParam dataType="int"/>
     </StructElement>
     <StructElement description="A list of any error messages from the search." name="errorDetails">
       <DataTypeRefParam dataType="std::vector">
          <DataTypeRefParam dataType="std::string"/>
       </DataTypeRefParam>
     </StructElement>
     <StructElement description="The number of matching objects found." name="totalFound">
       <DataTypeRefParam dataType="int"/>
     </StructElement>
     <StructElement description="The number of matching objects returned." name="totalLoaded">
       <DataTypeRefParam dataType="int"/>
     </StructElement>
     <StructElement description="results&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;A list of unique identifiers of objects returned by the search, and a list of selected fields." name="results">
       <DataTypeRefParam dataType="std::vector">
          <DataTypeRefParam dataType="Cla0::Soa::Internal::ClassificationCommon::_2021_06::Classification::SearchIcoResult"/>
       </DataTypeRefParam>
     </StructElement>
   </Struct>
   <Struct createRelease="tc13000.2.0" description="A selected property on a class." isPublished="false" name="SelectValue" namespace="Cla0::Soa::Internal::ClassificationCommon::_2021_06::Classification" scope="Cla0::Soa::ClassificationCommon::Classification">
     <StructElement description="The name of a class property selected during search." name="propertyName">
       <DataTypeRefParam dataType="std::string"/>
     </StructElement>
     <StructElement description="A list of class property values selected during search." name="propertyValues">
       <DataTypeRefParam dataType="std::vector">
          <DataTypeRefParam dataType="Cla0::Soa::Internal::ClassificationCommon::_2021_06::Classification::PropertyValue"/>
       </DataTypeRefParam>
     </StructElement>
   </Struct>
   <OperationTemplate accessControl="false" const="false" createRelease="tc12000.3.0" description="Deletes one or more classification objects permanently. A classification object is also called ICO. The classified workspace object associated with the ICO will not be deleted." id="Cla0::Soa::ClassificationCommon::_2020_01::Classification::ClassificationObjectResponse#Cla0::Soa::ClassificationCommon::Classification::deleteClassificationObjects#const,std::string,&amp;" name="Cla0::Soa::ClassificationCommon::Classification::deleteClassificationObjects" returnConst="false" returnDescription="Returns a json string containing information on the deleted classification objects. Any failures occurred during the operation will be specified in the json response string.&lt;br /&gt;Following errors may be returned by the operation:&lt;br /&gt;&amp;bull;    424002 - The schema validation has failed. The path to the violated rule in the schema file is &amp;quot;#/properties/PropertyRecord/items&amp;quot; and the violated schema keyword is &amp;quot;additionalProperties&amp;quot;.&lt;br /&gt;&amp;bull;    424009 - Classification objects from multiple classification systems are not currently supported in get or delete objects request." returnFreeMemory="false" static="false">
     <OperationReturnDataTypeRef dataType="Cla0::Soa::ClassificationCommon::_2020_01::Classification::ClassificationObjectResponse" qualifier=""/>
     <OperationParameter const="true" defaultValue="" description="The parameter is a JSON string containing information about classification objects to be deleted. The structure of the JSON string must follow the JSON schema specified in the file: TC_DATA\classification\json\cla\1.0.0\schema\GetClassificationObjects_Request.schema.json. A sample input for deleting classification objects is provided in the file: TC_DATA\classification\json\cla\1.0.0\samples\GetClassificationObjects_Request_sample.json." freeOutputMemory="false" inputOutput="Input" name="jsonRequest">
       <OperationParameterDataTypeRef dataType="std::string" qualifier="&amp;"/>
     </OperationParameter>
   </OperationTemplate>
   <OperationTemplate accessControl="false" const="false" createRelease="tc12000.3.0" description="Looks for specified classification objects. If they are found, then detailed information about those objects is provided." id="Cla0::Soa::ClassificationCommon::_2020_01::Classification::ClassificationObjectResponse#Cla0::Soa::ClassificationCommon::Classification::getClassificationObjects#const,std::string,&amp;" name="Cla0::Soa::ClassificationCommon::Classification::getClassificationObjects" returnConst="false" returnDescription="Returns a JSON string containing detailed information on the requested classification objects. Any failures occurred   during the operation will be specified in the JSON response string.&lt;br /&gt;Following errors may be returned by the operation:  &lt;br /&gt;&amp;bull;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;424002 - The schema validation has failed. The path to the violated rule in the schema file is &amp;quot;#/properties/PropertyRecord/items&amp;quot; and the violated schema keyword is &amp;quot;additionalProperties&amp;quot;.&lt;br /&gt;&amp;bull;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;424009 - Classification objects from multiple classification systems are not currently supported in get or delete objects request." returnFreeMemory="false" static="false">
     <OperationReturnDataTypeRef dataType="Cla0::Soa::ClassificationCommon::_2020_01::Classification::ClassificationObjectResponse" qualifier=""/>
     <OperationParameter const="true" defaultValue="" description="A JSON string containing information about the classification objects to be retrieved. The structure of the JSON string must follow the JSON schema specified in the file: TC_DATA\classification\json\cla\1.0.0\schema\GetClassificationObjects_Request.schema.json. A sample input for fetching classification objects is provided in the file: TC_DATA\classification\json\cla\1.0.0\samples\GetClassificationObjects_Request_sample.json." freeOutputMemory="false" inputOutput="Input" name="jsonRequest">
       <OperationParameterDataTypeRef dataType="std::string" qualifier="&amp;"/>
     </OperationParameter>
   </OperationTemplate>
   <OperationTemplate accessControl="false" const="false" createRelease="tc12000.3.0" description="Creates one or more classification objects and (optionally) attaches them to a workspace object, thus classifying it. If the Classification objects are not associated with any workspace object, they would act as standalone Classification objects. A classification object is also called ICO." id="Cla0::Soa::ClassificationCommon::_2020_01::Classification::ClassificationObjectResponse#Cla0::Soa::ClassificationCommon::Classification::saveClassificationObjects#const,std::string,&amp;" name="Cla0::Soa::ClassificationCommon::Classification::saveClassificationObjects" returnConst="false" returnDescription="Returns a JSON string containing information about the created or updated classification objects. Any failures occurred during the operation will be specified in the JSON response string.&lt;br /&gt;Following errors may be returned by the operation:  &lt;br /&gt;&amp;bull;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;424002 - The schema validation has failed. The path to the violated rule in the schema file is &amp;quot;#/properties/PropertyRecord/items&amp;quot; and the violated schema keyword is &amp;quot;additionalProperties&amp;quot;.&lt;br /&gt;&amp;bull;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;424007 - &amp;quot;ClsWso1&amp;quot; cannot be used for classification. Please use a unique object ID or a name for classification.&lt;br /&gt;&amp;bull;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;424008 - Classification nodes from multiple classification systems are not currently supported in save objects request." returnFreeMemory="false" static="false">
     <OperationReturnDataTypeRef dataType="Cla0::Soa::ClassificationCommon::_2020_01::Classification::ClassificationObjectResponse" qualifier=""/>
     <OperationParameter const="true" defaultValue="" description="This parameter is a JSON string containing information about classification objects to be created or updated. The structure of the JSON string must follow the JSON schema specified in the file: TC_DATA\classification\json\cla\1.0.0\schema\SaveClassificationObjects_Request.schema.json. A sample input for saving classification objects is provided in the file: TC_DATA\classification\json\cla\1.0.0\samples\SaveClassificationObjects_Request_sample.json." freeOutputMemory="false" inputOutput="Input" name="jsonRequest">
       <OperationParameterDataTypeRef dataType="std::string" qualifier="&amp;"/>
     </OperationParameter>
   </OperationTemplate>
   <OperationTemplate accessControl="false" const="false" createRelease="tc13000.1.0" description="Gets detailed information about a classification class based on the classification node ID. This information includes class type, parent, name, description, unit system and user data associated with the class. Information can also be obtained on any documents such as images and icons attached to the classification class." id="Cla0::Soa::Internal::ClassificationCommon::_2020_12::Classification::GetClassDescriptorResponse#Cla0::Soa::ClassificationCommon::Classification::getClassDescriptor#const,std::vector&lt;std::string&gt;,&amp;$int" name="Cla0::Soa::ClassificationCommon::Classification::getClassDescriptor" returnConst="false" returnDescription="Lists of base classes, KeyLOVDefinitions, and Blocks.&lt;br /&gt;Following partial errors may be returned by the operation: &lt;br /&gt;&amp;bull;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;377033 - No object with ID &amp;quot;&amp;lt;ID&amp;gt;&amp;quot; exists in the system.&lt;br /&gt;&amp;bull;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;424017 - The operation failed: The nodeID list was empty. Please provide nodeIDs to describe." returnFreeMemory="false" static="false">
     <OperationReturnDataTypeRef dataType="Cla0::Soa::Internal::ClassificationCommon::_2020_12::Classification::GetClassDescriptorResponse" qualifier=""/>
     <OperationParameter const="true" defaultValue="" description="The list of node ID's (Example: CST#NUM1) to describe." freeOutputMemory="false" inputOutput="Input" name="nodeIDs">
       <OperationParameterDataTypeRef dataType="std::vector" qualifier="&amp;">
          <DataTypeRefParam dataType="std::string" qualifier=""/>
       </OperationParameterDataTypeRef>
     </OperationParameter>
     <OperationParameter const="false" defaultValue="" description="This is a bitwise encoded input parameter. The possible values are:&lt;br /&gt;&amp;bull;1 &amp;lt;&amp;lt; 0 - return the instances count as part of the additionalProperties&lt;br /&gt;&amp;bull;1 &amp;lt;&amp;lt; 1 - return the icon as part of the additionalProperties&lt;br /&gt;&amp;bull;1 &amp;lt;&amp;lt; 2 - return the images as part of the additionalProperties&lt;br /&gt;&amp;bull;1 &amp;lt;&amp;lt; 3 - return the parent as part of the additionalProperties" freeOutputMemory="false" inputOutput="Input" name="options">
       <OperationParameterDataTypeRef dataType="int" qualifier=""/>
     </OperationParameter>
   </OperationTemplate>
   <OperationTemplate accessControl="false" const="false" createRelease="tc13000.1.0" description="Using specified IDs or UIDs, locate one or more classification objects. If they are found, return detailed information about them and their properties, including any block properties. For library elements, the context can additionally be specified." id="Cla0::Soa::Internal::ClassificationCommon::_2020_12::Classification::GetClassificationObjectsResponse#Cla0::Soa::ClassificationCommon::Classification::getClassificationObjects#const,Cla0::Soa::Internal::ClassificationCommon::_2020_12::Classification::Context,&amp;$const,std::vector&lt;std::string&gt;,&amp;" name="Cla0::Soa::ClassificationCommon::Classification::getClassificationObjects" returnConst="false" returnDescription="Response object containing detailed information on the requested classification objects. Any failures occurred during the operation will be specified in the response Object." returnFreeMemory="false" static="false">
     <OperationReturnDataTypeRef dataType="Cla0::Soa::Internal::ClassificationCommon::_2020_12::Classification::GetClassificationObjectsResponse" qualifier=""/>
     <OperationParameter const="true" defaultValue="" description="The context (e.g. Library) in which the request is to be processed. To get or delete the classification object, do not specify the context. This parameter is optional." freeOutputMemory="false" inputOutput="Input" name="context">
       <OperationParameterDataTypeRef dataType="Cla0::Soa::Internal::ClassificationCommon::_2020_12::Classification::Context" qualifier="&amp;"/>
     </OperationParameter>
     <OperationParameter const="true" defaultValue="" description="The list of object IDs or UIDs for which to get detailed information." freeOutputMemory="false" inputOutput="Input" name="objectIDs">
       <OperationParameterDataTypeRef dataType="std::vector" qualifier="&amp;">
          <DataTypeRefParam dataType="std::string" qualifier=""/>
       </OperationParameterDataTypeRef>
     </OperationParameter>
     <MetaException name="Teamcenter::Soa::Server::ServiceException"/>
   </OperationTemplate>
   <OperationTemplate accessControl="false" const="false" createRelease="tc13000.1.0" description="Creates one or more classification objects and (optionally) attaches them to a WorkspaceObject, thus classifying it. If the Classification objects are not associated with any workspace object, they would act as standalone Classification objects. A classification object is also called ICO. For library elements, the context can additionally be specified." id="Cla0::Soa::Internal::ClassificationCommon::_2020_12::Classification::SaveClassificationObjectsResponse#Cla0::Soa::ClassificationCommon::Classification::saveClassificationObjects#const,Cla0::Soa::Internal::ClassificationCommon::_2020_12::Classification::Context,&amp;$const,std::vector&lt;Cla0::Soa::Internal::ClassificationCommon::_2020_12::Classification::ClassificationObject&gt;,&amp;" name="Cla0::Soa::ClassificationCommon::Classification::saveClassificationObjects" returnConst="false" returnDescription="Returns an object containing information about the created or updated classification objects. Any failures occurred during the operation will be specified in the response Object. Any errors for any input objects will result in entire operation returning error. &lt;br /&gt;&lt;br /&gt;Following errors may be returned by the operation: &lt;br /&gt;&amp;bull;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;424013 &amp;ndash; ClassificationObjects Is Empty, please add valid ClassificationObjects to call this SOA.&lt;br /&gt;&amp;bull;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;424014 &amp;ndash; A ClassificationObject is missing one or more required items ID, NodeID, or UnitySystem. &lt;br /&gt;&amp;bull;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;424015 &amp;ndash; A ClassificationProperty missing is missing one or more required items DataType or ID.&lt;br /&gt;&amp;bull;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;424007 - &amp;quot;ExistingItemName&amp;quot; cannot be used for classification. Please use a unique object ID or a name for classification.&lt;br /&gt;&amp;bull;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;424008 - Classification nodes from multiple classification systems are not currently supported in save objects request." returnFreeMemory="false" static="false">
     <OperationReturnDataTypeRef dataType="Cla0::Soa::Internal::ClassificationCommon::_2020_12::Classification::SaveClassificationObjectsResponse" qualifier=""/>
     <OperationParameter const="true" defaultValue="" description="The context (e.g. Library) in which the request is to be processed. To save the classification object, do not specify the context." freeOutputMemory="false" inputOutput="Input" name="context">
       <OperationParameterDataTypeRef dataType="Cla0::Soa::Internal::ClassificationCommon::_2020_12::Classification::Context" qualifier="&amp;"/>
     </OperationParameter>
     <OperationParameter const="true" defaultValue="" description="A vector of ClassificationObjects that will be saved during the operation." freeOutputMemory="false" inputOutput="Input" name="classificationObjects">
       <OperationParameterDataTypeRef dataType="std::vector" qualifier="&amp;">
          <DataTypeRefParam dataType="Cla0::Soa::Internal::ClassificationCommon::_2020_12::Classification::ClassificationObject" qualifier=""/>
       </OperationParameterDataTypeRef>
     </OperationParameter>
   </OperationTemplate>
   <OperationTemplate accessControl="false" const="false" createRelease="tc13000.2.0" description="This operation returns all values available for a property in the context of where it is called.&lt;br /&gt;For example, all the values of a particular property in a given class or in the entire database are returned. Some examples are:&lt;br /&gt;&lt;br /&gt;&amp;bull;    Find all the available length values in the Sheet Metal Screw class. Values of 5mm, 6mm, 7.5 mm, etc. are returned.&lt;br /&gt;&amp;bull;    Find all the values for the Supplier property. All values in all classes providing a list of all used suppliers stored in the classification are returned.&lt;br /&gt;&lt;br /&gt;The operation can take other property values into consideration to narrow the results, for example:&lt;br /&gt;&amp;bull;    Find all the available length values in the Sheet Metal Screw class where the diameter is 4mm.  Values of 5mm, 6mm, etc. are returned. &lt;br /&gt;&lt;br /&gt;This operation is currently used only for traditional classification system." id="Cla0::Soa::Internal::ClassificationCommon::_2021_06::Classification::FindValuesResponse#Cla0::Soa::ClassificationCommon::Classification::findValues#const,std::vector&lt;Cla0::Soa::Internal::ClassificationCommon::_2021_06::Classification::FindValueInput&gt;,&amp;" name="Cla0::Soa::ClassificationCommon::Classification::findValues" returnConst="false" returnDescription="The list of existing values, the count how many times each value is used and in which unit system.&lt;br /&gt;&lt;br /&gt;The following partial errors may be returned:&lt;br /&gt;&amp;bull;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;71024 - The input class ID is not valid. &lt;br /&gt;&amp;bull;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;71128 - The input property ID is not valid (not used in the class/not existing)" returnFreeMemory="false" static="false">
     <OperationReturnDataTypeRef dataType="Cla0::Soa::Internal::ClassificationCommon::_2021_06::Classification::FindValuesResponse" qualifier=""/>
     <OperationParameter const="true" defaultValue="" description="The input to find the values for." freeOutputMemory="false" inputOutput="Input" name="findValueInputs">
       <OperationParameterDataTypeRef dataType="std::vector" qualifier="&amp;">
          <DataTypeRefParam dataType="Cla0::Soa::Internal::ClassificationCommon::_2021_06::Classification::FindValueInput" qualifier=""/>
       </OperationParameterDataTypeRef>
     </OperationParameter>
   </OperationTemplate>
   <OperationTemplate accessControl="false" const="false" createRelease="tc13000.2.0" description="Retrieves the detailed template information attached to a classification class either based on an object classified in a particular class or in general based on the classification class. This service serves both purposes, admin and user facing usage. Use either the classificationClasses as input for admin use cases or classificationObjects for user use cases. They cannot be mixed." id="Cla0::Soa::Internal::ClassificationCommon::_2021_06::Classification::GetGraphicsTemplateInfoResponse#Cla0::Soa::Internal::ClassificationCommon::Classification::getGraphicsTemplateInfo#const,std::vector&lt;std::string&gt;,&amp;$const,std::vector&lt;std::string&gt;,&amp;" name="Cla0::Soa::Internal::ClassificationCommon::Classification::getGraphicsTemplateInfo" returnConst="false" returnDescription="Returns the requested detailed information about attached template to the classification class.&lt;br /&gt;&lt;br /&gt;The following partial errors may be returned:&lt;br /&gt;&lt;ul&gt;&lt;ul&gt;&lt;li type=&quot;disc&quot;&gt;71024 - The input class ID is not valid. &lt;/li&gt;&lt;li type=&quot;disc&quot;&gt;424109 - Provided Classification object is not a valid classification object.&lt;/li&gt;&lt;/ul&gt;&lt;/ul&gt;" returnFreeMemory="false" static="false">
     <OperationReturnDataTypeRef dataType="Cla0::Soa::Internal::ClassificationCommon::_2021_06::Classification::GetGraphicsTemplateInfoResponse" qualifier=""/>
     <OperationParameter const="true" defaultValue="" description="The list of classification objects UIDs (&lt;b&gt;Cls0ClassBase&lt;/b&gt;) for which the template information should be retrieved." freeOutputMemory="false" inputOutput="Input" name="classificationObjects">
       <OperationParameterDataTypeRef dataType="std::vector" qualifier="&amp;">
          <DataTypeRefParam dataType="std::string" qualifier=""/>
       </OperationParameterDataTypeRef>
     </OperationParameter>
     <OperationParameter const="true" defaultValue="" description="The list of classification class IDs for which the template information should be retrieved." freeOutputMemory="false" inputOutput="Input" name="classificationClasses">
       <OperationParameterDataTypeRef dataType="std::vector" qualifier="&amp;">
          <DataTypeRefParam dataType="std::string" qualifier=""/>
       </OperationParameterDataTypeRef>
     </OperationParameter>
   </OperationTemplate>
   <OperationTemplate accessControl="false" const="false" createRelease="tc13000.2.0" description="Searches class descriptors based on criteria provided in the input. &lt;br /&gt;The input criteria may include search expressions that specify the property name, operator and the value to use while performing the search as well as other parameters for how the results should be returned.&lt;br /&gt;The response will include the number of objects found, the number of objects returned and object information such as Name and IRDI (International Registration Data Identifier), as well as any additional requested information.&lt;br /&gt;User may optionally request for complete object information for the results, parents, children, or other outputs by specifying it in the input options." id="Cla0::Soa::Internal::ClassificationCommon::_2021_06::Classification::SearchClassDescriptorResponse#Cla0::Soa::ClassificationCommon::Classification::searchClassDescriptor#const,std::vector&lt;Cla0::Soa::Internal::ClassificationCommon::_2021_06::Classification::SearchCriteria&gt;,&amp;$int" name="Cla0::Soa::ClassificationCommon::Classification::searchClassDescriptor" returnConst="false" returnDescription="A SearchClassDescriptorResponse object containing information about the search results, including the total found, total returned, the found class descriptors, and any parents, children, blocks or keyLOVs belonging to the class descriptors.&lt;br /&gt;&lt;br /&gt;The following errors may be returned by the operation under the errorDetails parameter on the search result:&lt;br /&gt;&lt;ul&gt;&lt;ul&gt;&lt;li type=&quot;disc&quot;&gt;424018 - The operator &amp;ldquo;&amp;lt;OperatorExpression&amp;gt;&amp;rdquo; does not support the datatype &amp;ldquo;&amp;lt;datatype&amp;gt;&amp;rdquo;.&lt;/li&gt;&lt;li type=&quot;disc&quot;&gt;424019 - The value cannot be empty for the operator &amp;ldquo;&amp;lt;OperatorExpression&amp;gt;&amp;rdquo; and datatype &amp;ldquo;&amp;lt;datatype&amp;gt;&amp;rdquo;.&lt;/li&gt;&lt;li type=&quot;disc&quot;&gt;424020 - Property value does not support &amp;ldquo;&amp;lt;datatype&amp;gt;&amp;rdquo; as a datatype.&lt;/li&gt;&lt;li type=&quot;disc&quot;&gt;424021 - Invalid operator expression on the search expression.&lt;/li&gt;&lt;li type=&quot;disc&quot;&gt;424022 - The value of property &amp;quot;&amp;lt;propertyName&amp;gt;&amp;quot; must be of type &amp;quot;&amp;lt;datatype&amp;gt;&amp;quot;.&lt;/li&gt;&lt;li type=&quot;disc&quot;&gt;424023 - The property &amp;quot;&amp;lt;propertyName&amp;gt;&amp;quot; does not exist on the class.&lt;/li&gt;&lt;li type=&quot;disc&quot;&gt;424024 - Multiple search expressions are not supported for traditional classification.&lt;/li&gt;&lt;li type=&quot;disc&quot;&gt;424025 - Searching on multiple values is not supported for traditional classification.&lt;/li&gt;&lt;/ul&gt;&lt;/ul&gt;" returnFreeMemory="false" static="false">
     <OperationReturnDataTypeRef dataType="Cla0::Soa::Internal::ClassificationCommon::_2021_06::Classification::SearchClassDescriptorResponse" qualifier=""/>
     <OperationParameter const="true" defaultValue="" description="A list of search criteria to be used when searching class descriptors." freeOutputMemory="false" inputOutput="Input" name="searchCriteria">
       <OperationParameterDataTypeRef dataType="std::vector" qualifier="&amp;">
          <DataTypeRefParam dataType="Cla0::Soa::Internal::ClassificationCommon::_2021_06::Classification::SearchCriteria" qualifier=""/>
       </OperationParameterDataTypeRef>
     </OperationParameter>
     <OperationParameter const="false" defaultValue="" description="This is a bitwise encoded input parameter. The possible values are:&lt;br /&gt;&lt;ul&gt;&lt;ul&gt;&lt;li type=&quot;disc&quot;&gt;1 &amp;lt;&amp;lt; 0 - Return the full information about the class descriptor results.&lt;/li&gt;&lt;li type=&quot;disc&quot;&gt;1 &amp;lt;&amp;lt; 1 - Return the full information about the results&amp;rsquo; parents.&lt;/li&gt;&lt;li type=&quot;disc&quot;&gt;1 &amp;lt;&amp;lt; 2 - Return the full information about the results&amp;rsquo; children.&lt;/li&gt;&lt;li type=&quot;disc&quot;&gt;1 &amp;lt;&amp;lt; 3 - Return the instances count as part of the additionalProperties. Only returned if the full information on at least one class descriptor is returned.&lt;/li&gt;&lt;li type=&quot;disc&quot;&gt;1 &amp;lt;&amp;lt; 4 - Return the icon as part of the additionalProperties. Only returned if the full information on at least one class descriptor is returned.&lt;/li&gt;&lt;li type=&quot;disc&quot;&gt;1 &amp;lt;&amp;lt; 5 - Return the images as part of the additionalProperties. Only returned if the full information on at least one class descriptor is returned.&lt;/li&gt;&lt;/ul&gt;&lt;/ul&gt;" freeOutputMemory="false" inputOutput="Input" name="options">
       <OperationParameterDataTypeRef dataType="int" qualifier=""/>
     </OperationParameter>
   </OperationTemplate>
   <OperationTemplate accessControl="false" const="false" createRelease="tc13000.2.0" description="Finds all the classification objects based on criteria provided in the input. The input criteria may include search expressions that specify the property name, operator and the value to use while performing the search. &lt;br /&gt;The response will include the number of objects found, the number of objects returned and object UID, as well as any additional requested information." id="Cla0::Soa::Internal::ClassificationCommon::_2021_06::Classification::SearchIcoResponse#Cla0::Soa::ClassificationCommon::Classification::searchClassificationObjects#const,std::vector&lt;Cla0::Soa::Internal::ClassificationCommon::_2021_06::Classification::SearchIcoCriteria&gt;,&amp;$int" name="Cla0::Soa::ClassificationCommon::Classification::searchClassificationObjects" returnConst="false" returnDescription="Information about the search results, including total found, total returned and if requested, complete information on returned objects and descriptors of classes they are classified into.  &lt;br /&gt;&lt;br /&gt;The following errors may be returned by the operation under the errorDetails container on each search result:&lt;br /&gt;&amp;bull;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;424018 &amp;ndash; The operator &amp;ldquo;&amp;lt;OperatorExpression&amp;gt;&amp;rdquo; does not support the datatype &amp;ldquo;&amp;lt;datatype&amp;gt;&amp;rdquo;.&lt;br /&gt;&amp;bull;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;424019 &amp;ndash; The value cannot be empty for the operator &amp;ldquo;&amp;lt;OperatorExpression&amp;gt;&amp;rdquo; and datatype &amp;ldquo;&amp;lt;datatype&amp;gt;&amp;rdquo;.&lt;br /&gt;&amp;bull;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;424020 &amp;ndash; PropertyValue does not support &amp;ldquo;&amp;lt;datatype&amp;gt;&amp;rdquo; as a datatype.&lt;br /&gt;&amp;bull;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;424021 &amp;ndash; Invalid operatorExpression on the SearchExpression.&lt;br /&gt;&amp;bull;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;424023 &amp;ndash; The property &amp;ldquo;&amp;lt;propertyName&amp;gt;&amp;rdquo; does not exist on a classification object.&lt;br /&gt;&amp;bull;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;424024 &amp;ndash; Search on the property &amp;ldquo;&amp;lt;propertyName&amp;gt;&amp;rdquo; is not supported." returnFreeMemory="false" static="false">
     <OperationReturnDataTypeRef dataType="Cla0::Soa::Internal::ClassificationCommon::_2021_06::Classification::SearchIcoResponse" qualifier=""/>
     <OperationParameter const="true" defaultValue="" description="A list of search criteria to use while performing search on classification objects." freeOutputMemory="false" inputOutput="Input" name="searchCriteria">
       <OperationParameterDataTypeRef dataType="std::vector" qualifier="&amp;">
          <DataTypeRefParam dataType="Cla0::Soa::Internal::ClassificationCommon::_2021_06::Classification::SearchIcoCriteria" qualifier=""/>
       </OperationParameterDataTypeRef>
     </OperationParameter>
     <OperationParameter const="false" defaultValue="" description="A placeholder to enable future enhancements in partial load of classification objects and class descriptors. Currently unused for this operation." freeOutputMemory="false" inputOutput="Input" name="options">
       <OperationParameterDataTypeRef dataType="int" qualifier=""/>
     </OperationParameter>
   </OperationTemplate>
   <OperationTemplate accessControl="false" const="false" createRelease="tc13000.1.0" description="Gets detailed information about a classification class based on classification node ID. This information includes class type, parent, name, description, unit system and user data associated with the class. It also includes a count of children, number of classification views and number of instances of classification objects associated with the classification class. Information can also be obtained on any documents such as images and icons attached to the classification class." id="std::string#Cla0::Soa::ClassificationCommon::Classification::getClassDescriptor#const,std::string,&amp;" name="Cla0::Soa::ClassificationCommon::Classification::getClassDescriptor" returnConst="false" returnDescription="A JSON string containing detailed information about the described classes.&lt;br /&gt;Refer to following sample responses for operations on class descriptor:&lt;br /&gt;Success Response:  TC_DATA\classification\json\cla\1.0.0\samples\CLA_getClassDescriptor_response.json&lt;br /&gt;Error Response: TC_DATA\classification\json\cla\1.0.0\samples\CLA_getClassDescriptor_negative_response.json&lt;br /&gt;&lt;br /&gt;Any failures occurred during the operation will be specified in the JSON string under the 'ErrorDetails' container. &lt;br /&gt;Following errors may be returned by the operation:&lt;br /&gt;&lt;ul&gt;&lt;ul&gt;&lt;li type=&quot;disc&quot;&gt;132010 - The specified Hierarchy node with ID &amp;quot;&amp;lt;ID&amp;gt;&amp;quot; cannot be found.&lt;/li&gt;&lt;/ul&gt;&lt;/ul&gt;" returnFreeMemory="false" static="false">
     <OperationReturnDataTypeRef dataType="std::string" qualifier=""/>
     <OperationParameter const="true" defaultValue="" description="A JSON string containing information about the classification objects to be retrieved. The structure of the JSON string must follow the JSON schema specified in the file: TC_DATA\classification\json\cla\1.0.0\schema\Classification_Get_ClassDescriptor_Request.schema.json." freeOutputMemory="false" inputOutput="Input" name="jsonRequest">
       <OperationParameterDataTypeRef dataType="std::string" qualifier="&amp;"/>
     </OperationParameter>
   </OperationTemplate>
   <OperationTemplate accessControl="false" const="false" createRelease="tc13000.1.0" description="Imports the json input containing classification definitions of type Cst0ClassDefinition, Cst0PropertyDefinition, Cst0KeyLOVDefinition or NodeDefinition and optionally validates them.&lt;br /&gt;The SOA accepts file ticket which will be used to read the json file contents from the transient volume, which will further be used to create classification definitions.&lt;br /&gt;The JSON file which is to be uploaded must follow one of the following JSON schema:-&lt;br /&gt;&amp;bull;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;TC_DATA\classification\json\cla\1.1.0\schema\ Classification_Save_ClassDefinitions_Request.schema.json&lt;br /&gt;&amp;bull;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;TC_DATA\classification\json\cla\1.1.0\schema\ Classification_Save_KeyLOVDefinitions_Request.schema.json&lt;br /&gt;&amp;bull;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;TC_DATA\classification\json\cla\1.1.0\schema\ Classification_Save_PropertyDefinitions_Request.schema.json&lt;br /&gt;&amp;bull;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;TC_DATA\classification\json\cla\1.0.0\schema\ Classification_Save_NodeDefinitions_Request.schema.json&lt;br /&gt;The response will include the information such as Name and IRDI (International Registration Data Identifier) of classification definitions." id="std::string#Cla0::Soa::ClassificationCommon::Classification::importClassificationDefinitions#const,std::string,&amp;$bool" name="Cla0::Soa::ClassificationCommon::Classification::importClassificationDefinitions" returnConst="false" returnDescription="A JSON string containing information about the classification definition. Any failures occurred during the operation will be specified in the JSON string under the 'ErrorDetails' container. &lt;br /&gt;Refer the following sample response for the import of classification definitions:&lt;br /&gt;TC_DATA\classification\json\cla\1.0.0\samples\Classification_Import_Definitions_Response_sample.json&lt;br /&gt;The following errors may be in the JSON response:&lt;br /&gt;&amp;bull;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;377021 - Several objects cannot be saved/updated because they have the same namespace and ID.&lt;br /&gt;&amp;bull;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;377022 - Some partial errors have occurred. Refer to the result information for each object.&lt;br /&gt;&amp;bull;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;377027 - The attribute reference &amp;quot;Attribute1&amp;quot; is not unique in the class definition.&lt;br /&gt;&amp;bull;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;14150 - Invalid Transient Ticket." returnFreeMemory="false" static="false">
     <OperationReturnDataTypeRef dataType="std::string" qualifier=""/>
     <OperationParameter const="true" defaultValue="" description="The file ticket which will be used to read the json file contents from the transient volume." freeOutputMemory="false" inputOutput="Input" name="fileTicket">
       <OperationParameterDataTypeRef dataType="std::string" qualifier="&amp;"/>
     </OperationParameter>
     <OperationParameter const="false" defaultValue="" description="Run the SOA in dry mode or not.&lt;br /&gt;If true, this operation will validate the JSON request without creating classification definitions; otherwise, Classification definitions will be created." freeOutputMemory="false" inputOutput="Input" name="dryRun">
       <OperationParameterDataTypeRef dataType="bool" qualifier=""/>
     </OperationParameter>
   </OperationTemplate>
   <OperationTemplate accessControl="false" const="false" createRelease="tc13000.1.0" description="Searches classification definitions based on criteria provided in the input. Classification definitions include objects such as NodeDefinition, ClassDefinition, PropertyDefinition and KeyLOVDefinition. &lt;br /&gt;The input criteria may include parameters that specify the property name, operator and the value to use while performing the search. &lt;br /&gt;The response will include the number of objects found, the number of objects returned and object information such as Name and IRDI (International Registration Data Identifier).&lt;br /&gt;User may optionally request for complete object information by specifying it in the input criteria." id="std::string#Cla0::Soa::ClassificationCommon::Classification::searchClassificationDefinitions#const,std::string,&amp;" name="Cla0::Soa::ClassificationCommon::Classification::searchClassificationDefinitions" returnConst="false" returnDescription="A JSON string containing information about the search results. &lt;br /&gt;Refer the following sample response for search on classification definitions:&lt;br /&gt;TC_DATA\classification\json\cla\1.0.0\samples\Classification_Search_Definitions_Response_sample.json&lt;br /&gt;The following errors may be returned in the JSON document under the ErrorDetails element -&lt;br /&gt;&amp;bull;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;377062 - The value of property &amp;quot;Name&amp;quot; on the object &amp;quot;ClassDefinition&amp;quot; must be of type &amp;quot;String&amp;quot;.&lt;br /&gt;&amp;bull;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;377063 - The property &amp;quot;Parents&amp;quot; does not exist on the object &amp;quot;PropertyDefinition&amp;quot;.&lt;br /&gt;&amp;bull;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;377064 - Search on the property 'LOVItems' in KeyLOVDefinition is not supported." returnFreeMemory="false" static="false">
     <OperationReturnDataTypeRef dataType="std::string" qualifier=""/>
     <OperationParameter const="true" defaultValue="" description="The parameter is a JSON string containing search criteria to be used while performing the search.&lt;br /&gt;The structure of the JSON string must follow the JSON schema specified in the file: &lt;br /&gt;TC_DATA\classification\json\cla\1.0.0\schema\Classification_Search_Definitions_Request.schema.json.&lt;br /&gt;A sample input is provided in the file: &lt;br /&gt;TC_DATA\classification\json\cla\1.0.0\samples\Classification_Search_Definitions_Request_sample.json." freeOutputMemory="false" inputOutput="Input" name="jsonRequest">
       <OperationParameterDataTypeRef dataType="std::string" qualifier="&amp;"/>
     </OperationParameter>
   </OperationTemplate>
   <OperationTemplate accessControl="false" const="false" createRelease="tc13000.2.0" description="Finds all the classification objects based on criteria provided in the input. The input criteria may include search expressions that specify the property name, operator and the value to use while performing the search. &lt;br /&gt;The response will include the number of objects found, the number of objects returned and object UID, as well as any additional requested information." id="std::string#Cla0::Soa::ClassificationCommon::Classification::searchClassificationObjects#const,std::string,&amp;" name="Cla0::Soa::ClassificationCommon::Classification::searchClassificationObjects" returnConst="false" returnDescription="A JSON string containing information about the search results, including total found, total returned and if requested, complete information on returned objects and descriptors of classes they are classified into. Refer the following sample response:&lt;br /&gt;TC_DATA\classification\json\2.0.0\samples\SearchClassificationObjects_Response_sample.json&lt;br /&gt;&lt;br /&gt;The following errors may be returned by the operation under the ErrorDetails container on each search result:&lt;br /&gt;&amp;bull;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;424023 &amp;ndash; The property &amp;ldquo;&amp;lt;propertyName&amp;gt;&amp;rdquo; does not exist on a classification object.&lt;br /&gt;&amp;bull;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;424024 &amp;ndash; Search on the property &amp;ldquo;&amp;lt;propertyName&amp;gt;&amp;rdquo; is not supported." returnFreeMemory="false" static="false">
     <OperationReturnDataTypeRef dataType="std::string" qualifier=""/>
     <OperationParameter const="true" defaultValue="" description="A JSON string containing a list of search criteria to use while performing search on classification objects. &lt;br /&gt;The structure of the JSON string must follow the JSON schema specified in the file: &lt;br /&gt;TC_DATA\classification\json\cla\2.0.0\schema\SearchClassificationObjects_Request.schema.json. &lt;br /&gt;A sample input is provided in the file: &lt;br /&gt;TC_DATA\classification\json\cla\2.0.0\samples\SearchClassificationObjects_Request_sample.json." freeOutputMemory="false" inputOutput="Input" name="jsonRequest">
       <OperationParameterDataTypeRef dataType="std::string" qualifier="&amp;"/>
     </OperationParameter>
   </OperationTemplate>
   <OperationTemplate accessControl="false" const="false" createRelease="tc13000.1.0" description="Deletes one or more classification objects permanently. A classification object is also called ICO. The classified workspace object associated with the ICO will not be deleted. This API also supports deleting Next Generation Classification objects and Library Elements (&lt;b&gt;lbr0LibraryElement&lt;/b&gt;). For library elements, the context can additionally be specified." id="Teamcenter::Soa::Server::ServiceData#Cla0::Soa::ClassificationCommon::Classification::deleteClassificationObjects#const,Cla0::Soa::Internal::ClassificationCommon::_2020_12::Classification::Context,&amp;$const,std::vector&lt;std::string&gt;,&amp;" name="Cla0::Soa::ClassificationCommon::Classification::deleteClassificationObjects" returnConst="false" returnDescription="Returns the service data containing a list of deleted object IDs, and any errors that occured.&lt;br /&gt;The following errors may be returned by the operation:&lt;br /&gt;&lt;ul&gt;&lt;ul&gt;&lt;li type=&quot;disc&quot;&gt;424006 - The specified classification object with ID &amp;quot;&amp;lt;Invalid ID&amp;gt;&amp;quot; cannot be found.&lt;/li&gt;&lt;li type=&quot;disc&quot;&gt;424009 - Classification objects from multiple classification systems are not currently supported in get or delete objects request.&lt;/li&gt;&lt;li type=&quot;disc&quot;&gt;424016 - The input object ID list cannot be empty in get or delete objects request.&lt;/li&gt;&lt;/ul&gt;&lt;/ul&gt;" returnFreeMemory="false" static="false">
     <OperationReturnDataTypeRef dataType="Teamcenter::Soa::Server::ServiceData" qualifier=""/>
     <OperationParameter const="true" defaultValue="" description="The context in which the request is to be processed. If the context type is specified as &amp;ldquo;Library&amp;rdquo;, the classification objects specified in the objectIDs to be deleted will be searched and deleted from Library Management module; otherwise, the classification objects will be searched from the COTS (Commercial off the Shelf) classification. This parameter is optional." freeOutputMemory="false" inputOutput="Input" name="context">
       <OperationParameterDataTypeRef dataType="Cla0::Soa::Internal::ClassificationCommon::_2020_12::Classification::Context" qualifier="&amp;"/>
     </OperationParameter>
     <OperationParameter const="true" defaultValue="" description="The list of object IDs or UIDs for which the classification objects will first be searched and then deleted." freeOutputMemory="false" inputOutput="Input" name="objectIDs">
       <OperationParameterDataTypeRef dataType="std::vector" qualifier="&amp;">
          <DataTypeRefParam dataType="std::string" qualifier=""/>
       </OperationParameterDataTypeRef>
     </OperationParameter>
   </OperationTemplate>
   <OperationTemplate accessControl="false" const="false" createRelease="tc13000.2.0" description="This operation will save, either create or update, a graphics member. A graphics member is either a member of a Part Family, or a member of a Template Part. The creation or update is based on the attribute mappings provide by a Classification Admin configured Part Family Template. The values of these attribute are used to create a new member or update an existing one for a Part Family. This updates the spreadsheet of Part Family Members. Creates and Updates the graphics (part and or JT file) for a Part Family Member and store these as items in the Teamcenter database. Part family templates are used in NX to define a set or family of parts that share similar form, fit, and function but differ based on parameter values (for example, length, width, or diameter) that typically control the physical characteristics of the part (or tool). The part families are created with the help of a Microsoft Excel file that holds a list of all part family members." id="Teamcenter::Soa::Server::ServiceData#Cla0::Soa::ClassificationCommon::Classification::saveGraphicsMember#const,std::vector&lt;Cla0::Soa::Internal::ClassificationCommon::_2021_06::Classification::SaveGraphicsMemberRequest&gt;,&amp;" name="Cla0::Soa::ClassificationCommon::Classification::saveGraphicsMember" returnConst="false" returnDescription="Returns a service data containing a list of created or updated part members. The following errors may be returned by the operation:&lt;br /&gt;&lt;ul&gt;&lt;ul&gt;&lt;li type=&quot;disc&quot;&gt;71608 - The Classification instance belongs to a part family member.&lt;/li&gt;&lt;li type=&quot;disc&quot;&gt;71615 - The revision of select item is already used as a template in another class.&lt;/li&gt;&lt;li type=&quot;disc&quot;&gt;71633 - The classification instance classifies a workspace object that is not related to the part family member.&lt;/li&gt;&lt;li type=&quot;disc&quot;&gt;424110 - Provided WorkspaceObject is not a valid template. It is not attached to the classification class with either ICS_part_family or FndTemplatePart relation.&lt;/li&gt;&lt;li type=&quot;disc&quot;&gt;424111 - Provided WorkspaceObject is not a valid template. It does not contain any part file.&lt;/li&gt;&lt;/ul&gt;&lt;/ul&gt;" returnFreeMemory="false" static="false">
     <OperationReturnDataTypeRef dataType="Teamcenter::Soa::Server::ServiceData" qualifier=""/>
     <OperationParameter const="true" defaultValue="" description="The member objects to create or update." freeOutputMemory="false" inputOutput="Input" name="requestObjects">
       <OperationParameterDataTypeRef dataType="std::vector" qualifier="&amp;">
          <DataTypeRefParam dataType="Cla0::Soa::Internal::ClassificationCommon::_2021_06::Classification::SaveGraphicsMemberRequest" qualifier=""/>
       </OperationParameterDataTypeRef>
     </OperationParameter>
   </OperationTemplate>
   <Operation canOverride="false" component="Cla0classification" createRelease="tc13000.1.0" dependencies="" description="Deletes one or more classification objects permanently. A classification object is also called ICO. The classified workspace object associated with the ICO will not be deleted. This API also supports deleting Next Generation Classification objects and Library Elements (&lt;b&gt;lbr0LibraryElement&lt;/b&gt;). For library elements, the context can additionally be specified." exceptionCondition="" id="deleteClassificationObjects#const,Cla0::Soa::Internal::ClassificationCommon::_2020_12::Classification::Context,&amp;$const,std::vector&lt;std::string&gt;,&amp;" interface="Cla0::Soa::ClassificationCommon::Classification" isPostActionAllowed="false" isPreActionAllowed="false" isPreConditionAllowed="false" isPublished="false" name="deleteClassificationObjects" opTemplate="Teamcenter::Soa::Server::ServiceData#Cla0::Soa::ClassificationCommon::Classification::deleteClassificationObjects#const,Cla0::Soa::Internal::ClassificationCommon::_2020_12::Classification::Context,&amp;$const,std::vector&lt;std::string&gt;,&amp;" returnDescription="Returns the service data containing a list of deleted object IDs, and any errors that occured.&lt;br /&gt;The following errors may be returned by the operation:&lt;br /&gt;&lt;ul&gt;&lt;ul&gt;&lt;li type=&quot;disc&quot;&gt;424006 - The specified classification object with ID &amp;quot;&amp;lt;Invalid ID&amp;gt;&amp;quot; cannot be found.&lt;/li&gt;&lt;li type=&quot;disc&quot;&gt;424009 - Classification objects from multiple classification systems are not currently supported in get or delete objects request.&lt;/li&gt;&lt;li type=&quot;disc&quot;&gt;424016 - The input object ID list cannot be empty in get or delete objects request.&lt;/li&gt;&lt;/ul&gt;&lt;/ul&gt;" useCase="User needs to delete classification objects. It is typically called when after creating or searching the classification objects, user decides that the returned objects are not needed anymore.&lt;br /&gt;&lt;br /&gt;This operation can also be used to delete library elements by specifying the context object. This is useful in library management.">
     <ParameterInfo description="The context in which the request is to be processed. If the context type is specified as &amp;ldquo;Library&amp;rdquo;, the classification objects specified in the objectIDs to be deleted will be searched and deleted from Library Management module; otherwise, the classification objects will be searched from the COTS (Commercial off the Shelf) classification. This parameter is optional." parameterName="context"/>
     <ParameterInfo description="The list of object IDs or UIDs for which the classification objects will first be searched and then deleted." parameterName="objectIDs"/>
   </Operation>
   <Operation canOverride="false" component="Cla0classification" createRelease="tc12000.3.0" dependencies="" description="Deletes one or more classification objects permanently. A classification object is also called ICO. The classified workspace object associated with the ICO will not be deleted." exceptionCondition="" id="deleteClassificationObjects#const,std::string,&amp;" interface="Cla0::Soa::ClassificationCommon::Classification" isPostActionAllowed="false" isPreActionAllowed="false" isPreConditionAllowed="false" isPublished="true" name="deleteClassificationObjects" opTemplate="Cla0::Soa::ClassificationCommon::_2020_01::Classification::ClassificationObjectResponse#Cla0::Soa::ClassificationCommon::Classification::deleteClassificationObjects#const,std::string,&amp;" returnDescription="Returns a json string containing information on the deleted classification objects. Any failures occurred during the operation will be specified in the json response string.&lt;br /&gt;Following errors may be returned by the operation:&lt;br /&gt;&amp;bull;    424002 - The schema validation has failed. The path to the violated rule in the schema file is &amp;quot;#/properties/PropertyRecord/items&amp;quot; and the violated schema keyword is &amp;quot;additionalProperties&amp;quot;.&lt;br /&gt;&amp;bull;    424009 - Classification objects from multiple classification systems are not currently supported in get or delete objects request." useCase="User needs to delete classification objects. It is typically called when after creating or searching the classification objects, user decides that the returned objects are not needed anymore.">
     <ParameterInfo description="The parameter is a JSON string containing information about classification objects to be deleted. The structure of the JSON string must follow the JSON schema specified in the file: TC_DATA\classification\json\cla\1.0.0\schema\GetClassificationObjects_Request.schema.json. A sample input for deleting classification objects is provided in the file: TC_DATA\classification\json\cla\1.0.0\samples\GetClassificationObjects_Request_sample.json." parameterName="jsonRequest"/>
   </Operation>
   <Operation canOverride="false" component="Cla0classification" createRelease="tc13000.2.0" dependencies="" description="This operation returns all values available for a property in the context of where it is called.&lt;br /&gt;For example, all the values of a particular property in a given class or in the entire database are returned. Some examples are:&lt;br /&gt;&lt;br /&gt;&amp;bull;    Find all the available length values in the Sheet Metal Screw class. Values of 5mm, 6mm, 7.5 mm, etc. are returned.&lt;br /&gt;&amp;bull;    Find all the values for the Supplier property. All values in all classes providing a list of all used suppliers stored in the classification are returned.&lt;br /&gt;&lt;br /&gt;The operation can take other property values into consideration to narrow the results, for example:&lt;br /&gt;&amp;bull;    Find all the available length values in the Sheet Metal Screw class where the diameter is 4mm.  Values of 5mm, 6mm, etc. are returned. &lt;br /&gt;&lt;br /&gt;This operation is currently used only for traditional classification system." exceptionCondition="" id="findValues#const,std::vector&lt;Cla0::Soa::Internal::ClassificationCommon::_2021_06::Classification::FindValueInput&gt;,&amp;" interface="Cla0::Soa::ClassificationCommon::Classification" isPostActionAllowed="false" isPreActionAllowed="false" isPreConditionAllowed="false" isPublished="false" name="findValues" opTemplate="Cla0::Soa::Internal::ClassificationCommon::_2021_06::Classification::FindValuesResponse#Cla0::Soa::ClassificationCommon::Classification::findValues#const,std::vector&lt;Cla0::Soa::Internal::ClassificationCommon::_2021_06::Classification::FindValueInput&gt;,&amp;" returnDescription="The list of existing values, the count how many times each value is used and in which unit system.&lt;br /&gt;&lt;br /&gt;The following partial errors may be returned:&lt;br /&gt;&amp;bull;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;71024 - The input class ID is not valid. &lt;br /&gt;&amp;bull;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;71128 - The input property ID is not valid (not used in the class/not existing)" useCase="Teamcenter Classification displays the List of Values dialog box containing a list of property values stored for the input property, their count and unit system in which those values are stored. This operation helps user to search for such stored values for multiple input properties.&lt;br /&gt;The search can be constrained by setting other attribute values, the operations returns only the property values that are valid given the current search criteria (helping the user to efficiently narrow down the search and choose valid values that will find classified objects).">
     <ParameterInfo description="The input to find the values for." parameterName="findValueInputs"/>
   </Operation>
   <Operation canOverride="false" component="Cla0classification" createRelease="tc13000.1.0" dependencies="" description="Gets detailed information about a classification class based on classification node ID. This information includes class type, parent, name, description, unit system and user data associated with the class. It also includes a count of children, number of classification views and number of instances of classification objects associated with the classification class. Information can also be obtained on any documents such as images and icons attached to the classification class." exceptionCondition="" id="getClassDescriptor#const,std::string,&amp;" interface="Cla0::Soa::ClassificationCommon::Classification" isPostActionAllowed="false" isPreActionAllowed="false" isPreConditionAllowed="false" isPublished="true" name="getClassDescriptor" opTemplate="std::string#Cla0::Soa::ClassificationCommon::Classification::getClassDescriptor#const,std::string,&amp;" returnDescription="A JSON string containing detailed information about the described classes.&lt;br /&gt;Refer to following sample responses for operations on class descriptor:&lt;br /&gt;Success Response:  TC_DATA\classification\json\cla\1.0.0\samples\CLA_getClassDescriptor_response.json&lt;br /&gt;Error Response: TC_DATA\classification\json\cla\1.0.0\samples\CLA_getClassDescriptor_negative_response.json&lt;br /&gt;&lt;br /&gt;Any failures occurred during the operation will be specified in the JSON string under the 'ErrorDetails' container. &lt;br /&gt;Following errors may be returned by the operation:&lt;br /&gt;&lt;ul&gt;&lt;ul&gt;&lt;li type=&quot;disc&quot;&gt;132010 - The specified Hierarchy node with ID &amp;quot;&amp;lt;ID&amp;gt;&amp;quot; cannot be found.&lt;/li&gt;&lt;/ul&gt;&lt;/ul&gt;" useCase="When user need details of classification classes. These details can help user decide whether to classify a workspace object into particular classification classes.">
     <ParameterInfo description="A JSON string containing information about the classification objects to be retrieved. The structure of the JSON string must follow the JSON schema specified in the file: TC_DATA\classification\json\cla\1.0.0\schema\Classification_Get_ClassDescriptor_Request.schema.json." parameterName="jsonRequest"/>
   </Operation>
   <Operation canOverride="false" component="Cla0classification" createRelease="tc13000.1.0" dependencies="" description="Gets detailed information about a classification class based on the classification node ID. This information includes class type, parent, name, description, unit system and user data associated with the class. Information can also be obtained on any documents such as images and icons attached to the classification class." exceptionCondition="" id="getClassDescriptor#const,std::vector&lt;std::string&gt;,&amp;$int" interface="Cla0::Soa::ClassificationCommon::Classification" isPostActionAllowed="false" isPreActionAllowed="false" isPreConditionAllowed="false" isPublished="false" name="getClassDescriptor" opTemplate="Cla0::Soa::Internal::ClassificationCommon::_2020_12::Classification::GetClassDescriptorResponse#Cla0::Soa::ClassificationCommon::Classification::getClassDescriptor#const,std::vector&lt;std::string&gt;,&amp;$int" returnDescription="Lists of base classes, KeyLOVDefinitions, and Blocks.&lt;br /&gt;Following partial errors may be returned by the operation: &lt;br /&gt;&amp;bull;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;377033 - No object with ID &amp;quot;&amp;lt;ID&amp;gt;&amp;quot; exists in the system.&lt;br /&gt;&amp;bull;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;424017 - The operation failed: The nodeID list was empty. Please provide nodeIDs to describe." useCase="The operation getClassDescriptor can be used to get detailed information about class definitions and its associated blocks and keyLOV definitions. This operation could be used when the user needs details of classification class definitions. These details can help the user decide whether to classify a workspace object into a particular classification class.">
     <DeprecationInfo deprecatedDescription="Please use the searchClassDescriptor operation." deprecatedRelease="tc13000.2.0"/>
     <ParameterInfo description="The list of node ID's (Example: CST#NUM1) to describe." parameterName="nodeIDs"/>
     <ParameterInfo description="This is a bitwise encoded input parameter. The possible values are:&lt;br /&gt;&amp;bull;1 &amp;lt;&amp;lt; 0 - return the instances count as part of the additionalProperties&lt;br /&gt;&amp;bull;1 &amp;lt;&amp;lt; 1 - return the icon as part of the additionalProperties&lt;br /&gt;&amp;bull;1 &amp;lt;&amp;lt; 2 - return the images as part of the additionalProperties&lt;br /&gt;&amp;bull;1 &amp;lt;&amp;lt; 3 - return the parent as part of the additionalProperties" parameterName="options"/>
   </Operation>
   <Operation canOverride="false" component="Cla0classification" createRelease="tc13000.1.0" dependencies="" description="Using specified IDs or UIDs, locate one or more classification objects. If they are found, return detailed information about them and their properties, including any block properties. For library elements, the context can additionally be specified." exceptionCondition="&lt;ul&gt;&lt;ul&gt;&lt;li type=&quot;disc&quot;&gt;424006 - The specified classification object with ID &amp;quot;&amp;lt;Invalid ID&amp;gt;&amp;quot; cannot be found.&lt;/li&gt;&lt;li type=&quot;disc&quot;&gt;424009 - Classification objects from multiple classification systems are not currently supported in get or delete objects request.&lt;/li&gt;&lt;/ul&gt;&lt;/ul&gt;" id="getClassificationObjects#const,Cla0::Soa::Internal::ClassificationCommon::_2020_12::Classification::Context,&amp;$const,std::vector&lt;std::string&gt;,&amp;" interface="Cla0::Soa::ClassificationCommon::Classification" isPostActionAllowed="false" isPreActionAllowed="false" isPreConditionAllowed="false" isPublished="false" name="getClassificationObjects" opTemplate="Cla0::Soa::Internal::ClassificationCommon::_2020_12::Classification::GetClassificationObjectsResponse#Cla0::Soa::ClassificationCommon::Classification::getClassificationObjects#const,Cla0::Soa::Internal::ClassificationCommon::_2020_12::Classification::Context,&amp;$const,std::vector&lt;std::string&gt;,&amp;" returnDescription="Response object containing detailed information on the requested classification objects. Any failures occurred during the operation will be specified in the response Object." useCase="This operation can be utilized when user needs to find an existing classification objects to either view or update its details. It can be followed by operations like saveClassificationObjects() or deleteClassificationObjects() to update or delete the classification objects.&lt;br /&gt;&lt;br /&gt;This operation can also be used to get library elements by specifying the context object. This is useful in library management.">
     <ParameterInfo description="The context (e.g. Library) in which the request is to be processed. To get or delete the classification object, do not specify the context. This parameter is optional." parameterName="context"/>
     <ParameterInfo description="The list of object IDs or UIDs for which to get detailed information." parameterName="objectIDs"/>
   </Operation>
   <Operation canOverride="false" component="Cla0classification" createRelease="tc12000.3.0" dependencies="" description="Looks for specified classification objects. If they are found, then detailed information about those objects is provided." exceptionCondition="" id="getClassificationObjects#const,std::string,&amp;" interface="Cla0::Soa::ClassificationCommon::Classification" isPostActionAllowed="false" isPreActionAllowed="false" isPreConditionAllowed="false" isPublished="true" name="getClassificationObjects" opTemplate="Cla0::Soa::ClassificationCommon::_2020_01::Classification::ClassificationObjectResponse#Cla0::Soa::ClassificationCommon::Classification::getClassificationObjects#const,std::string,&amp;" returnDescription="Returns a JSON string containing detailed information on the requested classification objects. Any failures occurred   during the operation will be specified in the JSON response string.&lt;br /&gt;Following errors may be returned by the operation:  &lt;br /&gt;&amp;bull;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;424002 - The schema validation has failed. The path to the violated rule in the schema file is &amp;quot;#/properties/PropertyRecord/items&amp;quot; and the violated schema keyword is &amp;quot;additionalProperties&amp;quot;.&lt;br /&gt;&amp;bull;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;424009 - Classification objects from multiple classification systems are not currently supported in get or delete objects request." useCase="This operation can be utilized when user needs to find an existing classification object(s) to either view or update its details. It can be followed by operations like saveClassificationObjects() or deleteClassificationObjects() to update or delete the classification objects.&lt;br /&gt;This operation, getClassificationObjects() is used to get detailed information about the specified classification objects.">
     <ParameterInfo description="A JSON string containing information about the classification objects to be retrieved. The structure of the JSON string must follow the JSON schema specified in the file: TC_DATA\classification\json\cla\1.0.0\schema\GetClassificationObjects_Request.schema.json. A sample input for fetching classification objects is provided in the file: TC_DATA\classification\json\cla\1.0.0\samples\GetClassificationObjects_Request_sample.json." parameterName="jsonRequest"/>
   </Operation>
   <Operation canOverride="false" component="Cla0classification" createRelease="tc13000.2.0" dependencies="" description="Retrieves the detailed template information attached to a classification class either based on an object classified in a particular class or in general based on the classification class. This service serves both purposes, admin and user facing usage. Use either the classificationClasses as input for admin use cases or classificationObjects for user use cases. They cannot be mixed." exceptionCondition="" id="getGraphicsTemplateInfo#const,std::vector&lt;std::string&gt;,&amp;$const,std::vector&lt;std::string&gt;,&amp;" interface="Cla0::Soa::ClassificationCommon::Classification" isPostActionAllowed="false" isPreActionAllowed="false" isPreConditionAllowed="false" isPublished="false" name="getGraphicsTemplateInfo" opTemplate="Cla0::Soa::Internal::ClassificationCommon::_2021_06::Classification::GetGraphicsTemplateInfoResponse#Cla0::Soa::Internal::ClassificationCommon::Classification::getGraphicsTemplateInfo#const,std::vector&lt;std::string&gt;,&amp;$const,std::vector&lt;std::string&gt;,&amp;" returnDescription="Returns the requested detailed information about attached template to the classification class.&lt;br /&gt;&lt;br /&gt;The following partial errors may be returned:&lt;br /&gt;&lt;ul&gt;&lt;ul&gt;&lt;li type=&quot;disc&quot;&gt;71024 - The input class ID is not valid. &lt;/li&gt;&lt;li type=&quot;disc&quot;&gt;424109 - Provided Classification object is not a valid classification object.&lt;/li&gt;&lt;/ul&gt;&lt;/ul&gt;" useCase="An administrator attaches part family templates/template parts to class definitions in Classification Admin and maps the attributes of the class to the variable properties of the part family template/template part. The classification object can be used to create/update a part family/part member by calling create/update graphic based on the mapping to the respective template.&lt;br /&gt;This can be achieved by calling Cla0::Soa::Internal::ClassificationCommon::_2021_06:saveGraphicsMember() service operation.">
     <ParameterInfo description="The list of classification objects UIDs (&lt;b&gt;Cls0ClassBase&lt;/b&gt;) for which the template information should be retrieved." parameterName="classificationObjects"/>
     <ParameterInfo description="The list of classification class IDs for which the template information should be retrieved." parameterName="classificationClasses"/>
   </Operation>
   <Operation canOverride="false" component="Cla0classification" createRelease="tc13000.1.0" dependencies="" description="Imports the json input containing classification definitions of type Cst0ClassDefinition, Cst0PropertyDefinition, Cst0KeyLOVDefinition or NodeDefinition and optionally validates them.&lt;br /&gt;The SOA accepts file ticket which will be used to read the json file contents from the transient volume, which will further be used to create classification definitions.&lt;br /&gt;The JSON file which is to be uploaded must follow one of the following JSON schema:-&lt;br /&gt;&amp;bull;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;TC_DATA\classification\json\cla\1.1.0\schema\ Classification_Save_ClassDefinitions_Request.schema.json&lt;br /&gt;&amp;bull;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;TC_DATA\classification\json\cla\1.1.0\schema\ Classification_Save_KeyLOVDefinitions_Request.schema.json&lt;br /&gt;&amp;bull;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;TC_DATA\classification\json\cla\1.1.0\schema\ Classification_Save_PropertyDefinitions_Request.schema.json&lt;br /&gt;&amp;bull;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;TC_DATA\classification\json\cla\1.0.0\schema\ Classification_Save_NodeDefinitions_Request.schema.json&lt;br /&gt;The response will include the information such as Name and IRDI (International Registration Data Identifier) of classification definitions." exceptionCondition="" id="importClassificationDefinitions#const,std::string,&amp;$bool" interface="Cla0::Soa::ClassificationCommon::Classification" isPostActionAllowed="false" isPreActionAllowed="false" isPreConditionAllowed="false" isPublished="true" name="importClassificationDefinitions" opTemplate="std::string#Cla0::Soa::ClassificationCommon::Classification::importClassificationDefinitions#const,std::string,&amp;$bool" returnDescription="A JSON string containing information about the classification definition. Any failures occurred during the operation will be specified in the JSON string under the 'ErrorDetails' container. &lt;br /&gt;Refer the following sample response for the import of classification definitions:&lt;br /&gt;TC_DATA\classification\json\cla\1.0.0\samples\Classification_Import_Definitions_Response_sample.json&lt;br /&gt;The following errors may be in the JSON response:&lt;br /&gt;&amp;bull;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;377021 - Several objects cannot be saved/updated because they have the same namespace and ID.&lt;br /&gt;&amp;bull;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;377022 - Some partial errors have occurred. Refer to the result information for each object.&lt;br /&gt;&amp;bull;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;377027 - The attribute reference &amp;quot;Attribute1&amp;quot; is not unique in the class definition.&lt;br /&gt;&amp;bull;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;14150 - Invalid Transient Ticket." useCase="This operation could be used when user wants to perform any of the following actions -&lt;br /&gt;&amp;bull;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;Validate json file without creating classification definitions.&lt;br /&gt;&amp;bull;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;Import a json file creating classification definitions.">
     <ParameterInfo description="The file ticket which will be used to read the json file contents from the transient volume." parameterName="fileTicket"/>
     <ParameterInfo description="Run the SOA in dry mode or not.&lt;br /&gt;If true, this operation will validate the JSON request without creating classification definitions; otherwise, Classification definitions will be created." parameterName="dryRun"/>
   </Operation>
   <Operation canOverride="false" component="Cla0classification" createRelease="tc13000.1.0" dependencies="" description="Creates one or more classification objects and (optionally) attaches them to a WorkspaceObject, thus classifying it. If the Classification objects are not associated with any workspace object, they would act as standalone Classification objects. A classification object is also called ICO. For library elements, the context can additionally be specified." exceptionCondition="" id="saveClassificationObjects#const,Cla0::Soa::Internal::ClassificationCommon::_2020_12::Classification::Context,&amp;$const,std::vector&lt;Cla0::Soa::Internal::ClassificationCommon::_2020_12::Classification::ClassificationObject&gt;,&amp;" interface="Cla0::Soa::ClassificationCommon::Classification" isPostActionAllowed="false" isPreActionAllowed="false" isPreConditionAllowed="false" isPublished="false" name="saveClassificationObjects" opTemplate="Cla0::Soa::Internal::ClassificationCommon::_2020_12::Classification::SaveClassificationObjectsResponse#Cla0::Soa::ClassificationCommon::Classification::saveClassificationObjects#const,Cla0::Soa::Internal::ClassificationCommon::_2020_12::Classification::Context,&amp;$const,std::vector&lt;Cla0::Soa::Internal::ClassificationCommon::_2020_12::Classification::ClassificationObject&gt;,&amp;" returnDescription="Returns an object containing information about the created or updated classification objects. Any failures occurred during the operation will be specified in the response Object. Any errors for any input objects will result in entire operation returning error. &lt;br /&gt;&lt;br /&gt;Following errors may be returned by the operation: &lt;br /&gt;&amp;bull;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;424013 &amp;ndash; ClassificationObjects Is Empty, please add valid ClassificationObjects to call this SOA.&lt;br /&gt;&amp;bull;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;424014 &amp;ndash; A ClassificationObject is missing one or more required items ID, NodeID, or UnitySystem. &lt;br /&gt;&amp;bull;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;424015 &amp;ndash; A ClassificationProperty missing is missing one or more required items DataType or ID.&lt;br /&gt;&amp;bull;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;424007 - &amp;quot;ExistingItemName&amp;quot; cannot be used for classification. Please use a unique object ID or a name for classification.&lt;br /&gt;&amp;bull;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;424008 - Classification nodes from multiple classification systems are not currently supported in save objects request." useCase="User wants to classify a WorkspaceObject or create a standalone classification object (ICO) in Teamcenter. This operation expects a list of ClassificationObject and supports various options such as associating the classification object with a workspace object, populating values of any attributes associated with classification objects and so on. &lt;br /&gt;Before creating classification objects, a classification class hierarchy should already be created by the classification admin user in Teamcenter. This hierarchy should include a storage class (a class that allows instances to be created and associated to it) for which the classification objects need to be created. &lt;br /&gt;&lt;br /&gt;This operation can also be used to get library elements by specifying the context object. This is useful in library management.&lt;br /&gt;&lt;br /&gt;Required Elements: classificationObjects.">
     <ParameterInfo description="The context (e.g. Library) in which the request is to be processed. To save the classification object, do not specify the context." parameterName="context"/>
     <ParameterInfo description="A vector of ClassificationObjects that will be saved during the operation." parameterName="classificationObjects"/>
   </Operation>
   <Operation canOverride="false" component="Cla0classification" createRelease="tc12000.3.0" dependencies="" description="Creates one or more classification objects and (optionally) attaches them to a workspace object, thus classifying it. If the Classification objects are not associated with any workspace object, they would act as standalone Classification objects. A classification object is also called ICO." exceptionCondition="" id="saveClassificationObjects#const,std::string,&amp;" interface="Cla0::Soa::ClassificationCommon::Classification" isPostActionAllowed="false" isPreActionAllowed="false" isPreConditionAllowed="false" isPublished="true" name="saveClassificationObjects" opTemplate="Cla0::Soa::ClassificationCommon::_2020_01::Classification::ClassificationObjectResponse#Cla0::Soa::ClassificationCommon::Classification::saveClassificationObjects#const,std::string,&amp;" returnDescription="Returns a JSON string containing information about the created or updated classification objects. Any failures occurred during the operation will be specified in the JSON response string.&lt;br /&gt;Following errors may be returned by the operation:  &lt;br /&gt;&amp;bull;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;424002 - The schema validation has failed. The path to the violated rule in the schema file is &amp;quot;#/properties/PropertyRecord/items&amp;quot; and the violated schema keyword is &amp;quot;additionalProperties&amp;quot;.&lt;br /&gt;&amp;bull;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;424007 - &amp;quot;ClsWso1&amp;quot; cannot be used for classification. Please use a unique object ID or a name for classification.&lt;br /&gt;&amp;bull;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;424008 - Classification nodes from multiple classification systems are not currently supported in save objects request." useCase="User wants to classify a workspace object or create a standalone classification object (ICO) in Teamcenter. This operation expects a json string and supports various options such as associating the classification object with a workspace object, populating values of any attributes associated with classification objects and so on. &lt;br /&gt;Before creating classification objects, a classification class hierarchy should already be created by the classification admin user in Teamcenter. This hierarchy should include a storage class (a class that allows instances to be created and associated to it) for which the classification objects need to be created.">
     <ParameterInfo description="This parameter is a JSON string containing information about classification objects to be created or updated. The structure of the JSON string must follow the JSON schema specified in the file: TC_DATA\classification\json\cla\1.0.0\schema\SaveClassificationObjects_Request.schema.json. A sample input for saving classification objects is provided in the file: TC_DATA\classification\json\cla\1.0.0\samples\SaveClassificationObjects_Request_sample.json." parameterName="jsonRequest"/>
   </Operation>
   <Operation canOverride="false" component="Cla0classification" createRelease="tc13000.2.0" dependencies="" description="This operation will save, either create or update, a graphics member. A graphics member is either a member of a Part Family, or a member of a Template Part. The creation or update is based on the attribute mappings provide by a Classification Admin configured Part Family Template. The values of these attribute are used to create a new member or update an existing one for a Part Family. This updates the spreadsheet of Part Family Members. Creates and Updates the graphics (part and or JT file) for a Part Family Member and store these as items in the Teamcenter database. Part family templates are used in NX to define a set or family of parts that share similar form, fit, and function but differ based on parameter values (for example, length, width, or diameter) that typically control the physical characteristics of the part (or tool). The part families are created with the help of a Microsoft Excel file that holds a list of all part family members." exceptionCondition="" id="saveGraphicsMember#const,std::vector&lt;Cla0::Soa::Internal::ClassificationCommon::_2021_06::Classification::SaveGraphicsMemberRequest&gt;,&amp;" interface="Cla0::Soa::ClassificationCommon::Classification" isPostActionAllowed="false" isPreActionAllowed="false" isPreConditionAllowed="false" isPublished="false" name="saveGraphicsMember" opTemplate="Teamcenter::Soa::Server::ServiceData#Cla0::Soa::ClassificationCommon::Classification::saveGraphicsMember#const,std::vector&lt;Cla0::Soa::Internal::ClassificationCommon::_2021_06::Classification::SaveGraphicsMemberRequest&gt;,&amp;" returnDescription="Returns a service data containing a list of created or updated part members. The following errors may be returned by the operation:&lt;br /&gt;&lt;ul&gt;&lt;ul&gt;&lt;li type=&quot;disc&quot;&gt;71608 - The Classification instance belongs to a part family member.&lt;/li&gt;&lt;li type=&quot;disc&quot;&gt;71615 - The revision of select item is already used as a template in another class.&lt;/li&gt;&lt;li type=&quot;disc&quot;&gt;71633 - The classification instance classifies a workspace object that is not related to the part family member.&lt;/li&gt;&lt;li type=&quot;disc&quot;&gt;424110 - Provided WorkspaceObject is not a valid template. It is not attached to the classification class with either ICS_part_family or FndTemplatePart relation.&lt;/li&gt;&lt;li type=&quot;disc&quot;&gt;424111 - Provided WorkspaceObject is not a valid template. It does not contain any part file.&lt;/li&gt;&lt;/ul&gt;&lt;/ul&gt;" useCase="This operation could be used when user wants to perform any of the following actions:&lt;br /&gt;&amp;bull;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;Create or update values in part family member file.&lt;br /&gt;&amp;bull;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;Create a new Part file based on new or updated values.&lt;br /&gt;&amp;bull;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;Create a new JT file based on new or updated values.">
     <ParameterInfo description="The member objects to create or update." parameterName="requestObjects"/>
   </Operation>
   <Operation canOverride="false" component="Cla0classification" createRelease="tc13000.2.0" dependencies="" description="Searches class descriptors based on criteria provided in the input. &lt;br /&gt;The input criteria may include search expressions that specify the property name, operator and the value to use while performing the search as well as other parameters for how the results should be returned.&lt;br /&gt;The response will include the number of objects found, the number of objects returned and object information such as Name and IRDI (International Registration Data Identifier), as well as any additional requested information.&lt;br /&gt;User may optionally request for complete object information for the results, parents, children, or other outputs by specifying it in the input options." exceptionCondition="" id="searchClassDescriptor#const,std::vector&lt;Cla0::Soa::Internal::ClassificationCommon::_2021_06::Classification::SearchCriteria&gt;,&amp;$int" interface="Cla0::Soa::ClassificationCommon::Classification" isPostActionAllowed="false" isPreActionAllowed="false" isPreConditionAllowed="false" isPublished="false" name="searchClassDescriptor" opTemplate="Cla0::Soa::Internal::ClassificationCommon::_2021_06::Classification::SearchClassDescriptorResponse#Cla0::Soa::ClassificationCommon::Classification::searchClassDescriptor#const,std::vector&lt;Cla0::Soa::Internal::ClassificationCommon::_2021_06::Classification::SearchCriteria&gt;,&amp;$int" returnDescription="A SearchClassDescriptorResponse object containing information about the search results, including the total found, total returned, the found class descriptors, and any parents, children, blocks or keyLOVs belonging to the class descriptors.&lt;br /&gt;&lt;br /&gt;The following errors may be returned by the operation under the errorDetails parameter on the search result:&lt;br /&gt;&lt;ul&gt;&lt;ul&gt;&lt;li type=&quot;disc&quot;&gt;424018 - The operator &amp;ldquo;&amp;lt;OperatorExpression&amp;gt;&amp;rdquo; does not support the datatype &amp;ldquo;&amp;lt;datatype&amp;gt;&amp;rdquo;.&lt;/li&gt;&lt;li type=&quot;disc&quot;&gt;424019 - The value cannot be empty for the operator &amp;ldquo;&amp;lt;OperatorExpression&amp;gt;&amp;rdquo; and datatype &amp;ldquo;&amp;lt;datatype&amp;gt;&amp;rdquo;.&lt;/li&gt;&lt;li type=&quot;disc&quot;&gt;424020 - Property value does not support &amp;ldquo;&amp;lt;datatype&amp;gt;&amp;rdquo; as a datatype.&lt;/li&gt;&lt;li type=&quot;disc&quot;&gt;424021 - Invalid operator expression on the search expression.&lt;/li&gt;&lt;li type=&quot;disc&quot;&gt;424022 - The value of property &amp;quot;&amp;lt;propertyName&amp;gt;&amp;quot; must be of type &amp;quot;&amp;lt;datatype&amp;gt;&amp;quot;.&lt;/li&gt;&lt;li type=&quot;disc&quot;&gt;424023 - The property &amp;quot;&amp;lt;propertyName&amp;gt;&amp;quot; does not exist on the class.&lt;/li&gt;&lt;li type=&quot;disc&quot;&gt;424024 - Multiple search expressions are not supported for traditional classification.&lt;/li&gt;&lt;li type=&quot;disc&quot;&gt;424025 - Searching on multiple values is not supported for traditional classification.&lt;/li&gt;&lt;/ul&gt;&lt;/ul&gt;" useCase="This operation could be used when user wants to perform any of the following actions -&lt;br /&gt;&lt;ul&gt;&lt;ul&gt;&lt;li type=&quot;disc&quot;&gt;Get detailed information for specified object IRDI&lt;/li&gt;&lt;li type=&quot;disc&quot;&gt;Get objects matching the specified Name, Namespace, ID, Revision or any other object property.&lt;/li&gt;&lt;li type=&quot;disc&quot;&gt;Get objects sorted on specified property (eg. Last Modified Date)&lt;/li&gt;&lt;li type=&quot;disc&quot;&gt;Get top-level hierarchy of classes&lt;/li&gt;&lt;/ul&gt;&lt;/ul&gt;">
     <ParameterInfo description="A list of search criteria to be used when searching class descriptors." parameterName="searchCriteria"/>
     <ParameterInfo description="This is a bitwise encoded input parameter. The possible values are:&lt;br /&gt;&lt;ul&gt;&lt;ul&gt;&lt;li type=&quot;disc&quot;&gt;1 &amp;lt;&amp;lt; 0 - Return the full information about the class descriptor results.&lt;/li&gt;&lt;li type=&quot;disc&quot;&gt;1 &amp;lt;&amp;lt; 1 - Return the full information about the results&amp;rsquo; parents.&lt;/li&gt;&lt;li type=&quot;disc&quot;&gt;1 &amp;lt;&amp;lt; 2 - Return the full information about the results&amp;rsquo; children.&lt;/li&gt;&lt;li type=&quot;disc&quot;&gt;1 &amp;lt;&amp;lt; 3 - Return the instances count as part of the additionalProperties. Only returned if the full information on at least one class descriptor is returned.&lt;/li&gt;&lt;li type=&quot;disc&quot;&gt;1 &amp;lt;&amp;lt; 4 - Return the icon as part of the additionalProperties. Only returned if the full information on at least one class descriptor is returned.&lt;/li&gt;&lt;li type=&quot;disc&quot;&gt;1 &amp;lt;&amp;lt; 5 - Return the images as part of the additionalProperties. Only returned if the full information on at least one class descriptor is returned.&lt;/li&gt;&lt;/ul&gt;&lt;/ul&gt;" parameterName="options"/>
   </Operation>
   <Operation canOverride="false" component="Cla0classification" createRelease="tc13000.1.0" dependencies="" description="Searches classification definitions based on criteria provided in the input. Classification definitions include objects such as NodeDefinition, ClassDefinition, PropertyDefinition and KeyLOVDefinition. &lt;br /&gt;The input criteria may include parameters that specify the property name, operator and the value to use while performing the search. &lt;br /&gt;The response will include the number of objects found, the number of objects returned and object information such as Name and IRDI (International Registration Data Identifier).&lt;br /&gt;User may optionally request for complete object information by specifying it in the input criteria." exceptionCondition="" id="searchClassificationDefinitions#const,std::string,&amp;" interface="Cla0::Soa::ClassificationCommon::Classification" isPostActionAllowed="false" isPreActionAllowed="false" isPreConditionAllowed="false" isPublished="true" name="searchClassificationDefinitions" opTemplate="std::string#Cla0::Soa::ClassificationCommon::Classification::searchClassificationDefinitions#const,std::string,&amp;" returnDescription="A JSON string containing information about the search results. &lt;br /&gt;Refer the following sample response for search on classification definitions:&lt;br /&gt;TC_DATA\classification\json\cla\1.0.0\samples\Classification_Search_Definitions_Response_sample.json&lt;br /&gt;The following errors may be returned in the JSON document under the ErrorDetails element -&lt;br /&gt;&amp;bull;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;377062 - The value of property &amp;quot;Name&amp;quot; on the object &amp;quot;ClassDefinition&amp;quot; must be of type &amp;quot;String&amp;quot;.&lt;br /&gt;&amp;bull;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;377063 - The property &amp;quot;Parents&amp;quot; does not exist on the object &amp;quot;PropertyDefinition&amp;quot;.&lt;br /&gt;&amp;bull;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;377064 - Search on the property 'LOVItems' in KeyLOVDefinition is not supported." useCase="This operation could be used when user wants to perform any of the following actions -&lt;br /&gt;&amp;bull;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;Get detailed information for specified object IRDI&lt;br /&gt;&amp;bull;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;Get objects matching the specified Name, Namespace, ID, Revision or any other object property.&lt;br /&gt;&amp;bull;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;Get objects sorted on specified property (eg. Last Modified Date)&lt;br /&gt;&amp;bull;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;Get top-level hierarchy of classes&lt;br /&gt;&amp;bull;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;Get paged search results">
     <ParameterInfo description="The parameter is a JSON string containing search criteria to be used while performing the search.&lt;br /&gt;The structure of the JSON string must follow the JSON schema specified in the file: &lt;br /&gt;TC_DATA\classification\json\cla\1.0.0\schema\Classification_Search_Definitions_Request.schema.json.&lt;br /&gt;A sample input is provided in the file: &lt;br /&gt;TC_DATA\classification\json\cla\1.0.0\samples\Classification_Search_Definitions_Request_sample.json." parameterName="jsonRequest"/>
   </Operation>
   <Operation canOverride="false" component="Cla0classification" createRelease="tc13000.2.0" dependencies="" description="Finds all the classification objects based on criteria provided in the input. The input criteria may include search expressions that specify the property name, operator and the value to use while performing the search. &lt;br /&gt;The response will include the number of objects found, the number of objects returned and object UID, as well as any additional requested information." exceptionCondition="" id="searchClassificationObjects#const,std::string,&amp;" interface="Cla0::Soa::ClassificationCommon::Classification" isPostActionAllowed="false" isPreActionAllowed="false" isPreConditionAllowed="false" isPublished="true" name="searchClassificationObjects" opTemplate="std::string#Cla0::Soa::ClassificationCommon::Classification::searchClassificationObjects#const,std::string,&amp;" returnDescription="A JSON string containing information about the search results, including total found, total returned and if requested, complete information on returned objects and descriptors of classes they are classified into. Refer the following sample response:&lt;br /&gt;TC_DATA\classification\json\2.0.0\samples\SearchClassificationObjects_Response_sample.json&lt;br /&gt;&lt;br /&gt;The following errors may be returned by the operation under the ErrorDetails container on each search result:&lt;br /&gt;&amp;bull;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;424023 &amp;ndash; The property &amp;ldquo;&amp;lt;propertyName&amp;gt;&amp;rdquo; does not exist on a classification object.&lt;br /&gt;&amp;bull;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;424024 &amp;ndash; Search on the property &amp;ldquo;&amp;lt;propertyName&amp;gt;&amp;rdquo; is not supported." useCase="This operation could be used when user wants to perform any of the following actions -&lt;br /&gt;&amp;bull;    Search classification objects based on the class where they are classified and the value of classification attributes&lt;br /&gt;&amp;bull;    Search classification objects associated with the specified workspace object.&lt;br /&gt;&amp;bull;    Get complete information for specified classification object.">
     <ParameterInfo description="A JSON string containing a list of search criteria to use while performing search on classification objects. &lt;br /&gt;The structure of the JSON string must follow the JSON schema specified in the file: &lt;br /&gt;TC_DATA\classification\json\cla\2.0.0\schema\SearchClassificationObjects_Request.schema.json. &lt;br /&gt;A sample input is provided in the file: &lt;br /&gt;TC_DATA\classification\json\cla\2.0.0\samples\SearchClassificationObjects_Request_sample.json." parameterName="jsonRequest"/>
   </Operation>
   <Operation canOverride="false" component="Cla0classification" createRelease="tc13000.2.0" dependencies="" description="Finds all the classification objects based on criteria provided in the input. The input criteria may include search expressions that specify the property name, operator and the value to use while performing the search. &lt;br /&gt;The response will include the number of objects found, the number of objects returned and object UID, as well as any additional requested information." exceptionCondition="" id="searchClassificationObjects#const,std::vector&lt;Cla0::Soa::Internal::ClassificationCommon::_2021_06::Classification::SearchIcoCriteria&gt;,&amp;$int" interface="Cla0::Soa::ClassificationCommon::Classification" isPostActionAllowed="false" isPreActionAllowed="false" isPreConditionAllowed="false" isPublished="false" name="searchClassificationObjects" opTemplate="Cla0::Soa::Internal::ClassificationCommon::_2021_06::Classification::SearchIcoResponse#Cla0::Soa::ClassificationCommon::Classification::searchClassificationObjects#const,std::vector&lt;Cla0::Soa::Internal::ClassificationCommon::_2021_06::Classification::SearchIcoCriteria&gt;,&amp;$int" returnDescription="Information about the search results, including total found, total returned and if requested, complete information on returned objects and descriptors of classes they are classified into.  &lt;br /&gt;&lt;br /&gt;The following errors may be returned by the operation under the errorDetails container on each search result:&lt;br /&gt;&amp;bull;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;424018 &amp;ndash; The operator &amp;ldquo;&amp;lt;OperatorExpression&amp;gt;&amp;rdquo; does not support the datatype &amp;ldquo;&amp;lt;datatype&amp;gt;&amp;rdquo;.&lt;br /&gt;&amp;bull;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;424019 &amp;ndash; The value cannot be empty for the operator &amp;ldquo;&amp;lt;OperatorExpression&amp;gt;&amp;rdquo; and datatype &amp;ldquo;&amp;lt;datatype&amp;gt;&amp;rdquo;.&lt;br /&gt;&amp;bull;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;424020 &amp;ndash; PropertyValue does not support &amp;ldquo;&amp;lt;datatype&amp;gt;&amp;rdquo; as a datatype.&lt;br /&gt;&amp;bull;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;424021 &amp;ndash; Invalid operatorExpression on the SearchExpression.&lt;br /&gt;&amp;bull;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;424023 &amp;ndash; The property &amp;ldquo;&amp;lt;propertyName&amp;gt;&amp;rdquo; does not exist on a classification object.&lt;br /&gt;&amp;bull;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;424024 &amp;ndash; Search on the property &amp;ldquo;&amp;lt;propertyName&amp;gt;&amp;rdquo; is not supported." useCase="This operation could be used when user wants to perform any of the following actions -&lt;br /&gt;&amp;bull;    Search classification objects based on the class where they are classified and the value of classification attributes&lt;br /&gt;&amp;bull;    Search classification objects associated with the specified workspace object.&lt;br /&gt;&amp;bull;    Get complete information for specified classification object.">
     <ParameterInfo description="A list of search criteria to use while performing search on classification objects." parameterName="searchCriteria"/>
     <ParameterInfo description="A placeholder to enable future enhancements in partial load of classification objects and class descriptors. Currently unused for this operation." parameterName="options"/>
   </Operation>
</Add>
    <Change/>
    <Delete/>
</TcBusinessData>
