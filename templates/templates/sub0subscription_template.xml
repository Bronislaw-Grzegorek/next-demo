<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<!--
@<COPYRIGHT>@
==================================================
Copyright 2020.
Siemens Product Lifecycle Management Software Inc.
All Rights Reserved.
==================================================
@<COPYRIGHT>@
--><TcBusinessData xmlns="http://teamcenter.com/BusinessModel/TcBusinessData" Date="Tue Nov 02 07:18:20 PM 2021" TcVersion="tc13000.0.0">
    <Add>
   <Library createRelease="Awp04.0.0" description="Library for Subscription and Notification in Active Workspace." isThirdParty="false" name="sub0subscription" namespace="" serviceLibrary="false">
     <DependentOn name="metaframework"/>
     <DependentOn name="tccore"/>
     <DependentOn name="tc"/>
     <DependentOn name="cxpom"/>
   </Library>
   <OperationInputType artifactName="Sub0NotificationProviderCreI" description="CreateInput object for &quot;Sub0NotificationProvider&quot; business object" isAbstract="false" parentTypeName="Fnd0BaseProviderCreI" typeClassName="Sub0NotificationProviderCreI" typeName="Sub0NotificationProviderCreI"/>
   <OperationInputType artifactName="Sub0NotificationProviderSvAI" description="SaveAsInput object for &quot;Sub0NotificationProvider&quot; business object" isAbstract="false" parentTypeName="Fnd0BaseProviderSvAI" typeClassName="Sub0NotificationProviderSvAI" typeName="Sub0NotificationProviderSvAI"/>
   <OperationInputType artifactName="Sub0SubscribleTypesPro_alt0CreI" description="CreateInput object for &quot;Sub0SubscribleTypesProvider&quot; business object" isAbstract="false" parentTypeName="Fnd0BaseProviderCreI" typeClassName="Sub0SubscribleTypesPro_alt0CreI" typeName="Sub0SubscribleTypesPro_alt0CreI"/>
   <OperationInputType artifactName="Sub0SubscribleTypesPro_alt0SvAI" description="SaveAsInput object for &quot;Sub0SubscribleTypesProvider&quot; business object" isAbstract="false" parentTypeName="Fnd0BaseProviderSvAI" typeClassName="Sub0SubscribleTypesPro_alt0SvAI" typeName="Sub0SubscribleTypesPro_alt0SvAI"/>
   <OperationInputType artifactName="Sub0SubscriptionProviderCreI" description="CreateInput object for &quot;Sub0SubscriptionProvider&quot; business object" isAbstract="false" parentTypeName="Fnd0BaseProviderCreI" typeClassName="Sub0SubscriptionProviderCreI" typeName="Sub0SubscriptionProviderCreI"/>
   <OperationInputType artifactName="Sub0SubscriptionProviderSvAI" description="SaveAsInput object for &quot;Sub0SubscriptionProvider&quot; business object" isAbstract="false" parentTypeName="Fnd0BaseProviderSvAI" typeClassName="Sub0SubscriptionProviderSvAI" typeName="Sub0SubscriptionProviderSvAI"/>
   <TcRuntimeType artifactName="Sub0NotificationProvider" description="Data provider to fetch message objects for News Feed content." functionality="Fnd0SubscriptionManagement" isAbstract="false" parentTypeName="Fnd0BaseProvider" typeClassName="Sub0NotificationProvider" typeName="Sub0NotificationProvider"/>
   <TcRuntimeType artifactName="Sub0SubscribleTypesProvider" description="Data provider to fetch all subscrible business object types from the Teamcenter database. Subscrible type is defined by mapping the business object type with the subscrible event." functionality="Fnd0SubscriptionManagement" isAbstract="false" parentTypeName="Fnd0BaseProvider" typeClassName="Sub0SubscribleTypesProvider" typeName="Sub0SubscribleTypesProvider"/>
   <TcRuntimeType artifactName="Sub0SubscriptionProvider" description="Data provider to fetch ImanSubscription objects for Following sublocation." functionality="Fnd0SubscriptionManagement" isAbstract="false" parentTypeName="Fnd0BaseProvider" typeClassName="Sub0SubscriptionProvider" typeName="Sub0SubscriptionProvider"/>
   <BusinessObjectInterface createRelease="Awp04.2.0" description="Interface Name for Business Object Sub0NotificationProvider" libraryName="sub0subscription" name="Sub0NotificationProvider" namespace="sub0subscription" primaryInterface="true" typeName="Sub0NotificationProvider"/>
   <BusinessObjectInterface createRelease="Awp04.0.0" description="Interface Name for Business Object Sub0SubscribleTypesProvider" libraryName="sub0subscription" name="Sub0SubscribleTypesProvider" namespace="sub0subscription" primaryInterface="true" typeName="Sub0SubscribleTypesProvider"/>
   <BusinessObjectInterface createRelease="Awp04.3.0" description="Interface Name for Business Object Sub0SubscriptionProvider" libraryName="sub0subscription" name="Sub0SubscriptionProvider" namespace="sub0subscription" primaryInterface="true" typeName="Sub0SubscriptionProvider"/>
   <OperationAttach id="fnd0performSearch#Teamcenter::OperationInput,*$Teamcenter::OperationInput,*" typeName="Sub0NotificationProvider"/>
   <OperationAttach id="fnd0performSearch#Teamcenter::OperationInput,*$Teamcenter::OperationInput,*" typeName="Sub0SubscribleTypesProvider"/>
   <OperationAttach id="fnd0performSearch#Teamcenter::OperationInput,*$Teamcenter::OperationInput,*" typeName="Sub0SubscriptionProvider"/>
   <TcTypeConstantAttach constantName="CreateInput" typeName="Sub0NotificationProvider" value="Sub0NotificationProviderCreI"/>
   <TcTypeConstantAttach constantName="CreateInput" typeName="Sub0SubscribleTypesProvider" value="Sub0SubscribleTypesPro_alt0CreI"/>
   <TcTypeConstantAttach constantName="SaveAsInput" typeName="Sub0NotificationProvider" value="Sub0NotificationProviderSvAI"/>
   <TcTypeConstantAttach constantName="SaveAsInput" typeName="Sub0SubscribleTypesProvider" value="Sub0SubscribleTypesPro_alt0SvAI"/>
   <TcTypeConstantAttach constantName="CreateInput" typeName="Sub0SubscriptionProvider" value="Sub0SubscriptionProviderCreI"/>
   <TcTypeConstantAttach constantName="SaveAsInput" typeName="Sub0SubscriptionProvider" value="Sub0SubscriptionProviderSvAI"/>
   <TcPropertyConstantAttach constantName="InitialValue" propertyName="fnd0Frequency" typeName="ImanSubscription" value="Immediately"/>
       
       
        
   


   <Condition description="This condition always evaluate to false for ImanSubscription object." expression="u.fnd0ConditionHelper.awp0IsObjectType(o,&quot;ImanSubscription&quot;) = false  AND  u.fnd0ConditionHelper.awp0IsObjectType(o,&quot;Fnd0Message&quot;) = false AND  u.fnd0ConditionHelper.awp0IsObjectType(o,&quot;ImanEventType&quot;) = false" name="Sub0CopyCmdCond" secured="false">
     <ConditionParameter name="o" parameterTypeName="BusinessObject"/>
     <ConditionParameter name="u" parameterTypeName="UserSession"/>
   </Condition>
   <Condition description="This condition determines if the passed subscription object is allowed for delete or not." expression="o.subscriber=u.user" name="Sub0DeleteSubscriptionCmdCond" secured="false">
     <ConditionParameter name="o" parameterTypeName="ImanSubscription"/>
     <ConditionParameter name="u" parameterTypeName="UserSession"/>
   </Condition>
   <Condition description="This condition determines if the passed subscription object  is allowed for save as or not." expression="o.subscriber!=u.user" name="Sub0SaveAsSubscriptionCmdCond" secured="false">
     <ConditionParameter name="o" parameterTypeName="ImanSubscription"/>
     <ConditionParameter name="u" parameterTypeName="UserSession"/>
   </Condition>
   <Condition description="This condition always evaluate to false for ImanSubscription object." expression="u.fnd0ConditionHelper.awp0IsObjectType(o,&quot;ImanSubscription&quot;) = false" name="Sub0StartEditTableCmdCond" secured="false">
     <ConditionParameter name="o" parameterTypeName="BusinessObject"/>
     <ConditionParameter name="u" parameterTypeName="UserSession"/>
   </Condition>
   <Condition description="This condition determines if the passed subscription object is allowed for temporary trasnferable or not." expression="o.subscriber=u.user AND o.is_modifiable=true" name="Sub0TemporaryTransferNotificationCmdCond" secured="false">
     <ConditionParameter name="o" parameterTypeName="ImanSubscription"/>
     <ConditionParameter name="u" parameterTypeName="UserSession"/>
   </Condition>
   <TcGlobalConstantAttach constantName="Fnd0SelectedLocales" value="cs_CZ,de_DE,en_US,es_ES,fr_FR,it_IT,ja_JP,ko_KR,pl_PL,pt_BR,ru_RU,zh_CN,zh_TW"/>
   <Command commandId="Sub0AddFollower" description="Add Follower" displayName="Add Follower" icon="Sub0AddFollower" mnemonic="" requiresUserInput="true" selectionModel="Single" tooltip="Add Follower"/>
   <Command commandId="Sub0AddSubscriptionCriteria" description="AddSubscriptionCriteria Command" displayName="Add" icon="Awp0AddOcc" mnemonic="" requiresUserInput="true" selectionModel="Multiple" tooltip="Add"/>
   <Command commandId="Sub0CreateObjectTypeSubscription" description="Create class based subscription command handler class." displayName="Follow Type" icon="Sub0CreateIcon" mnemonic="" requiresUserInput="true" selectionModel="Multiple" tooltip="Follow Type"/>
   <Command commandId="Sub0DeleteMessage" description="Delete messages command handler." displayName="Delete Messages" icon="Awp0DeleteX" mnemonic="" requiresUserInput="false" selectionModel="Multiple" tooltip="Delete Messages"/>
   <Command commandId="Sub0DeleteSubscription" description="Delete subscriptions command handler." displayName="Delete" icon="Awp0DeleteX" mnemonic="" requiresUserInput="false" selectionModel="Multiple" tooltip="Delete"/>
   <Command commandId="Sub0EditSubscriptionCriteria" description="EditSubscriptionCriteria Command" displayName="Edit" icon="Awp0Edit" mnemonic="" requiresUserInput="true" selectionModel="Multiple" tooltip="Edit"/>
   <Command commandId="Sub0SaveAsSubscription" description="Save As Subscription Command" displayName="Save As" icon="Sub0SaveAs" mnemonic="" requiresUserInput="true" selectionModel="Single" tooltip="Save As"/>
   <Command commandId="Sub0Subscribe" description="Subscription command" displayName="Follow" icon="Sub0SubscriptionFollowingCmd" mnemonic="" requiresUserInput="true" selectionModel="Multiple" tooltip="Follow"/>
   <Command commandId="Sub0TemporaryTransferNotification" description="Transfer Notification command - Change the notifier of Subscription temporarily" displayName="Transfer Notification" icon="Sub0TempTransferNotification" mnemonic="" requiresUserInput="true" selectionModel="Single" tooltip="Transfer Notification"/>
   <CommandCollection commandCollectionId="Sub0FollowedSubscriptions_display" description="Display commands of Added As Follower sublocation" displayName="FollowedSubscriptions_display" mnemonic="" renderingHint=""/>
   <CommandCollection commandCollectionId="Sub0MySubscriptions_display" description="Display commands of MySubscriptions sublocation" displayName="MySubscriptions_display" mnemonic="" renderingHint=""/>
   <CommandCollection commandCollectionId="Sub0NewsFeedInbox_display" description="Display commands of NewsFeedInbox sublocation" displayName="NewsFeedInbox_display" mnemonic="" renderingHint=""/>
   <CommandCollection commandCollectionId="Sub0SubscriptionsSettings_display" description="display commands for SubscriptionsSettings sublocations" displayName="SubscriptionsSettings_display" mnemonic="" renderingHint=""/>
   <ClientScope clientName="AWClient" description="Sublocation to Show subscription Object using ModelObjectListSubLocationPresenter." displayName="Added As Follower" hostingClientName="" name="Sub0FollowedSubscriptions"/>
   <ClientScope clientName="AWClient" description="Subscription Settings SubLocation. Creates 'Settings' Navigation Tab." displayName="Settings" hostingClientName="" name="Sub0SubscriptionsSettings"/>
   <ClientScope clientName="AWClient" description="Sublocation to Show message Object using ModelObjectListSubLocationPresenter." displayName="News Feed" hostingClientName="" name="fnd0MySubscriptionMessages"/>
   <ClientScope clientName="AWClient" description="Sublocation to Show subscription Object using ModelObjectListSubLocationPresenter." displayName="Following" hostingClientName="" name="fnd0MySubscriptions"/>
   <CommandAttach anchorId="Sub0DeleteSubscription" childCommandId="Sub0DeleteMessage" commandCollectionId="Awp0GlobalCommands_oneStep" isAnchorCommandCollection="false" isBeforeAnchor="false" isChildCommandCollection="false"/>
   <CommandAttach anchorId="Awp0RemoveParticipant" childCommandId="Sub0DeleteSubscription" commandCollectionId="Awp0GlobalCommands_oneStep" isAnchorCommandCollection="false" isBeforeAnchor="false" isChildCommandCollection="false"/>
   <CommandAttach anchorId="Awp0ReplaceDataset" childCommandId="Sub0CreateObjectTypeSubscription" commandCollectionId="Awp0GlobalCommands_toolsAndInfo" isAnchorCommandCollection="false" isBeforeAnchor="false" isChildCommandCollection="false"/>
   <CommandAttach anchorId="Sub0TemporaryTransferNotification" childCommandId="Sub0SaveAsSubscription" commandCollectionId="Awp0GlobalCommands_toolsAndInfo" isAnchorCommandCollection="false" isBeforeAnchor="false" isChildCommandCollection="false"/>
   <CommandAttach anchorId="Awp0SetOrClearLocationCode" childCommandId="Sub0Subscribe" commandCollectionId="Awp0GlobalCommands_toolsAndInfo" isAnchorCommandCollection="false" isBeforeAnchor="false" isChildCommandCollection="false"/>
   <CommandAttach anchorId="Sub0CreateObjectTypeSubscription" childCommandId="Sub0TemporaryTransferNotification" commandCollectionId="Awp0GlobalCommands_toolsAndInfo" isAnchorCommandCollection="false" isBeforeAnchor="false" isChildCommandCollection="false"/>
   <CommandAttach anchorId="Sub0EditSubscriptionCriteria" childCommandId="Sub0AddFollower" commandCollectionId="Awp0GlobalCommands_xrt" isAnchorCommandCollection="false" isBeforeAnchor="false" isChildCommandCollection="false"/>
   <CommandAttach anchorId="Awp0VoidDS" childCommandId="Sub0AddSubscriptionCriteria" commandCollectionId="Awp0GlobalCommands_xrt" isAnchorCommandCollection="false" isBeforeAnchor="false" isChildCommandCollection="false"/>
   <CommandAttach anchorId="Sub0AddSubscriptionCriteria" childCommandId="Sub0EditSubscriptionCriteria" commandCollectionId="Awp0GlobalCommands_xrt" isAnchorCommandCollection="false" isBeforeAnchor="false" isChildCommandCollection="false"/>
   <CommandAttach anchorId="" childCommandId="Awp0ModelObjListDisplayToggles" commandCollectionId="Sub0FollowedSubscriptions_display" isAnchorCommandCollection="false" isBeforeAnchor="false" isChildCommandCollection="true"/>
   <CommandAttach anchorId="Awp0ModelObjListDisplayToggles" childCommandId="Awp0SelectionSummaryGroup" commandCollectionId="Sub0FollowedSubscriptions_display" isAnchorCommandCollection="true" isBeforeAnchor="false" isChildCommandCollection="true"/>
   <CommandAttach anchorId="" childCommandId="Awp0ModelObjListDisplayToggles" commandCollectionId="Sub0MySubscriptions_display" isAnchorCommandCollection="false" isBeforeAnchor="false" isChildCommandCollection="true"/>
   <CommandAttach anchorId="Awp0ModelObjListDisplayToggles" childCommandId="Awp0SelectionSummaryGroup" commandCollectionId="Sub0MySubscriptions_display" isAnchorCommandCollection="true" isBeforeAnchor="false" isChildCommandCollection="true"/>
   <CommandAttach anchorId="" childCommandId="Awp0ModelObjListDisplayToggles" commandCollectionId="Sub0NewsFeedInbox_display" isAnchorCommandCollection="false" isBeforeAnchor="false" isChildCommandCollection="true"/>
   <CommandAttach anchorId="Awp0ModelObjListDisplayToggles" childCommandId="Awp0SelectionSummaryGroup" commandCollectionId="Sub0NewsFeedInbox_display" isAnchorCommandCollection="true" isBeforeAnchor="false" isChildCommandCollection="true"/>
   <CommandAttach anchorId="" childCommandId="Awp0SelectionSummaryGroup" commandCollectionId="Sub0SubscriptionsSettings_display" isAnchorCommandCollection="false" isBeforeAnchor="false" isChildCommandCollection="true"/>
   <CommandCollectionAttach clientScopeId="fnd0MySubscriptionMessages" commandCollectionId="Sub0NewsFeedInbox_display" type="aw_display"/>
   <CommandCollectionAttach clientScopeId="fnd0MySubscriptions" commandCollectionId="Sub0MySubscriptions_display" type="aw_display"/>
   <CommandCollectionAttach clientScopeId="Sub0FollowedSubscriptions" commandCollectionId="Sub0FollowedSubscriptions_display" type=""/>
   <CommandCollectionAttach clientScopeId="Sub0SubscriptionsSettings" commandCollectionId="Sub0SubscriptionsSettings_display" type="aw_display"/>
   <Icon description="Icon for Add Follower" name="Sub0AddFollower"/>
   <Icon description="" name="Sub0CreateIcon"/>
   <Icon description="Command Icon for Save As Subscription command" name="Sub0SaveAs"/>
   <Icon description="Subscription following command" name="Sub0SubscriptionFollowingCmd"/>
   <Icon description="" name="Sub0TempTransferNotification"/>
   <CommandConditionAttach commandCollectionId="" commandId="Awp0Copy" conditionName="Sub0CopyCmdCond"/>
   <CommandConditionAttach commandCollectionId="" commandId="Awp0StartEditTable" conditionName="Sub0StartEditTableCmdCond"/>
   <CommandConditionAttach commandCollectionId="" commandId="Sub0DeleteSubscription" conditionName="Sub0DeleteSubscriptionCmdCond"/>
   <CommandConditionAttach commandCollectionId="" commandId="Sub0SaveAsSubscription" conditionName="Sub0SaveAsSubscriptionCmdCond"/>
   <CommandConditionAttach commandCollectionId="" commandId="Sub0Subscribe" conditionName="Awp0SubscribeCmdCond"/>
   <CommandConditionAttach commandCollectionId="" commandId="Sub0TemporaryTransferNotification" conditionName="Sub0TemporaryTransferNotificationCmdCond"/>

   <Library createRelease="Awp04.0.0" description="SOA service library for Subscription Template in Active Workspace." isThirdParty="false" name="Sub0SoaNotificationAw" namespace="Sub0::Soa::Subscription" serviceLibrary="true"/>
   <ServiceInterface createRelease="Awp04.0.0" dependencies="" description="The Subscription service exposes operations that are used to accomplish subscription and notification specific functionalities in Active Workspace." libraryName="Sub0SoaNotificationAw" name="SubscriptionManagement" namespace="Sub0::Soa::Subscription" serviceLibraryRef=""/>
   <Struct createRelease="Awp04.0.0" description="The &lt;b&gt;GetApplicableEventTypesResponse&lt;/b&gt; structure is used to hold a list of applicable &lt;b&gt;ImanEventType&lt;/b&gt; business objects." isPublished="false" name="GetApplicableEventTypesResponse" namespace="Sub0::Soa::Internal::Subscription::_2018_05::SubscriptionManagement" scope="Sub0::Soa::Subscription::SubscriptionManagement">
     <StructElement description="List of event types applicable for the given input business object or type." name="eventTypes">
       <DataTypeRefParam dataType="std::vector">
          <DataTypeRefParam dataType="Teamcenter::ImanEventType"/>
       </DataTypeRefParam>
     </StructElement>
     <StructElement description="ServiceData object associated with the operation, contains business objects of &lt;b&gt;ImanEventType&lt;/b&gt; in plain list with inflated properties." name="serviceData">
       <DataTypeRefParam dataType="Teamcenter::Soa::Server::ServiceData"/>
     </StructElement>
   </Struct>
   <Struct createRelease="Awp04.0.0" description="The &lt;b&gt;GetSubscriptionViewResponse&lt;/b&gt; structure is used to hold declarative view and view model as string with the ServiceData object." isPublished="false" name="GetSubscriptionViewResponse" namespace="Sub0::Soa::Internal::Subscription::_2018_05::SubscriptionManagement" scope="Sub0::Soa::Subscription::SubscriptionManagement">
     <StructElement description="Declarative view as HTML string to render create panel for the subscription business object." name="view">
       <DataTypeRefParam dataType="std::string"/>
     </StructElement>
     <StructElement description="Declarative view model as JSON string to support rendering of the create panel for the subscription business object." name="viewModel">
       <DataTypeRefParam dataType="std::string"/>
     </StructElement>
     <StructElement description="ServiceData object associated with the operation, contains partial errors, if any." name="serviceData">
       <DataTypeRefParam dataType="Teamcenter::Soa::Server::ServiceData"/>
     </StructElement>
   </Struct>
   <Struct createRelease="Awp04.1.0" description="The GetSubscriptionViewAndModelResponse structure is used to hold declarative view and view model as string with the ServiceData object." isPublished="false" name="GetSubscriptionViewAndModelResponse" namespace="Sub0::Soa::Internal::Subscription::_2018_12::SubscriptionManagement" scope="Sub0::Soa::Subscription::SubscriptionManagement">
     <StructElement description="Declarative view as string to render create panel for the subscription business object." name="view">
       <DataTypeRefParam dataType="std::string"/>
     </StructElement>
     <StructElement description="Declarative view model as string to support rendering of the create panel for the subscription business object." name="viewModel">
       <DataTypeRefParam dataType="std::string"/>
     </StructElement>
     <StructElement description="ServiceData object associated with the operation, contains partial errors, if any." name="serviceData">
       <DataTypeRefParam dataType="Teamcenter::Soa::Server::ServiceData"/>
     </StructElement>
   </Struct>
   <Struct createRelease="Awp04.1.0" description="The GetApplCommonEventTypesResponse structure is to hold a list of applicable common ImanEventType business objects." isPublished="false" name="GetApplCommonEventTypesResponse" namespace="Sub0::Soa::Internal::Subscription::_2018_12::SubscriptionManagement" scope="Sub0::Soa::Subscription::SubscriptionManagement">
     <StructElement description="List of common event types applicable for the given input business objects or types." name="commonEventTypes">
       <DataTypeRefParam dataType="std::vector">
          <DataTypeRefParam dataType="Teamcenter::ImanEventType"/>
       </DataTypeRefParam>
     </StructElement>
     <StructElement description="ServiceData object associated with the operation, contains business objects of ImanEventType in plain list with inflated properties." name="serviceData">
       <DataTypeRefParam dataType="Teamcenter::Soa::Server::ServiceData"/>
     </StructElement>
   </Struct>
   <Struct createRelease="Awp04.1.0" description="The ValidateSubscribableTypesResponse structure is used to hold two separate list of subscribable and non subscribable objects or types." isPublished="false" name="ValidateSubscribableTypesResponse" namespace="Sub0::Soa::Internal::Subscription::_2018_12::SubscriptionManagement" scope="Sub0::Soa::Subscription::SubscriptionManagement">
     <StructElement description="List of subscribable objects or Types." name="subscribableObjects">
       <DataTypeRefParam dataType="std::vector">
          <DataTypeRefParam dataType="Teamcenter::POM_object"/>
       </DataTypeRefParam>
     </StructElement>
     <StructElement description="List of non subscribable objects or types." name="nonSubscribableObjects">
       <DataTypeRefParam dataType="std::vector">
          <DataTypeRefParam dataType="Teamcenter::POM_object"/>
       </DataTypeRefParam>
     </StructElement>
     <StructElement description="ServiceData object associated with the operation, contains business objects in plain list with inflated properties." name="serviceData">
       <DataTypeRefParam dataType="Teamcenter::Soa::Server::ServiceData"/>
     </StructElement>
   </Struct>
   <OperationTemplate accessControl="false" const="false" createRelease="Awp04.0.0" description="This operation returns all the mapped event types for the input business object or the business object type. The event type and its mapping to the business object type is defined through BMIDE.&lt;br /&gt;&lt;br /&gt;Each event type, of business object type &lt;b&gt;ImanEventType&lt;/b&gt;, represents the possible event on the business objects e.g. Checkout, Delete, Cancel Checkout etc.&lt;br /&gt;&lt;br /&gt;The event type is mapped to a business object type by defining the event type mapping. The event type mapping are of business object type &lt;b&gt;EventTypeMapping&lt;/b&gt; in the Teamcenter database.&lt;br /&gt;&lt;br /&gt;The event type is used to define the subscriptions for a business object or type and system notifies the followers when the subscribed event occurs.&lt;br /&gt;&lt;br /&gt;This operation optionally takes existing subscription business objects of type ImanSubscription to find which event types are already subscribed and client is requesting to filter the already subscribed event types." id="Sub0::Soa::Internal::Subscription::_2018_05::SubscriptionManagement::GetApplicableEventTypesResponse#Sub0::Soa::Subscription::SubscriptionManagement::getApplicableEventTypes#const,Teamcenter::POM_object,&amp;$const,std::vector&lt;Teamcenter::ImanSubscription&gt;,&amp;" name="Sub0::Soa::Subscription::SubscriptionManagement::getApplicableEventTypes" returnConst="false" returnDescription="ServiceData with applicable ImanEventType business objects added to the plain list.&lt;br /&gt;&lt;br /&gt;The following partial error may be returned for action which failed to execute:&lt;br /&gt;&lt;br /&gt;&lt;ul&gt;&lt;ul&gt;&lt;li type=&quot;disc&quot;&gt;76007       The input object type is invalid.&lt;/li&gt;&lt;/ul&gt;&lt;/ul&gt;" returnFreeMemory="false" static="false">
     <OperationReturnDataTypeRef dataType="Sub0::Soa::Internal::Subscription::_2018_05::SubscriptionManagement::GetApplicableEventTypesResponse" qualifier=""/>
     <OperationParameter const="true" defaultValue="" description="Input business object of type &lt;b&gt;POM_object &lt;/b&gt;for which event types are to be fetched." freeOutputMemory="false" inputOutput="Input" name="objectOrType">
       <OperationParameterDataTypeRef dataType="Teamcenter::POM_object" qualifier="&amp;"/>
     </OperationParameter>
     <OperationParameter const="true" defaultValue="" description="A list of subscription business objects of type &lt;b&gt;ImanSubscription&lt;/b&gt; used to filter the output event types." freeOutputMemory="false" inputOutput="Input" name="subscriptionsToFilter">
       <OperationParameterDataTypeRef dataType="std::vector" qualifier="&amp;">
          <DataTypeRefParam dataType="Teamcenter::ImanSubscription" qualifier=""/>
       </OperationParameterDataTypeRef>
     </OperationParameter>
   </OperationTemplate>
   <OperationTemplate const="false" createRelease="Awp04.0.0" description="This operation returns the declarative view and view model, as string, to render the create panel of the subscription business object. The declarative view is custom HTML tag based, underlying framework agnostic, Active Worksapce format whereas declarative view model is JSON format based configuration to support the rendering, actions and localization for the view.&lt;br /&gt;&lt;br /&gt;The input attributes on the create panel of the subscription business object is governed by the the business object or business object type and the selected event type.&lt;br /&gt;&lt;br /&gt;While creating the subscription business object, the selected event type of business object type &lt;b&gt;ImanEventType&lt;/b&gt; is the major driver for the create panel. Event type could be standard event type e.g. Delete, Cancel Checkout or assigning status to the business object or relating some other business object or when new revisions are created for the &lt;b&gt;Item&lt;/b&gt; object types.&lt;br /&gt;&lt;br /&gt;This operation is invoked from the Active Worksapce client after user makes a selection of the object or a business object type, called follow type and the event type." id="Sub0::Soa::Internal::Subscription::_2018_05::SubscriptionManagement::GetSubscriptionViewResponse#Sub0::Soa::Subscription::SubscriptionManagement::getSubscriptionCreationView#const,Teamcenter::POM_object,&amp;$const,Teamcenter::ImanEventType,&amp;" name="Sub0::Soa::Subscription::SubscriptionManagement::getSubscriptionCreationView" returnConst="false" returnDescription="The declarative view and view model as string with the ServiceData.&lt;br /&gt;&lt;br /&gt;The following partial error may be returned for action which failed to execute:&lt;br /&gt;&lt;br /&gt;&lt;ul&gt;&lt;ul&gt;&lt;li type=&quot;disc&quot;&gt;76007     The input object type is invalid.&lt;/li&gt;&lt;/ul&gt;&lt;/ul&gt;" returnFreeMemory="false" static="false">
     <OperationReturnDataTypeRef dataType="Sub0::Soa::Internal::Subscription::_2018_05::SubscriptionManagement::GetSubscriptionViewResponse" qualifier=""/>
     <OperationParameter const="true" defaultValue="" description="Input business object of type &lt;b&gt;POM_object&lt;/b&gt; for which event types are to be retrieved." freeOutputMemory="false" inputOutput="Input" name="objectOrType">
       <OperationParameterDataTypeRef dataType="Teamcenter::POM_object" qualifier="&amp;"/>
     </OperationParameter>
     <OperationParameter const="true" defaultValue="" description="Input business object of type &lt;b&gt;ImanEventType&lt;/b&gt;, which is main driver for the view and view model of the subscription business object create panel." freeOutputMemory="false" inputOutput="Input" name="eventType">
       <OperationParameterDataTypeRef dataType="Teamcenter::ImanEventType" qualifier="&amp;"/>
     </OperationParameter>
   </OperationTemplate>
   <OperationTemplate const="false" createRelease="Awp04.1.0" description="This operation returns list of event types which is subset of,&lt;br /&gt;&amp;bull;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;User configured list of event types applicable for a given input object type.&lt;br /&gt;&amp;bull;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;Filters out already subscribed event types for the input object.&lt;br /&gt;&amp;bull;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;If the input object is null, it would return all the event types configured by the logged in user.&lt;br /&gt;&lt;br /&gt;This filtered list of event types is used for subscribing object to multiple events in Active Workspace.&lt;br /&gt;&lt;br /&gt;Each user can configure his/her favorite list of event types which internally is stored in a user preference, AWC_followMultiEventConfiguredEventTypes.&lt;br /&gt;&lt;br /&gt;Event type and its mapping is configured through BMIDE. Subscribable flag is defined on event type mapping in BMIDE." id="Teamcenter::Soa::Server::ServiceData#Sub0::Soa::Subscription::SubscriptionManagement::getApplicableConfiguredEvents#const,Teamcenter::POM_object,&amp;" name="Sub0::Soa::Subscription::SubscriptionManagement::getApplicableConfiguredEvents" returnConst="false" returnDescription="ServiceData with &lt;b&gt;ImanEventType&lt;/b&gt; business objects added to the plain list.&lt;br /&gt;The following partial error may be returned for action which failed to execute:&lt;br /&gt;&lt;ul&gt;&lt;ul&gt;&lt;li type=&quot;disc&quot;&gt;78011 Invalid parameters.&lt;/li&gt;&lt;li type=&quot;disc&quot;&gt;76007 The input object type is invalid.&lt;/li&gt;&lt;/ul&gt;&lt;/ul&gt;" returnFreeMemory="false" static="false">
     <OperationReturnDataTypeRef dataType="Teamcenter::Soa::Server::ServiceData" qualifier=""/>
     <OperationParameter const="true" defaultValue="" description="Input business object of type &lt;b&gt;POM_object&lt;/b&gt; for which to filter subscribable event types." freeOutputMemory="false" inputOutput="Input" name="inObject">
       <OperationParameterDataTypeRef dataType="Teamcenter::POM_object" qualifier="&amp;"/>
     </OperationParameter>
   </OperationTemplate>
   <OperationTemplate const="false" createRelease="Awp04.1.0" description="This operation returns all the subscribable event types in the system.&lt;br /&gt;Event type and its mapping is configured through BMIDE from the Extensions section, by navigating to &amp;ldquo;Audit Manager&amp;rdquo; and &amp;ldquo;Event Type Mappings&amp;rdquo;.&lt;br /&gt;Each event type, of business object type &lt;b&gt;ImanEventType&lt;/b&gt;, represents the possible event on the business objects e.g. Checkout, Delete, Cancel Checkout etc.&lt;br /&gt;&lt;br /&gt;The event type is mapped to a business object type by defining the event type mapping. The event type mapping are of business object type &lt;b&gt;EventTypeMapping&lt;/b&gt; in the Teamcenter database.&lt;br /&gt;&lt;br /&gt;Subscribable flag is a property on the &lt;b&gt;EventTypeMapping&lt;/b&gt;, can be configured through BMIDE. Which defines whether user can create a subscription for this &lt;b&gt;EventTypeMapping&lt;/b&gt; (business object type and event type combination)." id="Teamcenter::Soa::Server::ServiceData#Sub0::Soa::Subscription::SubscriptionManagement::getAllSubscribableEventTypes" name="Sub0::Soa::Subscription::SubscriptionManagement::getAllSubscribableEventTypes" returnConst="false" returnDescription="ServiceData with &lt;b&gt;ImanEventType&lt;/b&gt; business objects added to the plain list.&lt;br /&gt;&lt;br /&gt;The following partial error may be returned for action which failed to execute:&lt;br /&gt;&lt;ul&gt;&lt;ul&gt;&lt;li type=&quot;disc&quot;&gt;730001 EventTypeMapping class internal error.&lt;/li&gt;&lt;/ul&gt;&lt;/ul&gt;" returnFreeMemory="false" static="false">
     <OperationReturnDataTypeRef dataType="Teamcenter::Soa::Server::ServiceData" qualifier=""/>
   </OperationTemplate>
   <OperationTemplate const="false" createRelease="Awp04.1.0" description="This operation returns the declarative view and view model, as string, to render the create panel of the subscription business object. The declarative view is custom tag based, underlying framework agnostic, Active Worksapce html format whereas declarative view model is JSON format based configuration to support the rendering, actions and localization for the view.&lt;br /&gt;&lt;br /&gt;The input attributes on the create panel of the subscription business object is governed by the the business object or business object type and the selected event type.&lt;br /&gt;&lt;br /&gt;In case of multiple objects or events types are passed as an input paramater it renders the view and view model accrodingly.&lt;br /&gt;&lt;br /&gt;While creating the subscription business object, the selected event type of business object type ImanEventType is the major driver for the create panel. Event type could be standard event type e.g. Delete, Cancel Checkout or assigning status to the business object or relating some other business object or when new revisions are created for the Item business object types.&lt;br /&gt;&lt;br /&gt;This operation is invoked from the Active Worksapce client after user makes a selection of the object or a business object type, called follow type and the event type." id="Sub0::Soa::Internal::Subscription::_2018_12::SubscriptionManagement::GetSubscriptionViewAndModelResponse#Sub0::Soa::Subscription::SubscriptionManagement::getSubscriptionViewAndViewModel#const,std::vector&lt;Teamcenter::POM_object&gt;,&amp;$const,std::vector&lt;Teamcenter::ImanEventType&gt;,&amp;" name="Sub0::Soa::Subscription::SubscriptionManagement::getSubscriptionViewAndViewModel" returnConst="false" returnDescription="The declarative view and view model as string with the ServiceData.&lt;br /&gt;The following partial error may be returned for action which failed to execute:&lt;br /&gt;76007 The input object type is invalid." returnFreeMemory="false" static="false">
     <OperationReturnDataTypeRef dataType="Sub0::Soa::Internal::Subscription::_2018_12::SubscriptionManagement::GetSubscriptionViewAndModelResponse" qualifier=""/>
     <OperationParameter const="true" defaultValue="" description="Input list of business objects or business object types for which view and viewmodel needs to be returned." freeOutputMemory="false" inputOutput="Input" name="objectsOrTypes">
       <OperationParameterDataTypeRef dataType="std::vector" qualifier="&amp;">
          <DataTypeRefParam dataType="Teamcenter::POM_object" qualifier=""/>
       </OperationParameterDataTypeRef>
     </OperationParameter>
     <OperationParameter const="true" defaultValue="" description="Input list of event types which is main driver for the view and view model of the subscription business object create panel." freeOutputMemory="false" inputOutput="Input" name="eventTypes">
       <OperationParameterDataTypeRef dataType="std::vector" qualifier="&amp;">
          <DataTypeRefParam dataType="Teamcenter::ImanEventType" qualifier=""/>
       </OperationParameterDataTypeRef>
     </OperationParameter>
   </OperationTemplate>
   <OperationTemplate const="false" createRelease="Awp04.1.0" description="This operation returns common event types for the input business objects or the business object types. The event type and its mapping to the business object type is defined through BMIDE.&lt;br /&gt;&lt;br /&gt;Each event type, of business object type ImanEventType, represents the possible event on the business objects e.g. Checkout, Delete, Cancel Checkout etc.&lt;br /&gt;&lt;br /&gt;The event type is mapped to a business object type by defining the event type mapping. The event type mapping are of business object type EventTypeMapping in the Teamcenter database.&lt;br /&gt;&lt;br /&gt;The event type is used to define the subscriptions for a business object or type and system notifies the followers when the subscribed event occurs.&lt;br /&gt;&lt;br /&gt;This operation filters the already subscribed event types. This filtering of event types is only applicable,&lt;br /&gt;&lt;ul&gt;&lt;ul&gt;&lt;li type=&quot;disc&quot;&gt;To business objects, not to types.&lt;/li&gt;&lt;li type=&quot;disc&quot;&gt;When there is only single object input for objectsOrTypes.&lt;/li&gt;&lt;/ul&gt;&lt;/ul&gt;" id="Sub0::Soa::Internal::Subscription::_2018_12::SubscriptionManagement::GetApplCommonEventTypesResponse#Sub0::Soa::Subscription::SubscriptionManagement::getApplicableCommonEventTypes#const,std::vector&lt;Teamcenter::POM_object&gt;,&amp;" name="Sub0::Soa::Subscription::SubscriptionManagement::getApplicableCommonEventTypes" returnConst="false" returnDescription="ServiceData with applicable common ImanEventType business objects added to the plain list.&lt;br /&gt;The following partial error may be returned for action which failed to execute:&lt;br /&gt;&lt;ul&gt;&lt;ul&gt;&lt;li type=&quot;disc&quot;&gt;78003 You are trying to subscribe to an invalid target.&lt;/li&gt;&lt;li type=&quot;disc&quot;&gt;78011 Invalid parameters.&lt;/li&gt;&lt;/ul&gt;&lt;/ul&gt;" returnFreeMemory="false" static="false">
     <OperationReturnDataTypeRef dataType="Sub0::Soa::Internal::Subscription::_2018_12::SubscriptionManagement::GetApplCommonEventTypesResponse" qualifier=""/>
     <OperationParameter const="true" defaultValue="" description="Input business objects of type POM_object for which common event types are to be fetched." freeOutputMemory="false" inputOutput="Input" name="objectsOrTypes">
       <OperationParameterDataTypeRef dataType="std::vector" qualifier="&amp;">
          <DataTypeRefParam dataType="Teamcenter::POM_object" qualifier=""/>
       </OperationParameterDataTypeRef>
     </OperationParameter>
   </OperationTemplate>
   <OperationTemplate const="false" createRelease="Awp04.1.0" description="This operation identifies the list of input objects which can be subscribed for event notification. A filtered list of subscribable and non subscribable objects are returned.&lt;br /&gt;&lt;br /&gt;Subscribable flag is defined on event type mapping in BMIDE." id="Sub0::Soa::Internal::Subscription::_2018_12::SubscriptionManagement::ValidateSubscribableTypesResponse#Sub0::Soa::Subscription::SubscriptionManagement::validateSubscribableTypes#const,std::vector&lt;Teamcenter::POM_object&gt;,&amp;" name="Sub0::Soa::Subscription::SubscriptionManagement::validateSubscribableTypes" returnConst="false" returnDescription="ServiceData with the list of subscribable and non subscribable business objects added to the plain list.&lt;br /&gt;The following partial error may be returned for action which failed to execute:&lt;br /&gt;&lt;ul&gt;&lt;ul&gt;&lt;li type=&quot;disc&quot;&gt;78003 You are trying to subscribe to an invalid target.&lt;/li&gt;&lt;li type=&quot;disc&quot;&gt;78011 Invalid parameters.&lt;/li&gt;&lt;/ul&gt;&lt;/ul&gt;" returnFreeMemory="false" static="false">
     <OperationReturnDataTypeRef dataType="Sub0::Soa::Internal::Subscription::_2018_12::SubscriptionManagement::ValidateSubscribableTypesResponse" qualifier=""/>
     <OperationParameter const="true" defaultValue="" description="Input business objects of type POM_object to classify it as subscribable and non subscribable object." freeOutputMemory="false" inputOutput="Input" name="objectsOrTypes">
       <OperationParameterDataTypeRef dataType="std::vector" qualifier="&amp;">
          <DataTypeRefParam dataType="Teamcenter::POM_object" qualifier=""/>
       </OperationParameterDataTypeRef>
     </OperationParameter>
   </OperationTemplate>
   <Operation canOverride="false" component="Fnd0SubscriptionManagement" createRelease="Awp04.1.0" dependencies="" description="This operation returns list of event types which is subset of,&lt;br /&gt;&amp;bull;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;User configured list of event types applicable for a given input object type.&lt;br /&gt;&amp;bull;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;Filters out already subscribed event types for the input object.&lt;br /&gt;&amp;bull;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;If the input object is null, it would return all the event types configured by the logged in user.&lt;br /&gt;&lt;br /&gt;This filtered list of event types is used for subscribing object to multiple events in Active Workspace.&lt;br /&gt;&lt;br /&gt;Each user can configure his/her favorite list of event types which internally is stored in a user preference, AWC_followMultiEventConfiguredEventTypes.&lt;br /&gt;&lt;br /&gt;Event type and its mapping is configured through BMIDE. Subscribable flag is defined on event type mapping in BMIDE." exceptionCondition="" id="getApplicableConfiguredEvents#const,Teamcenter::POM_object,&amp;" interface="Sub0::Soa::Subscription::SubscriptionManagement" isPostActionAllowed="false" isPreActionAllowed="false" isPreConditionAllowed="false" isPublished="false" name="getApplicableConfiguredEvents" opTemplate="Teamcenter::Soa::Server::ServiceData#Sub0::Soa::Subscription::SubscriptionManagement::getApplicableConfiguredEvents#const,Teamcenter::POM_object,&amp;" returnDescription="ServiceData with &lt;b&gt;ImanEventType&lt;/b&gt; business objects added to the plain list.&lt;br /&gt;The following partial error may be returned for action which failed to execute:&lt;br /&gt;&lt;ul&gt;&lt;ul&gt;&lt;li type=&quot;disc&quot;&gt;78011 Invalid parameters.&lt;/li&gt;&lt;li type=&quot;disc&quot;&gt;76007 The input object type is invalid.&lt;/li&gt;&lt;/ul&gt;&lt;/ul&gt;" useCase="">
     <ParameterInfo description="Input business object of type &lt;b&gt;POM_object&lt;/b&gt; for which to filter subscribable event types." parameterName="inObject"/>
   </Operation>
   <Operation canOverride="false" component="Fnd0SubscriptionManagement" createRelease="Awp04.1.0" dependencies="" description="This operation returns all the subscribable event types in the system.&lt;br /&gt;Event type and its mapping is configured through BMIDE from the Extensions section, by navigating to &amp;ldquo;Audit Manager&amp;rdquo; and &amp;ldquo;Event Type Mappings&amp;rdquo;.&lt;br /&gt;Each event type, of business object type &lt;b&gt;ImanEventType&lt;/b&gt;, represents the possible event on the business objects e.g. Checkout, Delete, Cancel Checkout etc.&lt;br /&gt;&lt;br /&gt;The event type is mapped to a business object type by defining the event type mapping. The event type mapping are of business object type &lt;b&gt;EventTypeMapping&lt;/b&gt; in the Teamcenter database.&lt;br /&gt;&lt;br /&gt;Subscribable flag is a property on the &lt;b&gt;EventTypeMapping&lt;/b&gt;, can be configured through BMIDE. Which defines whether user can create a subscription for this &lt;b&gt;EventTypeMapping&lt;/b&gt; (business object type and event type combination)." exceptionCondition="" id="getAllSubscribableEventTypes#" interface="Sub0::Soa::Subscription::SubscriptionManagement" isPostActionAllowed="false" isPreActionAllowed="false" isPreConditionAllowed="false" isPublished="false" name="getAllSubscribableEventTypes" opTemplate="Teamcenter::Soa::Server::ServiceData#Sub0::Soa::Subscription::SubscriptionManagement::getAllSubscribableEventTypes" returnDescription="ServiceData with &lt;b&gt;ImanEventType&lt;/b&gt; business objects added to the plain list.&lt;br /&gt;&lt;br /&gt;The following partial error may be returned for action which failed to execute:&lt;br /&gt;&lt;ul&gt;&lt;ul&gt;&lt;li type=&quot;disc&quot;&gt;730001 EventTypeMapping class internal error.&lt;/li&gt;&lt;/ul&gt;&lt;/ul&gt;" useCase=""/>
   <Operation canOverride="false" component="Fnd0SubscriptionManagement" createRelease="Awp04.1.0" dependencies="" description="This operation returns common event types for the input business objects or the business object types. The event type and its mapping to the business object type is defined through BMIDE.&lt;br /&gt;&lt;br /&gt;Each event type, of business object type ImanEventType, represents the possible event on the business objects e.g. Checkout, Delete, Cancel Checkout etc.&lt;br /&gt;&lt;br /&gt;The event type is mapped to a business object type by defining the event type mapping. The event type mapping are of business object type EventTypeMapping in the Teamcenter database.&lt;br /&gt;&lt;br /&gt;The event type is used to define the subscriptions for a business object or type and system notifies the followers when the subscribed event occurs.&lt;br /&gt;&lt;br /&gt;This operation filters the already subscribed event types. This filtering of event types is only applicable,&lt;br /&gt;&lt;ul&gt;&lt;ul&gt;&lt;li type=&quot;disc&quot;&gt;To business objects, not to types.&lt;/li&gt;&lt;li type=&quot;disc&quot;&gt;When there is only single object input for objectsOrTypes.&lt;/li&gt;&lt;/ul&gt;&lt;/ul&gt;" exceptionCondition="" id="getApplicableCommonEventTypes#const,std::vector&lt;Teamcenter::POM_object&gt;,&amp;" interface="Sub0::Soa::Subscription::SubscriptionManagement" isPostActionAllowed="false" isPreActionAllowed="false" isPreConditionAllowed="false" isPublished="false" name="getApplicableCommonEventTypes" opTemplate="Sub0::Soa::Internal::Subscription::_2018_12::SubscriptionManagement::GetApplCommonEventTypesResponse#Sub0::Soa::Subscription::SubscriptionManagement::getApplicableCommonEventTypes#const,std::vector&lt;Teamcenter::POM_object&gt;,&amp;" returnDescription="ServiceData with applicable common ImanEventType business objects added to the plain list.&lt;br /&gt;The following partial error may be returned for action which failed to execute:&lt;br /&gt;&lt;ul&gt;&lt;ul&gt;&lt;li type=&quot;disc&quot;&gt;78003 You are trying to subscribe to an invalid target.&lt;/li&gt;&lt;li type=&quot;disc&quot;&gt;78011 Invalid parameters.&lt;/li&gt;&lt;/ul&gt;&lt;/ul&gt;" useCase="">
     <ParameterInfo description="Input business objects of type POM_object for which common event types are to be fetched." parameterName="objectsOrTypes"/>
   </Operation>
   <Operation canOverride="false" component="Fnd0SubscriptionManagement" createRelease="Awp04.0.0" dependencies="" description="This operation returns all the mapped event types for the input business object or the business object type. The event type and its mapping to the business object type is defined through BMIDE.&lt;br /&gt;&lt;br /&gt;Each event type, of business object type &lt;b&gt;ImanEventType&lt;/b&gt;, represents the possible event on the business objects e.g. Checkout, Delete, Cancel Checkout etc.&lt;br /&gt;&lt;br /&gt;The event type is mapped to a business object type by defining the event type mapping. The event type mapping are of business object type &lt;b&gt;EventTypeMapping&lt;/b&gt; in the Teamcenter database.&lt;br /&gt;&lt;br /&gt;The event type is used to define the subscriptions for a business object or type and system notifies the followers when the subscribed event occurs.&lt;br /&gt;&lt;br /&gt;This operation optionally takes existing subscription business objects of type ImanSubscription to find which event types are already subscribed and client is requesting to filter the already subscribed event types." exceptionCondition="" id="getApplicableEventTypes#const,Teamcenter::POM_object,&amp;$const,std::vector&lt;Teamcenter::ImanSubscription&gt;,&amp;" interface="Sub0::Soa::Subscription::SubscriptionManagement" isPostActionAllowed="false" isPreActionAllowed="false" isPreConditionAllowed="false" isPublished="false" name="getApplicableEventTypes" opTemplate="Sub0::Soa::Internal::Subscription::_2018_05::SubscriptionManagement::GetApplicableEventTypesResponse#Sub0::Soa::Subscription::SubscriptionManagement::getApplicableEventTypes#const,Teamcenter::POM_object,&amp;$const,std::vector&lt;Teamcenter::ImanSubscription&gt;,&amp;" returnDescription="ServiceData with applicable ImanEventType business objects added to the plain list.&lt;br /&gt;&lt;br /&gt;The following partial error may be returned for action which failed to execute:&lt;br /&gt;&lt;br /&gt;&lt;ul&gt;&lt;ul&gt;&lt;li type=&quot;disc&quot;&gt;76007       The input object type is invalid.&lt;/li&gt;&lt;/ul&gt;&lt;/ul&gt;" useCase="">
     <DeprecationInfo deprecatedDescription="Use getApplicableCommonEventTypes as a replacement.&#10;Which supports multiple input objects or types and returns common applicable event types." deprecatedRelease="Awp04.1.0"/>
     <ParameterInfo description="Input business object of type &lt;b&gt;POM_object &lt;/b&gt;for which event types are to be fetched." parameterName="objectOrType"/>
     <ParameterInfo description="A list of subscription business objects of type &lt;b&gt;ImanSubscription&lt;/b&gt; used to filter the output event types." parameterName="subscriptionsToFilter"/>
   </Operation>
   <Operation canOverride="false" component="Fnd0SubscriptionManagement" createRelease="Awp04.0.0" dependencies="" description="This operation returns the declarative view and view model, as string, to render the create panel of the subscription business object. The declarative view is custom HTML tag based, underlying framework agnostic, Active Worksapce format whereas declarative view model is JSON format based configuration to support the rendering, actions and localization for the view.&lt;br /&gt;&lt;br /&gt;The input attributes on the create panel of the subscription business object is governed by the the business object or business object type and the selected event type.&lt;br /&gt;&lt;br /&gt;While creating the subscription business object, the selected event type of business object type &lt;b&gt;ImanEventType&lt;/b&gt; is the major driver for the create panel. Event type could be standard event type e.g. Delete, Cancel Checkout or assigning status to the business object or relating some other business object or when new revisions are created for the &lt;b&gt;Item&lt;/b&gt; object types.&lt;br /&gt;&lt;br /&gt;This operation is invoked from the Active Worksapce client after user makes a selection of the object or a business object type, called follow type and the event type." exceptionCondition="" id="getSubscriptionCreationView#const,Teamcenter::POM_object,&amp;$const,Teamcenter::ImanEventType,&amp;" interface="Sub0::Soa::Subscription::SubscriptionManagement" isPostActionAllowed="false" isPreActionAllowed="false" isPreConditionAllowed="false" isPublished="false" name="getSubscriptionCreationView" opTemplate="Sub0::Soa::Internal::Subscription::_2018_05::SubscriptionManagement::GetSubscriptionViewResponse#Sub0::Soa::Subscription::SubscriptionManagement::getSubscriptionCreationView#const,Teamcenter::POM_object,&amp;$const,Teamcenter::ImanEventType,&amp;" returnDescription="The declarative view and view model as string with the ServiceData.&lt;br /&gt;&lt;br /&gt;The following partial error may be returned for action which failed to execute:&lt;br /&gt;&lt;br /&gt;&lt;ul&gt;&lt;ul&gt;&lt;li type=&quot;disc&quot;&gt;76007     The input object type is invalid.&lt;/li&gt;&lt;/ul&gt;&lt;/ul&gt;" useCase="">
     <DeprecationInfo deprecatedDescription="Use getSubscriptionViewAndViewModel as a replacement. Which supports multiple input objects or types and event types. Returns view and viewmodel as string based on input parameters." deprecatedRelease="Awp04.1.0"/>
     <ParameterInfo description="Input business object of type &lt;b&gt;POM_object&lt;/b&gt; for which event types are to be retrieved." parameterName="objectOrType"/>
     <ParameterInfo description="Input business object of type &lt;b&gt;ImanEventType&lt;/b&gt;, which is main driver for the view and view model of the subscription business object create panel." parameterName="eventType"/>
   </Operation>
   <Operation canOverride="false" component="Fnd0SubscriptionManagement" createRelease="Awp04.1.0" dependencies="" description="This operation returns the declarative view and view model, as string, to render the create panel of the subscription business object. The declarative view is custom tag based, underlying framework agnostic, Active Worksapce html format whereas declarative view model is JSON format based configuration to support the rendering, actions and localization for the view.&lt;br /&gt;&lt;br /&gt;The input attributes on the create panel of the subscription business object is governed by the the business object or business object type and the selected event type.&lt;br /&gt;&lt;br /&gt;In case of multiple objects or events types are passed as an input paramater it renders the view and view model accrodingly.&lt;br /&gt;&lt;br /&gt;While creating the subscription business object, the selected event type of business object type ImanEventType is the major driver for the create panel. Event type could be standard event type e.g. Delete, Cancel Checkout or assigning status to the business object or relating some other business object or when new revisions are created for the Item business object types.&lt;br /&gt;&lt;br /&gt;This operation is invoked from the Active Worksapce client after user makes a selection of the object or a business object type, called follow type and the event type." exceptionCondition="" id="getSubscriptionViewAndViewModel#const,std::vector&lt;Teamcenter::POM_object&gt;,&amp;$const,std::vector&lt;Teamcenter::ImanEventType&gt;,&amp;" interface="Sub0::Soa::Subscription::SubscriptionManagement" isPostActionAllowed="false" isPreActionAllowed="false" isPreConditionAllowed="false" isPublished="false" name="getSubscriptionViewAndViewModel" opTemplate="Sub0::Soa::Internal::Subscription::_2018_12::SubscriptionManagement::GetSubscriptionViewAndModelResponse#Sub0::Soa::Subscription::SubscriptionManagement::getSubscriptionViewAndViewModel#const,std::vector&lt;Teamcenter::POM_object&gt;,&amp;$const,std::vector&lt;Teamcenter::ImanEventType&gt;,&amp;" returnDescription="The declarative view and view model as string with the ServiceData.&lt;br /&gt;The following partial error may be returned for action which failed to execute:&lt;br /&gt;76007 The input object type is invalid." useCase="">
     <ParameterInfo description="Input list of business objects or business object types for which view and viewmodel needs to be returned." parameterName="objectsOrTypes"/>
     <ParameterInfo description="Input list of event types which is main driver for the view and view model of the subscription business object create panel." parameterName="eventTypes"/>
   </Operation>
   <Operation canOverride="false" component="Fnd0SubscriptionManagement" createRelease="Awp04.1.0" dependencies="" description="This operation identifies the list of input objects which can be subscribed for event notification. A filtered list of subscribable and non subscribable objects are returned.&lt;br /&gt;&lt;br /&gt;Subscribable flag is defined on event type mapping in BMIDE." exceptionCondition="" id="validateSubscribableTypes#const,std::vector&lt;Teamcenter::POM_object&gt;,&amp;" interface="Sub0::Soa::Subscription::SubscriptionManagement" isPostActionAllowed="false" isPreActionAllowed="false" isPreConditionAllowed="false" isPublished="false" name="validateSubscribableTypes" opTemplate="Sub0::Soa::Internal::Subscription::_2018_12::SubscriptionManagement::ValidateSubscribableTypesResponse#Sub0::Soa::Subscription::SubscriptionManagement::validateSubscribableTypes#const,std::vector&lt;Teamcenter::POM_object&gt;,&amp;" returnDescription="ServiceData with the list of subscribable and non subscribable business objects added to the plain list.&lt;br /&gt;The following partial error may be returned for action which failed to execute:&lt;br /&gt;&lt;ul&gt;&lt;ul&gt;&lt;li type=&quot;disc&quot;&gt;78003 You are trying to subscribe to an invalid target.&lt;/li&gt;&lt;li type=&quot;disc&quot;&gt;78011 Invalid parameters.&lt;/li&gt;&lt;/ul&gt;&lt;/ul&gt;" useCase="">
     <ParameterInfo description="Input business objects of type POM_object to classify it as subscribable and non subscribable object." parameterName="objectsOrTypes"/>
   </Operation>
   <PropertyFormatterAttach conditionName="isTrue" formatterName="Fnd0DoubleFormatter_6DecimalPlaces" propertyName="fnd0rollupAccuracy" typeName="ItemRevision"/>
</Add>
    <Change/>
    <Delete/>
</TcBusinessData>
